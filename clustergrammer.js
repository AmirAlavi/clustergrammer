var Clustergrammer =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	eval("var make_config = __webpack_require__(1);\nvar make_params = __webpack_require__(5);\nvar make_viz = __webpack_require__(14);\n\n/* clustergrammer 1.0\n * Nick Fernandez, Ma'ayan Lab, Icahn School of Medicine at Mount Sinai\n * (c) 2016\n */\nfunction Clustergrammer(args) {\n\n  /* Main program\n   * ----------------------------------------------------------------------- */\n  // consume and validate user input\n  // build giant config object\n  // visualize based on config object\n  // handle user events\n\n  // consume and validate user arguments, produce configuration object\n  var config = make_config(args);\n  // make visualization parameters using configuration object\n  var params = make_params(config);\n  // make visualization using parameters\n  var viz = make_viz(params);\n\n  if (params.use_sidebar) {\n    var make_sidebar = __webpack_require__(50);\n    make_sidebar(config, params);\n  }\n\n  return {\n    params: params,\n    config: config,\n    find_entity: viz.find_entity,\n    get_entities: viz.get_entities,\n    reorder: __webpack_require__(42),\n    opacity_slider: viz.opacity_slider,\n    opacity_function: viz.opacity_function,\n    resize: viz.run_reset_visualization_size,\n    reset_zoom: viz.reset_zoom,\n    change_category: __webpack_require__(49)\n  };\n}\n\nmodule.exports = Clustergrammer;//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy9zcmMvbWFpbi5qcz8xYzkwIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBtYWtlX2NvbmZpZyA9IHJlcXVpcmUoJy4vY29uZmlnJyk7XG52YXIgbWFrZV9wYXJhbXMgPSByZXF1aXJlKCcuL3BhcmFtcycpO1xudmFyIG1ha2Vfdml6ID0gcmVxdWlyZSgnLi92aXonKTtcblxuLyogY2x1c3RlcmdyYW1tZXIgMS4wXG4gKiBOaWNrIEZlcm5hbmRleiwgTWEnYXlhbiBMYWIsIEljYWhuIFNjaG9vbCBvZiBNZWRpY2luZSBhdCBNb3VudCBTaW5haVxuICogKGMpIDIwMTZcbiAqL1xuZnVuY3Rpb24gQ2x1c3RlcmdyYW1tZXIoYXJncykge1xuXG4gIC8qIE1haW4gcHJvZ3JhbVxuICAgKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuICAvLyBjb25zdW1lIGFuZCB2YWxpZGF0ZSB1c2VyIGlucHV0XG4gIC8vIGJ1aWxkIGdpYW50IGNvbmZpZyBvYmplY3RcbiAgLy8gdmlzdWFsaXplIGJhc2VkIG9uIGNvbmZpZyBvYmplY3RcbiAgLy8gaGFuZGxlIHVzZXIgZXZlbnRzXG5cbiAgLy8gY29uc3VtZSBhbmQgdmFsaWRhdGUgdXNlciBhcmd1bWVudHMsIHByb2R1Y2UgY29uZmlndXJhdGlvbiBvYmplY3RcbiAgdmFyIGNvbmZpZyA9IG1ha2VfY29uZmlnKGFyZ3MpO1xuICAvLyBtYWtlIHZpc3VhbGl6YXRpb24gcGFyYW1ldGVycyB1c2luZyBjb25maWd1cmF0aW9uIG9iamVjdFxuICB2YXIgcGFyYW1zID0gbWFrZV9wYXJhbXMoY29uZmlnKTtcbiAgLy8gbWFrZSB2aXN1YWxpemF0aW9uIHVzaW5nIHBhcmFtZXRlcnNcbiAgdmFyIHZpeiA9IG1ha2Vfdml6KHBhcmFtcyk7XG5cbiAgaWYgKHBhcmFtcy51c2Vfc2lkZWJhcikge1xuICAgIHZhciBtYWtlX3NpZGViYXIgPSByZXF1aXJlKCcuL3NpZGViYXIvJyk7XG4gICAgbWFrZV9zaWRlYmFyKGNvbmZpZywgcGFyYW1zKTtcbiAgfVxuXG4gIHJldHVybiB7XG4gICAgcGFyYW1zOiBwYXJhbXMsXG4gICAgY29uZmlnOiBjb25maWcsXG4gICAgZmluZF9lbnRpdHk6IHZpei5maW5kX2VudGl0eSxcbiAgICBnZXRfZW50aXRpZXM6IHZpei5nZXRfZW50aXRpZXMsXG4gICAgcmVvcmRlcjogcmVxdWlyZSgnLi9yZW9yZGVyL2FsbF9yZW9yZGVyJyksXG4gICAgb3BhY2l0eV9zbGlkZXI6IHZpei5vcGFjaXR5X3NsaWRlcixcbiAgICBvcGFjaXR5X2Z1bmN0aW9uOiB2aXoub3BhY2l0eV9mdW5jdGlvbixcbiAgICByZXNpemU6IHZpei5ydW5fcmVzZXRfdmlzdWFsaXphdGlvbl9zaXplLFxuICAgIHJlc2V0X3pvb206IHZpei5yZXNldF96b29tLFxuICAgIGNoYW5nZV9jYXRlZ29yeTogcmVxdWlyZSgnLi9uZXR3b3JrL2NoYW5nZV9jYXRlZ29yeScpXG4gIH07XG59XG5cbm1vZHVsZS5leHBvcnRzID0gQ2x1c3RlcmdyYW1tZXI7XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiBzcmMvbWFpbi5qc1xuICoqLyJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7Ozs7O0FBS0E7QUFDQTs7Ozs7Ozs7O0FBU0E7O0FBVkE7O0FBQUE7QUFDQTtBQWVBO0FBQ0E7QUFDQTtBQUZBO0FBQ0E7QUFJQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBVkE7QUFyQkE7QUFDQTtBQWtDQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ },
/* 1 */
/***/ function(module, exports, __webpack_require__) {

	eval("var utils = __webpack_require__(2);\nvar colors = __webpack_require__(3);\nvar transpose_network = __webpack_require__(4);\n\nmodule.exports = function (args) {\n  var defaults = {\n    // Label options\n    row_label_scale: 1,\n    col_label_scale: 1,\n    super_labels: false,\n    show_label_tooltips: false,\n    show_tile_tooltips: false,\n    // matrix options\n    transpose: false,\n    tile_colors: ['#FF0000', '#1C86EE'],\n    bar_colors: ['#FF0000', '#1C86EE'],\n    outline_colors: ['orange', 'black'],\n    highlight_color: '#FFFF00',\n    tile_title: false,\n    // Default domain is set to 0, which means that the domain will be set automatically\n    input_domain: 0,\n    opacity_scale: 'linear',\n    do_zoom: true,\n    background_color: '#FFFFFF',\n    super_border_color: '#F5F5F5',\n    resize: true,\n    outer_margins: {\n      top: 0,\n      bottom: 0,\n      left: 0,\n      right: 0\n    },\n    outer_margins_expand: {\n      top: -666,\n      bottom: 0,\n      left: 0,\n      right: 0\n    },\n    ini_expand: false,\n    // Gray border around the visualization\n    grey_border_width: 3,\n    // the distance between labels and clustergram\n    // a universal margin for the clustergram\n    uni_margin: 4,\n    // force the visualization to be square\n    force_square: 0,\n    tile_click_hlight: false,\n    super_label_scale: 1,\n    make_tile_tooltip: function (d) {\n      return d.info;\n    },\n    // initialize view, e.g. initialize with row filtering\n    ini_view: null,\n    // initialize column category - only show data from one category\n    current_col_cat: 'all_category',\n    use_sidebar: true\n  };\n  // Mixin defaults with user-defined arguments.\n  var config = utils.extend(defaults, args);\n\n  if (config.outer_margins_expand.top === -666) {\n    config.expand_button = false;\n  } else {\n    config.expand_button = true;\n  }\n\n  // save network_data to config\n  // extend does not properly pass network_data\n  config.network_data = args.network_data;\n\n  // replace undersores with space in row/col names\n  config.network_data.row_nodes.forEach(function (d) {\n    d.name = d.name.replace(/_/g, ' ');\n  });\n  config.network_data.col_nodes.forEach(function (d) {\n    d.name = d.name.replace(/_/g, ' ');\n  });\n\n  // process view row/col names\n  if (_.has(config.network_data, 'views')) {\n    config.network_data.views.forEach(function (inst_view) {\n\n      var inst_nodes = inst_view.nodes;\n\n      // fix rows in views\n      inst_nodes.row_nodes.forEach(function (d) {\n        d.name = d.name.replace(/_/g, ' ');\n      });\n\n      // fix cols in views\n      inst_nodes.col_nodes.forEach(function (d) {\n        d.name = d.name.replace(/_/g, ' ');\n      });\n    });\n  }\n\n  var col_nodes = config.network_data.col_nodes;\n  var row_nodes = config.network_data.row_nodes;\n\n  // add names and instantaneous positions to links\n  config.network_data.links.forEach(function (d) {\n    d.name = row_nodes[d.source].name + '_' + col_nodes[d.target].name;\n    d.row_name = row_nodes[d.source].name;\n    d.col_name = col_nodes[d.target].name;\n  });\n\n  // transpose network if necessary\n  if (config.transpose) {\n    config.network_data = transpose_network(args.network_data);\n    var tmp_col_label = args.col_label;\n    var tmp_row_label = args.row_label;\n    args.row_label = tmp_col_label;\n    args.col_label = tmp_row_label;\n  }\n\n  // super-row/col labels\n  if (!utils.is_undefined(args.row_label) && !utils.is_undefined(args.col_label)) {\n    config.super_labels = true;\n    config.super = {};\n    config.super.row = args.row_label;\n    config.super.col = args.col_label;\n  }\n\n  // initialize cluster ordering - both rows and columns\n  config.inst_order = {};\n  if (!utils.is_undefined(args.order) && utils.is_supported_order(args.order)) {\n    config.inst_order.row = args.order;\n    config.inst_order.col = args.order;\n  } else {\n    config.inst_order.row = 'clust';\n    config.inst_order.col = 'clust';\n  }\n\n  // set row or column order directly -- note that row/col are swapped\n  // !! need to swap row/col orderings\n  if (!utils.is_undefined(args.row_order) && utils.is_supported_order(args.row_order)) {\n    // !! row and col orderings are swapped, need to fix\n    config.inst_order.col = args.row_order;\n  }\n\n  if (!utils.is_undefined(args.col_order) && utils.is_supported_order(args.col_order)) {\n    // !! row and col orderings are swapped, need to fix\n    config.inst_order.row = args.col_order;\n  }\n\n  config.show_dendrogram = utils.has(args.network_data.row_nodes[0], 'group') || utils.has(args.network_data.col_nodes[0], 'group');\n  config.show_categories = utils.has(args.network_data.row_nodes[0], 'cl') || utils.has(args.network_data.col_nodes[0], 'cl');\n\n  // check for category information\n  if (config.show_categories) {\n\n    // initialize dictionary of colors\n    config.class_colors = {};\n\n    // associate classes with colors\n    var class_rows = _.uniq(_.pluck(args.network_data.row_nodes, 'cl'));\n    config.class_colors.row = {};\n    class_rows.forEach(function (c_row, i) {\n      if (i === 0) {\n        config.class_colors.row[c_row] = '#eee';\n      } else {\n        config.class_colors.row[c_row] = colors.get_random_color(i);\n      }\n    });\n\n    // associate classes with colors\n    var class_cols = _.uniq(_.pluck(args.network_data.col_nodes, 'cl'));\n    config.class_colors.col = {};\n\n    // custom column group colors\n    var cat_colors = ['#1f77b4', 'orange', '#8c564b', 'yellow', 'red', 'pink', 'blue', '#e377c2', 'grey'];\n\n    class_cols.forEach(function (c_col, i) {\n      config.class_colors.col[c_col] = cat_colors[i % cat_colors.length];\n    });\n\n    // generate a dictionary of columns in each category\n    config.class_dict = {};\n    col_nodes.forEach(function (d) {\n      // initialize array for each category\n      if (!utils.has(config.class_dict, d.cl)) {\n        config.class_dict[d.cl] = [];\n      }\n      // add column name to category array\n      config.class_dict[d.cl].push(d.name);\n    });\n  }\n\n  return config;\n};//@ sourceMappingURL=data:application/json;base64,");

/***/ },
/* 2 */
/***/ function(module, exports) {

	eval("\n/* Utility functions\n * ----------------------------------------------------------------------- */\nmodule.exports = {\n  normal_name: function (d, max_char) {\n    var inst_name = d.name.replace(/_/g, ' ').split('#')[0];\n    if (inst_name.length > max_char) {\n      inst_name = inst_name.substring(0, max_char) + '..';\n    }\n    return inst_name;\n  },\n  is_supported_order: function (order) {\n    return order === 'ini' || order === 'clust' || order === 'rank' || order === 'class';\n  },\n\n  /* Returns whether or not an object has a certain property.\n   */\n  has: function (obj, key) {\n    return obj != null && hasOwnProperty.call(obj, key);\n  },\n\n  /* Returns true if the object is undefined.\n   */\n  is_undefined: function (obj) {\n    return obj === void 0;\n  },\n\n  /* Mixes two objects in together, overwriting a target with a source.\n   */\n  extend: function (target, source) {\n    target = target || {};\n    for (var prop in source) {\n      if (typeof source[prop] === 'object') {\n        target[prop] = this.extend(target[prop], source[prop]);\n      } else {\n        target[prop] = source[prop];\n      }\n    }\n    return target;\n  }\n};//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMi5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy9zcmMvdXRpbHMuanM/MmI0YyJdLCJzb3VyY2VzQ29udGVudCI6WyJcbi8qIFV0aWxpdHkgZnVuY3Rpb25zXG4gKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xubW9kdWxlLmV4cG9ydHMgPSB7XG4gIG5vcm1hbF9uYW1lOiBmdW5jdGlvbihkLCBtYXhfY2hhcikge1xuICAgIHZhciBpbnN0X25hbWUgPSBkLm5hbWUucmVwbGFjZSgvXy9nLCAnICcpLnNwbGl0KCcjJylbMF07XG4gICAgaWYgKGluc3RfbmFtZS5sZW5ndGggPiBtYXhfY2hhcikge1xuICAgICAgaW5zdF9uYW1lID0gaW5zdF9uYW1lLnN1YnN0cmluZygwLCBtYXhfY2hhcikgKyAnLi4nO1xuICAgIH1cbiAgICByZXR1cm4gaW5zdF9uYW1lO1xuICB9LFxuICBpc19zdXBwb3J0ZWRfb3JkZXI6IGZ1bmN0aW9uKG9yZGVyKSB7XG4gICAgcmV0dXJuIG9yZGVyID09PSAnaW5pJyB8fCBvcmRlciA9PT0gJ2NsdXN0JyB8fCBvcmRlciA9PT0gJ3JhbmsnIHx8IG9yZGVyID09PSAnY2xhc3MnO1xuICB9LFxuXG4gIC8qIFJldHVybnMgd2hldGhlciBvciBub3QgYW4gb2JqZWN0IGhhcyBhIGNlcnRhaW4gcHJvcGVydHkuXG4gICAqL1xuICBoYXM6IGZ1bmN0aW9uKG9iaiwga2V5KSB7XG4gICAgcmV0dXJuIG9iaiAhPSBudWxsICYmIGhhc093blByb3BlcnR5LmNhbGwob2JqLCBrZXkpO1xuICB9LFxuXG4gIC8qIFJldHVybnMgdHJ1ZSBpZiB0aGUgb2JqZWN0IGlzIHVuZGVmaW5lZC5cbiAgICovXG4gIGlzX3VuZGVmaW5lZDogZnVuY3Rpb24ob2JqKSB7XG4gICAgcmV0dXJuIG9iaiA9PT0gdm9pZCAwO1xuICB9LFxuXG4gIC8qIE1peGVzIHR3byBvYmplY3RzIGluIHRvZ2V0aGVyLCBvdmVyd3JpdGluZyBhIHRhcmdldCB3aXRoIGEgc291cmNlLlxuICAgKi9cbiAgZXh0ZW5kOiBmdW5jdGlvbih0YXJnZXQsIHNvdXJjZSkge1xuICAgIHRhcmdldCA9IHRhcmdldCB8fCB7fTtcbiAgICBmb3IgKHZhciBwcm9wIGluIHNvdXJjZSkge1xuICAgICAgaWYgKHR5cGVvZiBzb3VyY2VbcHJvcF0gPT09ICdvYmplY3QnKSB7XG4gICAgICAgIHRhcmdldFtwcm9wXSA9IHRoaXMuZXh0ZW5kKHRhcmdldFtwcm9wXSwgc291cmNlW3Byb3BdKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRhcmdldFtwcm9wXSA9IHNvdXJjZVtwcm9wXTtcbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHRhcmdldDtcbiAgfVxufTtcblxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIHNyYy91dGlscy5qc1xuICoqLyJdLCJtYXBwaW5ncyI6Ijs7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQURBO0FBR0E7QUFMQTtBQU9BO0FBQ0E7QUFEQTtBQUNBOzs7QUFLQTtBQUNBO0FBREE7QUFDQTs7O0FBS0E7QUFDQTtBQURBO0FBQ0E7OztBQUtBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFEQTtBQUdBO0FBSEE7QUFEQTtBQU9BO0FBVEE7QUExQkEiLCJzb3VyY2VSb290IjoiIn0=");

/***/ },
/* 3 */
/***/ function(module, exports) {

	eval("// colors from http://graphicdesign.stackexchange.com/revisions/3815/8\nvar rand_colors;\n\n// generate random colors\nvar tmp0 = ['#000000', '#FF34FF', '#FFFF00', '#FF4A46'];\nvar tmp1 = d3.scale.category20().range().reverse();\nvar tmp2 = d3.scale.category20b().range();\nvar tmp3 = d3.scale.category20c().range();\nrand_colors = tmp0.concat(tmp1).concat(tmp2).concat(tmp3);\n\nfunction get_default_color() {\n  //return rand_colors[0];\n  return '#EEE';\n}\n\nfunction get_random_color(i) {\n  return rand_colors[i % get_num_colors()];\n}\n\nfunction get_num_colors() {\n  return rand_colors.length;\n}\n\nmodule.exports = {\n  get_default_color: get_default_color,\n  get_random_color: get_random_color,\n  get_num_colors: get_num_colors\n};//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy9zcmMvY29sb3JzLmpzPzE5ZWMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gY29sb3JzIGZyb20gaHR0cDovL2dyYXBoaWNkZXNpZ24uc3RhY2tleGNoYW5nZS5jb20vcmV2aXNpb25zLzM4MTUvOFxudmFyIHJhbmRfY29sb3JzO1xuXG4vLyBnZW5lcmF0ZSByYW5kb20gY29sb3JzXG52YXIgdG1wMCA9IFsnIzAwMDAwMCcsICcjRkYzNEZGJywgJyNGRkZGMDAnLCAnI0ZGNEE0NiddO1xudmFyIHRtcDEgPSBkMy5zY2FsZS5jYXRlZ29yeTIwKCkucmFuZ2UoKS5yZXZlcnNlKCk7XG52YXIgdG1wMiA9IGQzLnNjYWxlLmNhdGVnb3J5MjBiKCkucmFuZ2UoKTtcbnZhciB0bXAzID0gZDMuc2NhbGUuY2F0ZWdvcnkyMGMoKS5yYW5nZSgpO1xucmFuZF9jb2xvcnMgPSB0bXAwLmNvbmNhdCh0bXAxKS5jb25jYXQodG1wMikuY29uY2F0KHRtcDMpO1xuXG5mdW5jdGlvbiBnZXRfZGVmYXVsdF9jb2xvcigpIHtcbiAgLy9yZXR1cm4gcmFuZF9jb2xvcnNbMF07XG4gIHJldHVybiAnI0VFRSc7XG59XG5cbmZ1bmN0aW9uIGdldF9yYW5kb21fY29sb3IoaSkge1xuICByZXR1cm4gcmFuZF9jb2xvcnNbaSAlIGdldF9udW1fY29sb3JzKCldO1xufVxuXG5mdW5jdGlvbiBnZXRfbnVtX2NvbG9ycygpIHtcbiAgcmV0dXJuIHJhbmRfY29sb3JzLmxlbmd0aDtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIGdldF9kZWZhdWx0X2NvbG9yOiBnZXRfZGVmYXVsdF9jb2xvcixcbiAgZ2V0X3JhbmRvbV9jb2xvcjogZ2V0X3JhbmRvbV9jb2xvcixcbiAgZ2V0X251bV9jb2xvcnM6IGdldF9udW1fY29sb3JzXG59O1xuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogc3JjL2NvbG9ycy5qc1xuICoqLyJdLCJtYXBwaW5ncyI6IjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFGQTtBQUNBO0FBSUE7QUFDQTtBQURBO0FBQ0E7QUFHQTtBQUNBO0FBREE7QUFDQTtBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBSEEiLCJzb3VyY2VSb290IjoiIn0=");

/***/ },
/* 4 */
/***/ function(module, exports, __webpack_require__) {

	eval("var utils = __webpack_require__(2);\n/* Transpose network.\n */\nmodule.exports = function (net) {\n  var tnet = {},\n      inst_link,\n      i;\n\n  tnet.row_nodes = net.col_nodes;\n  tnet.col_nodes = net.row_nodes;\n  tnet.links = [];\n\n  for (i = 0; i < net.links.length; i++) {\n    inst_link = {};\n    inst_link.source = net.links[i].target;\n    inst_link.target = net.links[i].source;\n    inst_link.value = net.links[i].value;\n\n    // Optional highlight.\n    if (utils.has(net.links[i], 'highlight')) {\n      inst_link.highlight = net.links[i].highlight;\n    }\n    if (utils.has(net.links[i], 'value_up')) {\n      inst_link.value_up = net.links[i].value_up;\n    }\n    if (utils.has(net.links[i], 'value_dn')) {\n      inst_link.value_dn = net.links[i].value_dn;\n    }\n    if (utils.has(net.links[i], 'info')) {\n      inst_link.info = net.links[i].info;\n    }\n    tnet.links.push(inst_link);\n  }\n\n  return tnet;\n};//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy9zcmMvbmV0d29yay90cmFuc3Bvc2VfbmV0d29yay5qcz9iOGYxIl0sInNvdXJjZXNDb250ZW50IjpbInZhciB1dGlscyA9IHJlcXVpcmUoJy4uL3V0aWxzJyk7XG4vKiBUcmFuc3Bvc2UgbmV0d29yay5cbiAqL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAobmV0KSB7XG4gIHZhciB0bmV0ID0ge30sXG4gICAgICBpbnN0X2xpbmssXG4gICAgICBpO1xuXG4gIHRuZXQucm93X25vZGVzID0gbmV0LmNvbF9ub2RlcztcbiAgdG5ldC5jb2xfbm9kZXMgPSBuZXQucm93X25vZGVzO1xuICB0bmV0LmxpbmtzID0gW107XG5cbiAgZm9yIChpID0gMDsgaSA8IG5ldC5saW5rcy5sZW5ndGg7IGkrKykge1xuICAgIGluc3RfbGluayA9IHt9O1xuICAgIGluc3RfbGluay5zb3VyY2UgPSBuZXQubGlua3NbaV0udGFyZ2V0O1xuICAgIGluc3RfbGluay50YXJnZXQgPSBuZXQubGlua3NbaV0uc291cmNlO1xuICAgIGluc3RfbGluay52YWx1ZSA9IG5ldC5saW5rc1tpXS52YWx1ZTtcblxuICAgIC8vIE9wdGlvbmFsIGhpZ2hsaWdodC5cbiAgICBpZiAodXRpbHMuaGFzKG5ldC5saW5rc1tpXSwgJ2hpZ2hsaWdodCcpKSB7XG4gICAgICBpbnN0X2xpbmsuaGlnaGxpZ2h0ID0gbmV0LmxpbmtzW2ldLmhpZ2hsaWdodDtcbiAgICB9XG4gICAgaWYgKHV0aWxzLmhhcyhuZXQubGlua3NbaV0sICd2YWx1ZV91cCcpKSB7XG4gICAgICBpbnN0X2xpbmsudmFsdWVfdXAgPSBuZXQubGlua3NbaV0udmFsdWVfdXA7XG4gICAgfVxuICAgIGlmICh1dGlscy5oYXMobmV0LmxpbmtzW2ldLCAndmFsdWVfZG4nKSkge1xuICAgICAgaW5zdF9saW5rLnZhbHVlX2RuID0gbmV0LmxpbmtzW2ldLnZhbHVlX2RuO1xuICAgIH1cbiAgICBpZiAodXRpbHMuaGFzKG5ldC5saW5rc1tpXSwgJ2luZm8nKSkge1xuICAgICAgaW5zdF9saW5rLmluZm8gPSBuZXQubGlua3NbaV0uaW5mbztcbiAgICB9XG4gICAgdG5ldC5saW5rcy5wdXNoKGluc3RfbGluayk7XG4gIH1cblxuICByZXR1cm4gdG5ldDtcbn07XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiBzcmMvbmV0d29yay90cmFuc3Bvc2VfbmV0d29yay5qc1xuICoqLyJdLCJtYXBwaW5ncyI6IkFBQUE7OztBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFMQTtBQVFBO0FBREE7QUFHQTtBQUNBO0FBREE7QUFHQTtBQUNBO0FBREE7QUFHQTtBQUNBO0FBREE7QUFHQTtBQW5CQTtBQUNBO0FBcUJBO0FBL0JBIiwic291cmNlUm9vdCI6IiJ9");

/***/ },
/* 5 */
/***/ function(module, exports, __webpack_require__) {

	eval("// var crossfilter = require('crossfilter');\nvar utils = __webpack_require__(2);\nvar change_network_view = __webpack_require__(6);\nvar parent_div_size = __webpack_require__(8);\nvar initialize_matrix = __webpack_require__(9);\nvar zoomed = __webpack_require__(10);\n\n/* Params: calculates the size of all the visualization elements in the\nclustergram.\n */\n\nmodule.exports = function (input_config) {\n\n  var config = $.extend(true, {}, input_config);\n  var params = config;\n\n  if (params.ini_view !== null) {\n    params.network_data = change_network_view(params, params.network_data, params.ini_view);\n    params.ini_view = null;\n  }\n\n  params.labels = {};\n  params.labels.super_label_scale = config.super_label_scale;\n  params.labels.super_labels = config.super_labels;\n\n  if (params.labels.super_labels) {\n    params.labels.super_label_width = 20 * params.labels.super_label_scale;\n    params.labels.super = {};\n    params.labels.super.row = config.super.row;\n    params.labels.super.col = config.super.col;\n  } else {\n    params.labels.super_label_width = 0;\n  }\n\n  params.labels.show_categories = config.show_categories;\n  if (params.labels.show_categories) {\n    params.labels.class_colors = config.class_colors;\n  }\n  params.labels.show_label_tooltips = config.show_label_tooltips;\n\n  params.matrix = {};\n  params.matrix.tile_colors = config.tile_colors;\n  params.matrix.bar_colors = config.bar_colors;\n  params.matrix.outline_colors = config.outline_colors;\n  params.matrix.hlight_color = config.highlight_color;\n  params.matrix.tile_title = config.tile_title;\n  params.matrix.show_tile_tooltips = config.show_tile_tooltips;\n\n  params.matrix.make_tile_tooltip = config.make_tile_tooltip;\n\n  params.viz = {};\n\n  params.viz.viz_wrapper = config.root + ' .viz_wrapper';\n  params.viz.viz_svg = params.viz.viz_wrapper + ' .viz_svg';\n\n  params.sidebar = {};\n  params.sidebar.sidebar_class = 'sidebar_wrapper';\n\n  params.viz.do_zoom = config.do_zoom;\n  params.viz.resize = config.resize;\n  // background colors\n  params.viz.background_color = config.background_color;\n  params.viz.super_border_color = config.super_border_color;\n  // margin widths\n  params.viz.outer_margins = config.outer_margins;\n  params.viz.outer_margins_expand = config.outer_margins_expand;\n  params.viz.expand = config.ini_expand;\n  params.viz.uni_margin = config.uni_margin;\n  params.viz.grey_border_width = config.grey_border_width;\n  params.viz.show_dendrogram = config.show_dendrogram;\n  params.viz.tile_click_hlight = config.tile_click_hlight;\n\n  params.viz.uni_duration = 1000;\n\n  // initialized clicked tile and rows\n  params.matrix.click_hlight_x = -666;\n  params.matrix.click_hlight_y = -666;\n  params.matrix.click_hlight_row = -666;\n  params.matrix.click_hlight_col = -666;\n\n  // definition of a large matrix - based on number of links\n  // below this cutoff reordering is done with transitions\n  params.matrix.def_large_matrix = 10000;\n\n  params.viz.inst_order = config.inst_order;\n\n  params.matrix.opacity_function = config.opacity_scale;\n\n  params.viz.expand_button = config.expand_button;\n\n  var col_nodes = params.network_data.col_nodes;\n  var row_nodes = params.network_data.row_nodes;\n\n  // Create wrapper around SVG visualization\n  d3.select(config.root).append('div').attr('class', 'viz_wrapper');\n\n  // resize parent div - needs to be run here\n  parent_div_size(params);\n\n  params.viz.svg_dim = {};\n  params.viz.svg_dim.width = Number(d3.select(params.viz.viz_wrapper).style('width').replace('px', ''));\n  params.viz.svg_dim.height = Number(d3.select(params.viz.viz_wrapper).style('height').replace('px', ''));\n\n  params.network_data.row_nodes_names = _.pluck(row_nodes, 'name');\n  params.network_data.col_nodes_names = _.pluck(col_nodes, 'name');\n\n  var row_max_char = _.max(row_nodes, function (inst) {\n    return inst.name.length;\n  }).name.length;\n  var col_max_char = _.max(col_nodes, function (inst) {\n    return inst.name.length;\n  }).name.length;\n\n  params.labels.row_max_char = row_max_char;\n  params.labels.col_max_char = col_max_char;\n\n  params.labels.max_label_char = 10;\n\n  var min_num_char = 5;\n  var max_num_char = params.labels.max_label_char;\n\n  params.labels.show_char = 10;\n\n  // calc how much of the label to keep\n  var keep_label_scale = d3.scale.linear().domain([params.labels.show_char, max_num_char]).range([1, params.labels.show_char / max_num_char]).clamp('true');\n\n  params.labels.row_keep = keep_label_scale(row_max_char);\n  params.labels.col_keep = keep_label_scale(col_max_char);\n\n  // define label scale\n  var min_label_width = 65;\n  var max_label_width = 115;\n  var label_scale = d3.scale.linear().domain([min_num_char, max_num_char]).range([min_label_width, max_label_width]).clamp('true');\n\n  params.norm_label = {};\n  params.norm_label.width = {};\n\n  params.norm_label.width.row = label_scale(row_max_char) * params.row_label_scale;\n\n  params.norm_label.width.col = label_scale(col_max_char) * params.col_label_scale;\n\n  params.norm_label.margin = {};\n  params.norm_label.margin.left = params.viz.grey_border_width + params.labels.super_label_width;\n  params.norm_label.margin.top = params.viz.grey_border_width + params.labels.super_label_width;\n\n  params.class_room = {};\n\n  params.class_room.symbol_width = 11;\n\n  if (params.viz.show_dendrogram) {\n    params.class_room.row = 2 * params.class_room.symbol_width;\n    params.class_room.col = params.class_room.symbol_width;\n\n    // TODO check this\n    config.group_level = {\n      row: 5,\n      col: 5\n    };\n  } else {\n    params.class_room.row = params.class_room.symbol_width;\n    params.class_room.col = 0;\n  }\n\n  params.norm_label.background = {};\n  params.norm_label.background.row = params.norm_label.width.row + params.class_room.row + params.viz.uni_margin;\n  params.norm_label.background.col = params.norm_label.width.col + params.class_room.col + params.viz.uni_margin;\n\n  params.viz.clust = {};\n  params.viz.clust.margin = {};\n  params.viz.clust.margin.left = params.norm_label.margin.left + params.norm_label.background.row;\n  params.viz.clust.margin.top = params.norm_label.margin.top + params.norm_label.background.col;\n  params.viz.spillover_x_offset = label_scale(col_max_char) * 0.7 * params.col_label_scale;\n\n  // reduce width by row/col labels and by grey_border width\n  //(reduce width by less since this is less aparent with slanted col labels)\n  var ini_clust_width = params.viz.svg_dim.width - (params.labels.super_label_width + params.norm_label.width.row + params.class_room.row) - params.viz.grey_border_width - params.viz.spillover_x_offset;\n\n  // there is space between the clustergram and the border\n  var ini_clust_height = params.viz.svg_dim.height - (params.labels.super_label_width + params.norm_label.width.col + params.class_room.col) - 5 * params.viz.grey_border_width;\n\n  params.viz.num_col_nodes = col_nodes.length;\n  params.viz.num_row_nodes = row_nodes.length;\n\n  params.viz.clust.dim = {};\n\n  var tmp_x_scale = d3.scale.ordinal().rangeBands([0, ini_clust_width]);\n  tmp_x_scale.domain(_.range(col_nodes.length));\n  var triangle_height = tmp_x_scale.rangeBand() / 2;\n\n  if (triangle_height > params.norm_label.width.col) {\n    ini_clust_width = ini_clust_width * (params.norm_label.width.col / triangle_height);\n  }\n  params.viz.clust.dim.width = ini_clust_width;\n\n  if (ini_clust_width / params.viz.num_col_nodes < ini_clust_height / params.viz.num_row_nodes) {\n\n    params.viz.clust.dim.height = ini_clust_width * (params.viz.num_row_nodes / params.viz.num_col_nodes);\n\n    params.viz.force_square = 1;\n\n    if (params.viz.clust.dim.height > ini_clust_height) {\n      params.viz.clust.dim.height = ini_clust_height;\n      params.viz.force_square = 0;\n    }\n  } else {\n    params.viz.clust.dim.height = ini_clust_height;\n    params.viz.force_square = 0;\n  }\n\n  if (config.force_square === 1) {\n    params.viz.force_square = 1;\n  }\n\n  var enr_max = Math.abs(_.max(col_nodes, function (d) {\n    return Math.abs(d.value);\n  }).value);\n\n  params.labels.bar_scale_col = d3.scale.linear().domain([0, enr_max]).range([0, 0.75 * params.norm_label.width.col]);\n\n  enr_max = Math.abs(_.max(row_nodes, function (d) {\n    return Math.abs(d.value);\n  }).value);\n  params.labels.bar_scale_row = d3.scale.linear().domain([0, enr_max]).range([0, params.norm_label.width.row]);\n\n  // Define Orderings\n  params.matrix.orders = {\n    // ini\n    ini_row: d3.range(params.viz.num_col_nodes).sort(function (a, b) {\n      return col_nodes[b].ini - col_nodes[a].ini;\n    }),\n    ini_col: d3.range(params.viz.num_row_nodes).sort(function (a, b) {\n      return row_nodes[b].ini - row_nodes[a].ini;\n    }),\n    // rank\n    rank_row: d3.range(params.viz.num_col_nodes).sort(function (a, b) {\n      return col_nodes[b].rank - col_nodes[a].rank;\n    }),\n    rank_col: d3.range(params.viz.num_row_nodes).sort(function (a, b) {\n      return row_nodes[b].rank - row_nodes[a].rank;\n    }),\n    // clustered\n    clust_row: d3.range(params.viz.num_col_nodes).sort(function (a, b) {\n      return col_nodes[b].clust - col_nodes[a].clust;\n    }),\n    clust_col: d3.range(params.viz.num_row_nodes).sort(function (a, b) {\n      return row_nodes[b].clust - row_nodes[a].clust;\n    })\n  };\n\n  // // define class ordering - define on front-end\n  // if (utils.has(col_nodes[0],'cl')){\n\n  //   // the order should be interpreted as the nth node should be positioned here\n  //   // in the order\n\n  //   var tmp_col_nodes = _.sortBy(col_nodes,'cl')\n\n  //   var ordered_col_names = []\n  //   for (var i=0; i< tmp_col_nodes.length; i++){\n  //     ordered_col_names.push( tmp_col_nodes[i].name );\n  //   }\n\n  //   var order_col_class = []\n  //   for (var i=0; i< col_nodes.length; i++){\n  //     var inst_col_name = ordered_col_names[i];\n  //     order_col_class.push( _.indexOf( params.network_data.col_nodes_names, inst_col_name) );\n  //   }\n\n  //   params.matrix.orders.class_row = order_col_class;\n  // }\n\n  if (utils.has(col_nodes[0], 'cl_index')) {\n    params.matrix.orders.class_row = d3.range(params.viz.num_col_nodes).sort(function (a, b) {\n      return col_nodes[b].cl_index - col_nodes[a].cl_index;\n    });\n  }\n\n  params.matrix.x_scale = d3.scale.ordinal().rangeBands([0, params.viz.clust.dim.width]);\n  params.matrix.y_scale = d3.scale.ordinal().rangeBands([0, params.viz.clust.dim.height]);\n\n  if (params.viz.inst_order.row === 'ini') {\n    params.matrix.x_scale.domain(params.matrix.orders.ini_row);\n  } else if (params.viz.inst_order.row === 'clust') {\n    params.matrix.x_scale.domain(params.matrix.orders.clust_row);\n  } else if (params.viz.inst_order.row === 'rank') {\n    params.matrix.x_scale.domain(params.matrix.orders.rank_row);\n  } else if (params.viz.inst_order.row === 'class') {\n    if (utils.has(params.matrix.orders, 'class_row')) {\n      params.matrix.x_scale.domain(params.matrix.orders.class_row);\n    } else {\n      params.matrix.x_scale.domain(params.matrix.orders.clust_row);\n    }\n  }\n\n  if (params.viz.inst_order.col === 'ini') {\n    params.matrix.y_scale.domain(params.matrix.orders.ini_col);\n  } else if (params.viz.inst_order.col === 'clust') {\n    params.matrix.y_scale.domain(params.matrix.orders.clust_col);\n  } else if (params.viz.inst_order.col === 'rank') {\n    params.matrix.y_scale.domain(params.matrix.orders.rank_col);\n  } else if (params.viz.inst_order.col === 'class') {\n    if (utils.has(params.matrix.orders, 'class_row')) {\n      params.matrix.y_scale.domain(params.matrix.orders.class_col);\n    } else {\n      params.matrix.y_scale.domain(params.matrix.orders.clust_col);\n    }\n  }\n\n  params.network_data.links.forEach(function (d) {\n    // d.name = row_nodes[d.source].name + '_' + col_nodes[d.target].name;\n    // d.row_name = row_nodes[d.source].name;\n    // d.col_name = col_nodes[d.target].name;\n    d.x = params.matrix.x_scale(d.target);\n    d.y = params.matrix.y_scale(d.source);\n  });\n\n  // // make lnks crossfilter\n  // // TODO check if relying on crossfilter\n  // params.cf = {};\n  // params.cf.links = crossfilter(params.network_data.links);\n  // params.cf.dim_x = params.cf.links.dimension(function (d) {\n  //   return d.x;\n  // });\n  // params.cf.dim_y = params.cf.links.dimension(function (d) {\n  //   return d.y;\n  // });\n\n  params.matrix.matrix = initialize_matrix(params.network_data);\n\n  params.viz.border_fraction = 55;\n  params.viz.border_width = params.matrix.x_scale.rangeBand() / params.viz.border_fraction;\n\n  params.viz.zoom_switch = params.viz.clust.dim.width / params.viz.num_col_nodes / (params.viz.clust.dim.height / params.viz.num_row_nodes);\n\n  if (params.viz.zoom_switch < 1) {\n    params.viz.zoom_switch = 1;\n  }\n\n  params.matrix.rect_width = params.matrix.x_scale.rangeBand() - 1 * params.viz.border_width;\n  params.matrix.rect_height = params.matrix.y_scale.rangeBand() - 1 * params.viz.border_width / params.viz.zoom_switch;\n\n  params.scale_font_offset = d3.scale.linear().domain([1, 0]).range([0.8, 0.5]);\n\n  params.labels.default_fs_row = params.matrix.y_scale.rangeBand() * 1.01;\n  params.labels.default_fs_col = params.matrix.x_scale.rangeBand() * 0.87;\n\n  params.viz.zoom_scale_font = {};\n  params.viz.zoom_scale_font.row = 1;\n  params.viz.zoom_scale_font.col = 1;\n\n  params.viz.real_zoom = params.norm_label.width.col / (params.matrix.x_scale.rangeBand() / 2);\n\n  if (utils.has(params.network_data, 'all_links')) {\n    params.matrix.max_link = _.max(params.network_data.all_links, function (d) {\n      return Math.abs(d.value);\n    }).value;\n  } else {\n    params.matrix.max_link = _.max(params.network_data.links, function (d) {\n      return Math.abs(d.value);\n    }).value;\n  }\n\n  if (config.input_domain === 0) {\n    if (params.matrix.opacity_function === 'linear') {\n      params.matrix.opacity_scale = d3.scale.linear().domain([0, Math.abs(params.matrix.max_link)]).clamp(true).range([0.0, 1.0]);\n    } else if (params.matrix.opacity_function === 'log') {\n      params.matrix.opacity_scale = d3.scale.log().domain([0.001, Math.abs(params.matrix.max_link)]).clamp(true).range([0.0, 1.0]);\n    }\n  } else {\n    if (params.matrix.opacity_function === 'linear') {\n      params.matrix.opacity_scale = d3.scale.linear().domain([0, config.input_domain]).clamp(true).range([0.0, 1.0]);\n    } else if (params.matrix.opacity_function === 'log') {\n      params.matrix.opacity_scale = d3.scale.log().domain([0.001, config.input_domain]).clamp(true).range([0.0, 1.0]);\n    }\n  }\n\n  // TODO check if using run_trans\n  params.viz.run_trans = false;\n\n  if (utils.has(params.network_data.links[0], 'value_up') || utils.has(params.network_data.links[0], 'value_dn')) {\n    params.matrix.tile_type = 'updn';\n  } else {\n    params.matrix.tile_type = 'simple';\n  }\n\n  if (utils.has(params.network_data.links[0], 'highlight')) {\n    params.matrix.highlight = 1;\n  } else {\n    params.matrix.highlight = 0;\n  }\n\n  params.zoom_behavior = d3.behavior.zoom().scaleExtent([1, params.viz.real_zoom * params.viz.zoom_switch]).on('zoom', function () {\n    zoomed(params);\n  });\n\n  return params;\n};//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNS5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy9zcmMvcGFyYW1zLmpzP2Y4NmMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gdmFyIGNyb3NzZmlsdGVyID0gcmVxdWlyZSgnY3Jvc3NmaWx0ZXInKTtcbnZhciB1dGlscyA9IHJlcXVpcmUoJy4vdXRpbHMnKTtcbnZhciBjaGFuZ2VfbmV0d29ya192aWV3ID0gcmVxdWlyZSgnLi9uZXR3b3JrL2NoYW5nZV9uZXR3b3JrX3ZpZXcnKTtcbnZhciBwYXJlbnRfZGl2X3NpemUgPSByZXF1aXJlKCcuL3BhcmVudF9kaXZfc2l6ZScpO1xudmFyIGluaXRpYWxpemVfbWF0cml4ID0gcmVxdWlyZSgnLi9pbml0aWFsaXplX21hdHJpeCcpO1xudmFyIHpvb21lZCA9IHJlcXVpcmUoJy4vem9vbWVkJyk7XG5cbi8qIFBhcmFtczogY2FsY3VsYXRlcyB0aGUgc2l6ZSBvZiBhbGwgdGhlIHZpc3VhbGl6YXRpb24gZWxlbWVudHMgaW4gdGhlXG5jbHVzdGVyZ3JhbS5cbiAqL1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKGlucHV0X2NvbmZpZykge1xuXG4gIHZhciBjb25maWcgPSAkLmV4dGVuZCh0cnVlLCB7fSwgaW5wdXRfY29uZmlnKTtcbiAgdmFyIHBhcmFtcyA9IGNvbmZpZztcblxuICBpZiAocGFyYW1zLmluaV92aWV3ICE9PSBudWxsKSB7XG4gICAgcGFyYW1zLm5ldHdvcmtfZGF0YSA9IGNoYW5nZV9uZXR3b3JrX3ZpZXcocGFyYW1zLCBwYXJhbXMubmV0d29ya19kYXRhLCBwYXJhbXMuaW5pX3ZpZXcpO1xuICAgIHBhcmFtcy5pbmlfdmlldyA9IG51bGw7XG4gIH1cblxuICBwYXJhbXMubGFiZWxzID0ge307XG4gIHBhcmFtcy5sYWJlbHMuc3VwZXJfbGFiZWxfc2NhbGUgPSBjb25maWcuc3VwZXJfbGFiZWxfc2NhbGU7XG4gIHBhcmFtcy5sYWJlbHMuc3VwZXJfbGFiZWxzID0gY29uZmlnLnN1cGVyX2xhYmVscztcblxuICBpZiAocGFyYW1zLmxhYmVscy5zdXBlcl9sYWJlbHMpIHtcbiAgICBwYXJhbXMubGFiZWxzLnN1cGVyX2xhYmVsX3dpZHRoID0gMjAgKiBwYXJhbXMubGFiZWxzLnN1cGVyX2xhYmVsX3NjYWxlO1xuICAgIHBhcmFtcy5sYWJlbHMuc3VwZXIgPSB7fTtcbiAgICBwYXJhbXMubGFiZWxzLnN1cGVyLnJvdyA9IGNvbmZpZy5zdXBlci5yb3c7XG4gICAgcGFyYW1zLmxhYmVscy5zdXBlci5jb2wgPSBjb25maWcuc3VwZXIuY29sO1xuICB9IGVsc2Uge1xuICAgIHBhcmFtcy5sYWJlbHMuc3VwZXJfbGFiZWxfd2lkdGggPSAwO1xuICB9XG5cbiAgcGFyYW1zLmxhYmVscy5zaG93X2NhdGVnb3JpZXMgPSBjb25maWcuc2hvd19jYXRlZ29yaWVzO1xuICBpZiAocGFyYW1zLmxhYmVscy5zaG93X2NhdGVnb3JpZXMpIHtcbiAgICBwYXJhbXMubGFiZWxzLmNsYXNzX2NvbG9ycyA9IGNvbmZpZy5jbGFzc19jb2xvcnM7XG4gIH1cbiAgcGFyYW1zLmxhYmVscy5zaG93X2xhYmVsX3Rvb2x0aXBzID0gY29uZmlnLnNob3dfbGFiZWxfdG9vbHRpcHM7XG5cbiAgcGFyYW1zLm1hdHJpeCA9IHt9O1xuICBwYXJhbXMubWF0cml4LnRpbGVfY29sb3JzID0gY29uZmlnLnRpbGVfY29sb3JzO1xuICBwYXJhbXMubWF0cml4LmJhcl9jb2xvcnMgPSBjb25maWcuYmFyX2NvbG9ycztcbiAgcGFyYW1zLm1hdHJpeC5vdXRsaW5lX2NvbG9ycyA9IGNvbmZpZy5vdXRsaW5lX2NvbG9ycztcbiAgcGFyYW1zLm1hdHJpeC5obGlnaHRfY29sb3IgPSBjb25maWcuaGlnaGxpZ2h0X2NvbG9yO1xuICBwYXJhbXMubWF0cml4LnRpbGVfdGl0bGUgPSBjb25maWcudGlsZV90aXRsZTtcbiAgcGFyYW1zLm1hdHJpeC5zaG93X3RpbGVfdG9vbHRpcHMgPSBjb25maWcuc2hvd190aWxlX3Rvb2x0aXBzO1xuXG4gIHBhcmFtcy5tYXRyaXgubWFrZV90aWxlX3Rvb2x0aXAgPSBjb25maWcubWFrZV90aWxlX3Rvb2x0aXA7XG5cbiAgcGFyYW1zLnZpeiA9IHt9O1xuXG4gIHBhcmFtcy52aXoudml6X3dyYXBwZXIgPSBjb25maWcucm9vdCArICcgLnZpel93cmFwcGVyJztcbiAgcGFyYW1zLnZpei52aXpfc3ZnID0gcGFyYW1zLnZpei52aXpfd3JhcHBlciArICcgLnZpel9zdmcnO1xuXG4gIHBhcmFtcy5zaWRlYmFyID0ge307XG4gIHBhcmFtcy5zaWRlYmFyLnNpZGViYXJfY2xhc3MgPSAnc2lkZWJhcl93cmFwcGVyJztcblxuICBwYXJhbXMudml6LmRvX3pvb20gPSBjb25maWcuZG9fem9vbTtcbiAgcGFyYW1zLnZpei5yZXNpemUgPSBjb25maWcucmVzaXplO1xuICAvLyBiYWNrZ3JvdW5kIGNvbG9yc1xuICBwYXJhbXMudml6LmJhY2tncm91bmRfY29sb3IgPSBjb25maWcuYmFja2dyb3VuZF9jb2xvcjtcbiAgcGFyYW1zLnZpei5zdXBlcl9ib3JkZXJfY29sb3IgPSBjb25maWcuc3VwZXJfYm9yZGVyX2NvbG9yO1xuICAvLyBtYXJnaW4gd2lkdGhzXG4gIHBhcmFtcy52aXoub3V0ZXJfbWFyZ2lucyA9IGNvbmZpZy5vdXRlcl9tYXJnaW5zO1xuICBwYXJhbXMudml6Lm91dGVyX21hcmdpbnNfZXhwYW5kID0gY29uZmlnLm91dGVyX21hcmdpbnNfZXhwYW5kO1xuICBwYXJhbXMudml6LmV4cGFuZCA9IGNvbmZpZy5pbmlfZXhwYW5kO1xuICBwYXJhbXMudml6LnVuaV9tYXJnaW4gPSBjb25maWcudW5pX21hcmdpbjtcbiAgcGFyYW1zLnZpei5ncmV5X2JvcmRlcl93aWR0aCA9IGNvbmZpZy5ncmV5X2JvcmRlcl93aWR0aDtcbiAgcGFyYW1zLnZpei5zaG93X2RlbmRyb2dyYW0gPSBjb25maWcuc2hvd19kZW5kcm9ncmFtO1xuICBwYXJhbXMudml6LnRpbGVfY2xpY2tfaGxpZ2h0ID0gY29uZmlnLnRpbGVfY2xpY2tfaGxpZ2h0O1xuXG4gIHBhcmFtcy52aXoudW5pX2R1cmF0aW9uID0gMTAwMDtcblxuICAvLyBpbml0aWFsaXplZCBjbGlja2VkIHRpbGUgYW5kIHJvd3NcbiAgcGFyYW1zLm1hdHJpeC5jbGlja19obGlnaHRfeCA9IC02NjY7XG4gIHBhcmFtcy5tYXRyaXguY2xpY2tfaGxpZ2h0X3kgPSAtNjY2O1xuICBwYXJhbXMubWF0cml4LmNsaWNrX2hsaWdodF9yb3cgPSAtNjY2O1xuICBwYXJhbXMubWF0cml4LmNsaWNrX2hsaWdodF9jb2wgPSAtNjY2O1xuXG4gIC8vIGRlZmluaXRpb24gb2YgYSBsYXJnZSBtYXRyaXggLSBiYXNlZCBvbiBudW1iZXIgb2YgbGlua3NcbiAgLy8gYmVsb3cgdGhpcyBjdXRvZmYgcmVvcmRlcmluZyBpcyBkb25lIHdpdGggdHJhbnNpdGlvbnNcbiAgcGFyYW1zLm1hdHJpeC5kZWZfbGFyZ2VfbWF0cml4ID0gMTAwMDA7XG5cbiAgcGFyYW1zLnZpei5pbnN0X29yZGVyID0gY29uZmlnLmluc3Rfb3JkZXI7XG5cbiAgcGFyYW1zLm1hdHJpeC5vcGFjaXR5X2Z1bmN0aW9uID0gY29uZmlnLm9wYWNpdHlfc2NhbGU7XG5cbiAgcGFyYW1zLnZpei5leHBhbmRfYnV0dG9uID0gY29uZmlnLmV4cGFuZF9idXR0b247XG5cbiAgdmFyIGNvbF9ub2RlcyA9IHBhcmFtcy5uZXR3b3JrX2RhdGEuY29sX25vZGVzO1xuICB2YXIgcm93X25vZGVzID0gcGFyYW1zLm5ldHdvcmtfZGF0YS5yb3dfbm9kZXM7XG5cbiAgLy8gQ3JlYXRlIHdyYXBwZXIgYXJvdW5kIFNWRyB2aXN1YWxpemF0aW9uXG4gIGQzLnNlbGVjdChjb25maWcucm9vdCkuYXBwZW5kKCdkaXYnKS5hdHRyKCdjbGFzcycsICd2aXpfd3JhcHBlcicpO1xuXG4gIC8vIHJlc2l6ZSBwYXJlbnQgZGl2IC0gbmVlZHMgdG8gYmUgcnVuIGhlcmVcbiAgcGFyZW50X2Rpdl9zaXplKHBhcmFtcyk7XG5cbiAgcGFyYW1zLnZpei5zdmdfZGltID0ge307XG4gIHBhcmFtcy52aXouc3ZnX2RpbS53aWR0aCA9IE51bWJlcihkMy5zZWxlY3QocGFyYW1zLnZpei52aXpfd3JhcHBlcikuc3R5bGUoJ3dpZHRoJykucmVwbGFjZSgncHgnLCAnJykpO1xuICBwYXJhbXMudml6LnN2Z19kaW0uaGVpZ2h0ID0gTnVtYmVyKGQzLnNlbGVjdChwYXJhbXMudml6LnZpel93cmFwcGVyKS5zdHlsZSgnaGVpZ2h0JykucmVwbGFjZSgncHgnLCAnJykpO1xuXG4gIHBhcmFtcy5uZXR3b3JrX2RhdGEucm93X25vZGVzX25hbWVzID0gXy5wbHVjayhyb3dfbm9kZXMsICduYW1lJyk7XG4gIHBhcmFtcy5uZXR3b3JrX2RhdGEuY29sX25vZGVzX25hbWVzID0gXy5wbHVjayhjb2xfbm9kZXMsICduYW1lJyk7XG5cbiAgdmFyIHJvd19tYXhfY2hhciA9IF8ubWF4KHJvd19ub2RlcywgZnVuY3Rpb24gKGluc3QpIHtcbiAgICByZXR1cm4gaW5zdC5uYW1lLmxlbmd0aDtcbiAgfSkubmFtZS5sZW5ndGg7XG4gIHZhciBjb2xfbWF4X2NoYXIgPSBfLm1heChjb2xfbm9kZXMsIGZ1bmN0aW9uIChpbnN0KSB7XG4gICAgcmV0dXJuIGluc3QubmFtZS5sZW5ndGg7XG4gIH0pLm5hbWUubGVuZ3RoO1xuXG4gIHBhcmFtcy5sYWJlbHMucm93X21heF9jaGFyID0gcm93X21heF9jaGFyO1xuICBwYXJhbXMubGFiZWxzLmNvbF9tYXhfY2hhciA9IGNvbF9tYXhfY2hhcjtcblxuICBwYXJhbXMubGFiZWxzLm1heF9sYWJlbF9jaGFyID0gMTA7XG5cbiAgdmFyIG1pbl9udW1fY2hhciA9IDU7XG4gIHZhciBtYXhfbnVtX2NoYXIgPSBwYXJhbXMubGFiZWxzLm1heF9sYWJlbF9jaGFyO1xuXG4gIHBhcmFtcy5sYWJlbHMuc2hvd19jaGFyID0gMTA7XG5cbiAgLy8gY2FsYyBob3cgbXVjaCBvZiB0aGUgbGFiZWwgdG8ga2VlcFxuICB2YXIga2VlcF9sYWJlbF9zY2FsZSA9IGQzLnNjYWxlLmxpbmVhcigpXG4gICAgLmRvbWFpbihbcGFyYW1zLmxhYmVscy5zaG93X2NoYXIsIG1heF9udW1fY2hhcl0pXG4gICAgLnJhbmdlKFsxLCBwYXJhbXMubGFiZWxzLnNob3dfY2hhciAvIG1heF9udW1fY2hhcl0pLmNsYW1wKCd0cnVlJyk7XG5cbiAgcGFyYW1zLmxhYmVscy5yb3dfa2VlcCA9IGtlZXBfbGFiZWxfc2NhbGUocm93X21heF9jaGFyKTtcbiAgcGFyYW1zLmxhYmVscy5jb2xfa2VlcCA9IGtlZXBfbGFiZWxfc2NhbGUoY29sX21heF9jaGFyKTtcblxuICAvLyBkZWZpbmUgbGFiZWwgc2NhbGVcbiAgdmFyIG1pbl9sYWJlbF93aWR0aCA9IDY1O1xuICB2YXIgbWF4X2xhYmVsX3dpZHRoID0gMTE1O1xuICB2YXIgbGFiZWxfc2NhbGUgPSBkMy5zY2FsZS5saW5lYXIoKVxuICAgIC5kb21haW4oW21pbl9udW1fY2hhciwgbWF4X251bV9jaGFyXSlcbiAgICAucmFuZ2UoW21pbl9sYWJlbF93aWR0aCwgbWF4X2xhYmVsX3dpZHRoXSkuY2xhbXAoJ3RydWUnKTtcblxuICBwYXJhbXMubm9ybV9sYWJlbCA9IHt9O1xuICBwYXJhbXMubm9ybV9sYWJlbC53aWR0aCA9IHt9O1xuXG4gIHBhcmFtcy5ub3JtX2xhYmVsLndpZHRoLnJvdyA9IGxhYmVsX3NjYWxlKHJvd19tYXhfY2hhcilcbiAgICAqIHBhcmFtcy5yb3dfbGFiZWxfc2NhbGU7XG5cbiAgcGFyYW1zLm5vcm1fbGFiZWwud2lkdGguY29sID0gbGFiZWxfc2NhbGUoY29sX21heF9jaGFyKVxuICAgICogcGFyYW1zLmNvbF9sYWJlbF9zY2FsZTtcblxuICBwYXJhbXMubm9ybV9sYWJlbC5tYXJnaW4gPSB7fTtcbiAgcGFyYW1zLm5vcm1fbGFiZWwubWFyZ2luLmxlZnQgPSBwYXJhbXMudml6LmdyZXlfYm9yZGVyX3dpZHRoICsgcGFyYW1zLmxhYmVscy5zdXBlcl9sYWJlbF93aWR0aDtcbiAgcGFyYW1zLm5vcm1fbGFiZWwubWFyZ2luLnRvcCA9IHBhcmFtcy52aXouZ3JleV9ib3JkZXJfd2lkdGggKyBwYXJhbXMubGFiZWxzLnN1cGVyX2xhYmVsX3dpZHRoO1xuXG4gIHBhcmFtcy5jbGFzc19yb29tID0ge307XG5cbiAgcGFyYW1zLmNsYXNzX3Jvb20uc3ltYm9sX3dpZHRoID0gMTE7XG5cbiAgaWYgKHBhcmFtcy52aXouc2hvd19kZW5kcm9ncmFtKSB7XG4gICAgcGFyYW1zLmNsYXNzX3Jvb20ucm93ID0gMiAqIHBhcmFtcy5jbGFzc19yb29tLnN5bWJvbF93aWR0aDtcbiAgICBwYXJhbXMuY2xhc3Nfcm9vbS5jb2wgPSBwYXJhbXMuY2xhc3Nfcm9vbS5zeW1ib2xfd2lkdGg7XG5cbiAgICAvLyBUT0RPIGNoZWNrIHRoaXNcbiAgICBjb25maWcuZ3JvdXBfbGV2ZWwgPSB7XG4gICAgICByb3c6IDUsXG4gICAgICBjb2w6IDVcbiAgICB9O1xuXG4gIH0gZWxzZSB7XG4gICAgcGFyYW1zLmNsYXNzX3Jvb20ucm93ID0gcGFyYW1zLmNsYXNzX3Jvb20uc3ltYm9sX3dpZHRoO1xuICAgIHBhcmFtcy5jbGFzc19yb29tLmNvbCA9IDA7XG4gIH1cblxuICBwYXJhbXMubm9ybV9sYWJlbC5iYWNrZ3JvdW5kID0ge307XG4gIHBhcmFtcy5ub3JtX2xhYmVsLmJhY2tncm91bmQucm93ID0gcGFyYW1zLm5vcm1fbGFiZWwud2lkdGgucm93ICsgcGFyYW1zLmNsYXNzX3Jvb20ucm93ICsgcGFyYW1zLnZpei51bmlfbWFyZ2luO1xuICBwYXJhbXMubm9ybV9sYWJlbC5iYWNrZ3JvdW5kLmNvbCA9IHBhcmFtcy5ub3JtX2xhYmVsLndpZHRoLmNvbCArIHBhcmFtcy5jbGFzc19yb29tLmNvbCArIHBhcmFtcy52aXoudW5pX21hcmdpbjtcblxuICBwYXJhbXMudml6LmNsdXN0ID0ge307XG4gIHBhcmFtcy52aXouY2x1c3QubWFyZ2luID0ge307XG4gIHBhcmFtcy52aXouY2x1c3QubWFyZ2luLmxlZnQgPSBwYXJhbXMubm9ybV9sYWJlbC5tYXJnaW4ubGVmdCArIHBhcmFtcy5ub3JtX2xhYmVsLmJhY2tncm91bmQucm93O1xuICBwYXJhbXMudml6LmNsdXN0Lm1hcmdpbi50b3AgPSBwYXJhbXMubm9ybV9sYWJlbC5tYXJnaW4udG9wICsgcGFyYW1zLm5vcm1fbGFiZWwuYmFja2dyb3VuZC5jb2w7XG4gIHBhcmFtcy52aXouc3BpbGxvdmVyX3hfb2Zmc2V0ID0gbGFiZWxfc2NhbGUoY29sX21heF9jaGFyKSAqIDAuNyAqIHBhcmFtcy5jb2xfbGFiZWxfc2NhbGU7XG5cbiAgLy8gcmVkdWNlIHdpZHRoIGJ5IHJvdy9jb2wgbGFiZWxzIGFuZCBieSBncmV5X2JvcmRlciB3aWR0aFxuICAvLyhyZWR1Y2Ugd2lkdGggYnkgbGVzcyBzaW5jZSB0aGlzIGlzIGxlc3MgYXBhcmVudCB3aXRoIHNsYW50ZWQgY29sIGxhYmVscylcbiAgdmFyIGluaV9jbHVzdF93aWR0aCA9IHBhcmFtcy52aXouc3ZnX2RpbS53aWR0aCAtIChwYXJhbXMubGFiZWxzLnN1cGVyX2xhYmVsX3dpZHRoICtcbiAgICBwYXJhbXMubm9ybV9sYWJlbC53aWR0aC5yb3cgKyBwYXJhbXMuY2xhc3Nfcm9vbS5yb3cpIC0gcGFyYW1zLnZpei5ncmV5X2JvcmRlcl93aWR0aCAtIHBhcmFtcy52aXouc3BpbGxvdmVyX3hfb2Zmc2V0O1xuXG4gIC8vIHRoZXJlIGlzIHNwYWNlIGJldHdlZW4gdGhlIGNsdXN0ZXJncmFtIGFuZCB0aGUgYm9yZGVyXG4gIHZhciBpbmlfY2x1c3RfaGVpZ2h0ID0gcGFyYW1zLnZpei5zdmdfZGltLmhlaWdodCAtIChwYXJhbXMubGFiZWxzLnN1cGVyX2xhYmVsX3dpZHRoICtcbiAgICBwYXJhbXMubm9ybV9sYWJlbC53aWR0aC5jb2wgKyBwYXJhbXMuY2xhc3Nfcm9vbS5jb2wpIC0gNSAqIHBhcmFtcy52aXouZ3JleV9ib3JkZXJfd2lkdGg7XG5cbiAgcGFyYW1zLnZpei5udW1fY29sX25vZGVzID0gY29sX25vZGVzLmxlbmd0aDtcbiAgcGFyYW1zLnZpei5udW1fcm93X25vZGVzID0gcm93X25vZGVzLmxlbmd0aDtcblxuICBwYXJhbXMudml6LmNsdXN0LmRpbSA9IHt9O1xuXG4gIHZhciB0bXBfeF9zY2FsZSA9IGQzLnNjYWxlLm9yZGluYWwoKS5yYW5nZUJhbmRzKFswLCBpbmlfY2x1c3Rfd2lkdGhdKTtcbiAgdG1wX3hfc2NhbGUuZG9tYWluKF8ucmFuZ2UoY29sX25vZGVzLmxlbmd0aCkpO1xuICB2YXIgdHJpYW5nbGVfaGVpZ2h0ID0gdG1wX3hfc2NhbGUucmFuZ2VCYW5kKCkgLyAyO1xuXG4gIGlmICh0cmlhbmdsZV9oZWlnaHQgPiBwYXJhbXMubm9ybV9sYWJlbC53aWR0aC5jb2wpIHtcbiAgICBpbmlfY2x1c3Rfd2lkdGggPSBpbmlfY2x1c3Rfd2lkdGggKiAoIHBhcmFtcy5ub3JtX2xhYmVsLndpZHRoLmNvbCAvIHRyaWFuZ2xlX2hlaWdodCApO1xuICB9XG4gIHBhcmFtcy52aXouY2x1c3QuZGltLndpZHRoID0gaW5pX2NsdXN0X3dpZHRoO1xuXG4gIGlmIChpbmlfY2x1c3Rfd2lkdGggLyBwYXJhbXMudml6Lm51bV9jb2xfbm9kZXMgPCBpbmlfY2x1c3RfaGVpZ2h0IC8gcGFyYW1zLnZpei5udW1fcm93X25vZGVzKSB7XG5cbiAgICBwYXJhbXMudml6LmNsdXN0LmRpbS5oZWlnaHQgPSBpbmlfY2x1c3Rfd2lkdGggKiAocGFyYW1zLnZpei5udW1fcm93X25vZGVzIC8gcGFyYW1zLnZpei5udW1fY29sX25vZGVzICk7XG5cbiAgICBwYXJhbXMudml6LmZvcmNlX3NxdWFyZSA9IDE7XG5cbiAgICBpZiAocGFyYW1zLnZpei5jbHVzdC5kaW0uaGVpZ2h0ID4gaW5pX2NsdXN0X2hlaWdodCkge1xuICAgICAgcGFyYW1zLnZpei5jbHVzdC5kaW0uaGVpZ2h0ID0gaW5pX2NsdXN0X2hlaWdodDtcbiAgICAgIHBhcmFtcy52aXouZm9yY2Vfc3F1YXJlID0gMDtcbiAgICB9XG4gIH1cbiAgZWxzZSB7XG4gICAgcGFyYW1zLnZpei5jbHVzdC5kaW0uaGVpZ2h0ID0gaW5pX2NsdXN0X2hlaWdodDtcbiAgICBwYXJhbXMudml6LmZvcmNlX3NxdWFyZSA9IDA7XG4gIH1cblxuICBpZiAoY29uZmlnLmZvcmNlX3NxdWFyZSA9PT0gMSkge1xuICAgIHBhcmFtcy52aXouZm9yY2Vfc3F1YXJlID0gMTtcbiAgfVxuXG5cbiAgdmFyIGVucl9tYXggPSBNYXRoLmFicyhfLm1heChjb2xfbm9kZXMsIGZ1bmN0aW9uIChkKSB7XG4gICAgcmV0dXJuIE1hdGguYWJzKGQudmFsdWUpO1xuICB9KS52YWx1ZSk7XG5cbiAgcGFyYW1zLmxhYmVscy5iYXJfc2NhbGVfY29sID0gZDMuc2NhbGVcbiAgICAubGluZWFyKClcbiAgICAuZG9tYWluKFswLCBlbnJfbWF4XSlcbiAgICAucmFuZ2UoWzAsIDAuNzUgKiBwYXJhbXMubm9ybV9sYWJlbC53aWR0aC5jb2xdKTtcblxuICBlbnJfbWF4ID0gTWF0aC5hYnMoXy5tYXgocm93X25vZGVzLCBmdW5jdGlvbiAoZCkge1xuICAgIHJldHVybiBNYXRoLmFicyhkLnZhbHVlKTtcbiAgfSkudmFsdWUpO1xuICBwYXJhbXMubGFiZWxzLmJhcl9zY2FsZV9yb3cgPSBkMy5zY2FsZVxuICAgIC5saW5lYXIoKVxuICAgIC5kb21haW4oWzAsIGVucl9tYXhdKVxuICAgIC5yYW5nZShbMCwgcGFyYW1zLm5vcm1fbGFiZWwud2lkdGgucm93XSk7XG5cblxuICAvLyBEZWZpbmUgT3JkZXJpbmdzXG4gIHBhcmFtcy5tYXRyaXgub3JkZXJzID0ge1xuICAgIC8vIGluaVxuICAgIGluaV9yb3c6IGQzLnJhbmdlKHBhcmFtcy52aXoubnVtX2NvbF9ub2Rlcykuc29ydChmdW5jdGlvbiAoYSwgYikge1xuICAgICAgcmV0dXJuIGNvbF9ub2Rlc1tiXS5pbmkgLSBjb2xfbm9kZXNbYV0uaW5pO1xuICAgIH0pLFxuICAgIGluaV9jb2w6IGQzLnJhbmdlKHBhcmFtcy52aXoubnVtX3Jvd19ub2Rlcykuc29ydChmdW5jdGlvbiAoYSwgYikge1xuICAgICAgcmV0dXJuIHJvd19ub2Rlc1tiXS5pbmkgLSByb3dfbm9kZXNbYV0uaW5pO1xuICAgIH0pLFxuICAgIC8vIHJhbmtcbiAgICByYW5rX3JvdzogZDMucmFuZ2UocGFyYW1zLnZpei5udW1fY29sX25vZGVzKS5zb3J0KGZ1bmN0aW9uIChhLCBiKSB7XG4gICAgICByZXR1cm4gY29sX25vZGVzW2JdLnJhbmsgLSBjb2xfbm9kZXNbYV0ucmFuaztcbiAgICB9KSxcbiAgICByYW5rX2NvbDogZDMucmFuZ2UocGFyYW1zLnZpei5udW1fcm93X25vZGVzKS5zb3J0KGZ1bmN0aW9uIChhLCBiKSB7XG4gICAgICByZXR1cm4gcm93X25vZGVzW2JdLnJhbmsgLSByb3dfbm9kZXNbYV0ucmFuaztcbiAgICB9KSxcbiAgICAvLyBjbHVzdGVyZWRcbiAgICBjbHVzdF9yb3c6IGQzLnJhbmdlKHBhcmFtcy52aXoubnVtX2NvbF9ub2Rlcykuc29ydChmdW5jdGlvbiAoYSwgYikge1xuICAgICAgcmV0dXJuIGNvbF9ub2Rlc1tiXS5jbHVzdCAtIGNvbF9ub2Rlc1thXS5jbHVzdDtcbiAgICB9KSxcbiAgICBjbHVzdF9jb2w6IGQzLnJhbmdlKHBhcmFtcy52aXoubnVtX3Jvd19ub2Rlcykuc29ydChmdW5jdGlvbiAoYSwgYikge1xuICAgICAgcmV0dXJuIHJvd19ub2Rlc1tiXS5jbHVzdCAtIHJvd19ub2Rlc1thXS5jbHVzdDtcbiAgICB9KVxuICB9O1xuXG5cbiAgLy8gLy8gZGVmaW5lIGNsYXNzIG9yZGVyaW5nIC0gZGVmaW5lIG9uIGZyb250LWVuZFxuICAvLyBpZiAodXRpbHMuaGFzKGNvbF9ub2Rlc1swXSwnY2wnKSl7XG5cbiAgLy8gICAvLyB0aGUgb3JkZXIgc2hvdWxkIGJlIGludGVycHJldGVkIGFzIHRoZSBudGggbm9kZSBzaG91bGQgYmUgcG9zaXRpb25lZCBoZXJlXG4gIC8vICAgLy8gaW4gdGhlIG9yZGVyXG5cbiAgLy8gICB2YXIgdG1wX2NvbF9ub2RlcyA9IF8uc29ydEJ5KGNvbF9ub2RlcywnY2wnKVxuXG4gIC8vICAgdmFyIG9yZGVyZWRfY29sX25hbWVzID0gW11cbiAgLy8gICBmb3IgKHZhciBpPTA7IGk8IHRtcF9jb2xfbm9kZXMubGVuZ3RoOyBpKyspe1xuICAvLyAgICAgb3JkZXJlZF9jb2xfbmFtZXMucHVzaCggdG1wX2NvbF9ub2Rlc1tpXS5uYW1lICk7XG4gIC8vICAgfVxuXG4gIC8vICAgdmFyIG9yZGVyX2NvbF9jbGFzcyA9IFtdXG4gIC8vICAgZm9yICh2YXIgaT0wOyBpPCBjb2xfbm9kZXMubGVuZ3RoOyBpKyspe1xuICAvLyAgICAgdmFyIGluc3RfY29sX25hbWUgPSBvcmRlcmVkX2NvbF9uYW1lc1tpXTtcbiAgLy8gICAgIG9yZGVyX2NvbF9jbGFzcy5wdXNoKCBfLmluZGV4T2YoIHBhcmFtcy5uZXR3b3JrX2RhdGEuY29sX25vZGVzX25hbWVzLCBpbnN0X2NvbF9uYW1lKSApO1xuICAvLyAgIH1cblxuICAvLyAgIHBhcmFtcy5tYXRyaXgub3JkZXJzLmNsYXNzX3JvdyA9IG9yZGVyX2NvbF9jbGFzcztcbiAgLy8gfVxuXG4gIGlmICh1dGlscy5oYXMoY29sX25vZGVzWzBdLCAnY2xfaW5kZXgnKSkge1xuICAgIHBhcmFtcy5tYXRyaXgub3JkZXJzLmNsYXNzX3JvdyA9IGQzLnJhbmdlKHBhcmFtcy52aXoubnVtX2NvbF9ub2Rlcykuc29ydChmdW5jdGlvbiAoYSwgYikge1xuICAgICAgcmV0dXJuIGNvbF9ub2Rlc1tiXS5jbF9pbmRleCAtIGNvbF9ub2Rlc1thXS5jbF9pbmRleDtcbiAgICB9KTtcbiAgfVxuXG4gIHBhcmFtcy5tYXRyaXgueF9zY2FsZSA9IGQzLnNjYWxlLm9yZGluYWwoKS5yYW5nZUJhbmRzKFswLCBwYXJhbXMudml6LmNsdXN0LmRpbS53aWR0aF0pO1xuICBwYXJhbXMubWF0cml4Lnlfc2NhbGUgPSBkMy5zY2FsZS5vcmRpbmFsKCkucmFuZ2VCYW5kcyhbMCwgcGFyYW1zLnZpei5jbHVzdC5kaW0uaGVpZ2h0XSk7XG5cbiAgaWYgKHBhcmFtcy52aXouaW5zdF9vcmRlci5yb3cgPT09ICdpbmknKSB7XG4gICAgcGFyYW1zLm1hdHJpeC54X3NjYWxlLmRvbWFpbihwYXJhbXMubWF0cml4Lm9yZGVycy5pbmlfcm93KTtcbiAgfSBlbHNlIGlmIChwYXJhbXMudml6Lmluc3Rfb3JkZXIucm93ID09PSAnY2x1c3QnKSB7XG4gICAgcGFyYW1zLm1hdHJpeC54X3NjYWxlLmRvbWFpbihwYXJhbXMubWF0cml4Lm9yZGVycy5jbHVzdF9yb3cpO1xuICB9IGVsc2UgaWYgKHBhcmFtcy52aXouaW5zdF9vcmRlci5yb3cgPT09ICdyYW5rJykge1xuICAgIHBhcmFtcy5tYXRyaXgueF9zY2FsZS5kb21haW4ocGFyYW1zLm1hdHJpeC5vcmRlcnMucmFua19yb3cpO1xuICB9IGVsc2UgaWYgKHBhcmFtcy52aXouaW5zdF9vcmRlci5yb3cgPT09ICdjbGFzcycpIHtcbiAgICBpZiAodXRpbHMuaGFzKHBhcmFtcy5tYXRyaXgub3JkZXJzLCAnY2xhc3Nfcm93JykpIHtcbiAgICAgIHBhcmFtcy5tYXRyaXgueF9zY2FsZS5kb21haW4ocGFyYW1zLm1hdHJpeC5vcmRlcnMuY2xhc3Nfcm93KTtcbiAgICB9IGVsc2Uge1xuICAgICAgcGFyYW1zLm1hdHJpeC54X3NjYWxlLmRvbWFpbihwYXJhbXMubWF0cml4Lm9yZGVycy5jbHVzdF9yb3cpO1xuICAgIH1cblxuICB9XG5cbiAgaWYgKHBhcmFtcy52aXouaW5zdF9vcmRlci5jb2wgPT09ICdpbmknKSB7XG4gICAgcGFyYW1zLm1hdHJpeC55X3NjYWxlLmRvbWFpbihwYXJhbXMubWF0cml4Lm9yZGVycy5pbmlfY29sKTtcbiAgfSBlbHNlIGlmIChwYXJhbXMudml6Lmluc3Rfb3JkZXIuY29sID09PSAnY2x1c3QnKSB7XG4gICAgcGFyYW1zLm1hdHJpeC55X3NjYWxlLmRvbWFpbihwYXJhbXMubWF0cml4Lm9yZGVycy5jbHVzdF9jb2wpO1xuICB9IGVsc2UgaWYgKHBhcmFtcy52aXouaW5zdF9vcmRlci5jb2wgPT09ICdyYW5rJykge1xuICAgIHBhcmFtcy5tYXRyaXgueV9zY2FsZS5kb21haW4ocGFyYW1zLm1hdHJpeC5vcmRlcnMucmFua19jb2wpO1xuICB9IGVsc2UgaWYgKHBhcmFtcy52aXouaW5zdF9vcmRlci5jb2wgPT09ICdjbGFzcycpIHtcbiAgICBpZiAodXRpbHMuaGFzKHBhcmFtcy5tYXRyaXgub3JkZXJzLCAnY2xhc3Nfcm93JykpIHtcbiAgICAgIHBhcmFtcy5tYXRyaXgueV9zY2FsZS5kb21haW4ocGFyYW1zLm1hdHJpeC5vcmRlcnMuY2xhc3NfY29sKTtcbiAgICB9IGVsc2Uge1xuICAgICAgcGFyYW1zLm1hdHJpeC55X3NjYWxlLmRvbWFpbihwYXJhbXMubWF0cml4Lm9yZGVycy5jbHVzdF9jb2wpO1xuICAgIH1cbiAgfVxuXG4gIHBhcmFtcy5uZXR3b3JrX2RhdGEubGlua3MuZm9yRWFjaChmdW5jdGlvbiAoZCkge1xuICAgIC8vIGQubmFtZSA9IHJvd19ub2Rlc1tkLnNvdXJjZV0ubmFtZSArICdfJyArIGNvbF9ub2Rlc1tkLnRhcmdldF0ubmFtZTtcbiAgICAvLyBkLnJvd19uYW1lID0gcm93X25vZGVzW2Quc291cmNlXS5uYW1lO1xuICAgIC8vIGQuY29sX25hbWUgPSBjb2xfbm9kZXNbZC50YXJnZXRdLm5hbWU7XG4gICAgZC54ID0gcGFyYW1zLm1hdHJpeC54X3NjYWxlKGQudGFyZ2V0KTtcbiAgICBkLnkgPSBwYXJhbXMubWF0cml4Lnlfc2NhbGUoZC5zb3VyY2UpO1xuICB9KTtcblxuICAvLyAvLyBtYWtlIGxua3MgY3Jvc3NmaWx0ZXJcbiAgLy8gLy8gVE9ETyBjaGVjayBpZiByZWx5aW5nIG9uIGNyb3NzZmlsdGVyXG4gIC8vIHBhcmFtcy5jZiA9IHt9O1xuICAvLyBwYXJhbXMuY2YubGlua3MgPSBjcm9zc2ZpbHRlcihwYXJhbXMubmV0d29ya19kYXRhLmxpbmtzKTtcbiAgLy8gcGFyYW1zLmNmLmRpbV94ID0gcGFyYW1zLmNmLmxpbmtzLmRpbWVuc2lvbihmdW5jdGlvbiAoZCkge1xuICAvLyAgIHJldHVybiBkLng7XG4gIC8vIH0pO1xuICAvLyBwYXJhbXMuY2YuZGltX3kgPSBwYXJhbXMuY2YubGlua3MuZGltZW5zaW9uKGZ1bmN0aW9uIChkKSB7XG4gIC8vICAgcmV0dXJuIGQueTtcbiAgLy8gfSk7XG5cbiAgcGFyYW1zLm1hdHJpeC5tYXRyaXggPSBpbml0aWFsaXplX21hdHJpeChwYXJhbXMubmV0d29ya19kYXRhKTtcblxuICBwYXJhbXMudml6LmJvcmRlcl9mcmFjdGlvbiA9IDU1O1xuICBwYXJhbXMudml6LmJvcmRlcl93aWR0aCA9IHBhcmFtcy5tYXRyaXgueF9zY2FsZS5yYW5nZUJhbmQoKSAvXG4gICAgcGFyYW1zLnZpei5ib3JkZXJfZnJhY3Rpb247XG5cbiAgcGFyYW1zLnZpei56b29tX3N3aXRjaCA9IChwYXJhbXMudml6LmNsdXN0LmRpbS53aWR0aCAvIHBhcmFtcy52aXoubnVtX2NvbF9ub2RlcykgLyAocGFyYW1zLnZpei5jbHVzdC5kaW0uaGVpZ2h0IC8gcGFyYW1zLnZpei5udW1fcm93X25vZGVzKTtcblxuICBpZiAocGFyYW1zLnZpei56b29tX3N3aXRjaCA8IDEpIHtcbiAgICBwYXJhbXMudml6Lnpvb21fc3dpdGNoID0gMTtcbiAgfVxuXG4gIHBhcmFtcy5tYXRyaXgucmVjdF93aWR0aCA9IHBhcmFtcy5tYXRyaXgueF9zY2FsZS5yYW5nZUJhbmQoKSAtIDEgKiBwYXJhbXMudml6LmJvcmRlcl93aWR0aDtcbiAgcGFyYW1zLm1hdHJpeC5yZWN0X2hlaWdodCA9IHBhcmFtcy5tYXRyaXgueV9zY2FsZS5yYW5nZUJhbmQoKSAtIDEgKiBwYXJhbXMudml6LmJvcmRlcl93aWR0aCAvIHBhcmFtcy52aXouem9vbV9zd2l0Y2g7XG5cbiAgcGFyYW1zLnNjYWxlX2ZvbnRfb2Zmc2V0ID0gZDMuc2NhbGVcbiAgICAubGluZWFyKCkuZG9tYWluKFsxLCAwXSlcbiAgICAucmFuZ2UoWzAuOCwgMC41XSk7XG5cbiAgcGFyYW1zLmxhYmVscy5kZWZhdWx0X2ZzX3JvdyA9IHBhcmFtcy5tYXRyaXgueV9zY2FsZS5yYW5nZUJhbmQoKSAqIDEuMDE7XG4gIHBhcmFtcy5sYWJlbHMuZGVmYXVsdF9mc19jb2wgPSBwYXJhbXMubWF0cml4Lnhfc2NhbGUucmFuZ2VCYW5kKCkgKiAwLjg3O1xuXG4gIHBhcmFtcy52aXouem9vbV9zY2FsZV9mb250ID0ge307XG4gIHBhcmFtcy52aXouem9vbV9zY2FsZV9mb250LnJvdyA9IDE7XG4gIHBhcmFtcy52aXouem9vbV9zY2FsZV9mb250LmNvbCA9IDE7XG5cbiAgcGFyYW1zLnZpei5yZWFsX3pvb20gPSBwYXJhbXMubm9ybV9sYWJlbC53aWR0aC5jb2wgLyAocGFyYW1zLm1hdHJpeC54X3NjYWxlLnJhbmdlQmFuZCgpIC8gMik7XG5cbiAgaWYgKHV0aWxzLmhhcyhwYXJhbXMubmV0d29ya19kYXRhLCAnYWxsX2xpbmtzJykpIHtcbiAgICBwYXJhbXMubWF0cml4Lm1heF9saW5rID0gXy5tYXgocGFyYW1zLm5ldHdvcmtfZGF0YS5hbGxfbGlua3MsIGZ1bmN0aW9uIChkKSB7XG4gICAgICByZXR1cm4gTWF0aC5hYnMoZC52YWx1ZSk7XG4gICAgfSkudmFsdWU7XG4gIH0gZWxzZSB7XG4gICAgcGFyYW1zLm1hdHJpeC5tYXhfbGluayA9IF8ubWF4KHBhcmFtcy5uZXR3b3JrX2RhdGEubGlua3MsIGZ1bmN0aW9uIChkKSB7XG4gICAgICByZXR1cm4gTWF0aC5hYnMoZC52YWx1ZSk7XG4gICAgfSkudmFsdWU7XG4gIH1cblxuICBpZiAoY29uZmlnLmlucHV0X2RvbWFpbiA9PT0gMCkge1xuICAgIGlmIChwYXJhbXMubWF0cml4Lm9wYWNpdHlfZnVuY3Rpb24gPT09ICdsaW5lYXInKSB7XG4gICAgICBwYXJhbXMubWF0cml4Lm9wYWNpdHlfc2NhbGUgPSBkMy5zY2FsZS5saW5lYXIoKVxuICAgICAgICAuZG9tYWluKFswLCBNYXRoLmFicyhwYXJhbXMubWF0cml4Lm1heF9saW5rKV0pLmNsYW1wKHRydWUpXG4gICAgICAgIC5yYW5nZShbMC4wLCAxLjBdKTtcbiAgICB9IGVsc2UgaWYgKHBhcmFtcy5tYXRyaXgub3BhY2l0eV9mdW5jdGlvbiA9PT0gJ2xvZycpIHtcbiAgICAgIHBhcmFtcy5tYXRyaXgub3BhY2l0eV9zY2FsZSA9IGQzLnNjYWxlLmxvZygpXG4gICAgICAgIC5kb21haW4oWzAuMDAxLCBNYXRoLmFicyhwYXJhbXMubWF0cml4Lm1heF9saW5rKV0pLmNsYW1wKHRydWUpXG4gICAgICAgIC5yYW5nZShbMC4wLCAxLjBdKTtcbiAgICB9XG4gIH0gZWxzZSB7XG4gICAgaWYgKHBhcmFtcy5tYXRyaXgub3BhY2l0eV9mdW5jdGlvbiA9PT0gJ2xpbmVhcicpIHtcbiAgICAgIHBhcmFtcy5tYXRyaXgub3BhY2l0eV9zY2FsZSA9IGQzLnNjYWxlLmxpbmVhcigpXG4gICAgICAgIC5kb21haW4oWzAsIGNvbmZpZy5pbnB1dF9kb21haW5dKS5jbGFtcCh0cnVlKVxuICAgICAgICAucmFuZ2UoWzAuMCwgMS4wXSk7XG4gICAgfSBlbHNlIGlmIChwYXJhbXMubWF0cml4Lm9wYWNpdHlfZnVuY3Rpb24gPT09ICdsb2cnKSB7XG4gICAgICBwYXJhbXMubWF0cml4Lm9wYWNpdHlfc2NhbGUgPSBkMy5zY2FsZS5sb2coKVxuICAgICAgICAuZG9tYWluKFswLjAwMSwgY29uZmlnLmlucHV0X2RvbWFpbl0pLmNsYW1wKHRydWUpXG4gICAgICAgIC5yYW5nZShbMC4wLCAxLjBdKTtcbiAgICB9XG4gIH1cblxuICAvLyBUT0RPIGNoZWNrIGlmIHVzaW5nIHJ1bl90cmFuc1xuICBwYXJhbXMudml6LnJ1bl90cmFucyA9IGZhbHNlO1xuXG4gIGlmICh1dGlscy5oYXMocGFyYW1zLm5ldHdvcmtfZGF0YS5saW5rc1swXSwgJ3ZhbHVlX3VwJykgfHwgdXRpbHMuaGFzKHBhcmFtcy5uZXR3b3JrX2RhdGEubGlua3NbMF0sICd2YWx1ZV9kbicpKSB7XG4gICAgcGFyYW1zLm1hdHJpeC50aWxlX3R5cGUgPSAndXBkbic7XG4gIH0gZWxzZSB7XG4gICAgcGFyYW1zLm1hdHJpeC50aWxlX3R5cGUgPSAnc2ltcGxlJztcbiAgfVxuXG4gIGlmICh1dGlscy5oYXMocGFyYW1zLm5ldHdvcmtfZGF0YS5saW5rc1swXSwgJ2hpZ2hsaWdodCcpKSB7XG4gICAgcGFyYW1zLm1hdHJpeC5oaWdobGlnaHQgPSAxO1xuICB9IGVsc2Uge1xuICAgIHBhcmFtcy5tYXRyaXguaGlnaGxpZ2h0ID0gMDtcbiAgfVxuXG4gIHBhcmFtcy56b29tX2JlaGF2aW9yID0gZDMuYmVoYXZpb3Iuem9vbSgpXG4gICAgLnNjYWxlRXh0ZW50KFsxLCBwYXJhbXMudml6LnJlYWxfem9vbSAqIHBhcmFtcy52aXouem9vbV9zd2l0Y2hdKVxuICAgIC5vbignem9vbScsIGZ1bmN0aW9uKCl7XG4gICAgICB6b29tZWQocGFyYW1zKTtcbiAgICB9KTtcblxuICByZXR1cm4gcGFyYW1zO1xufTtcblxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIHNyYy9wYXJhbXMuanNcbiAqKi8iXSwibWFwcGluZ3MiOiI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7O0FBS0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUZBO0FBQ0E7QUFJQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFKQTtBQU1BO0FBTkE7QUFDQTtBQVFBO0FBQ0E7QUFDQTtBQURBO0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBaERBO0FBbURBOztBQW5EQTtBQXNEQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBOURBO0FBaUVBO0FBQ0E7QUFDQTtBQUNBOzs7QUFwRUE7QUFDQTtBQXdFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBakZBO0FBQ0E7O0FBREE7QUFDQTtBQXVGQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFEQTtBQUdBO0FBQ0E7QUFEQTtBQUNBO0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBL0dBO0FBQ0E7QUFvSEE7QUFDQTtBQUNBOztBQXZIQTtBQTBIQTtBQUNBO0FBQ0E7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFIQTtBQU1BO0FBQ0E7QUFGQTtBQUxBO0FBV0E7QUFDQTtBQVpBO0FBQ0E7QUFjQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBeEtBO0FBQ0E7O0FBREE7QUFDQTtBQWlMQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBREE7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRkE7QUFOQTtBQVlBO0FBQ0E7QUFiQTtBQUNBO0FBZUE7QUFDQTtBQURBO0FBQ0E7QUFJQTtBQUNBO0FBREE7QUFDQTtBQUdBO0FBQ0E7QUFJQTtBQUNBO0FBREE7QUFHQTtBQUNBOztBQWxPQTs7QUEwT0E7QUFDQTtBQURBO0FBR0E7QUFDQTtBQURBOztBQUlBO0FBQ0E7QUFEQTtBQUdBO0FBQ0E7QUFEQTs7QUFJQTtBQUNBO0FBREE7QUFHQTtBQUNBO0FBREE7QUFuQkE7QUFDQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUF6T0E7QUF3UkE7QUFDQTtBQURBO0FBREE7QUFDQTtBQUtBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFEQTtBQUdBO0FBREE7QUFHQTtBQURBO0FBR0E7QUFDQTtBQURBO0FBR0E7QUFIQTtBQURBO0FBQ0E7QUFRQTtBQUNBO0FBREE7QUFHQTtBQURBO0FBR0E7QUFEQTtBQUdBO0FBQ0E7QUFEQTtBQUdBO0FBSEE7QUFEQTtBQUNBO0FBT0E7Ozs7QUFJQTtBQUNBO0FBTEE7QUFDQTs7Ozs7Ozs7Ozs7O0FBOVRBO0FBQ0E7QUFpVkE7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFEQTtBQUNBO0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQURBO0FBREE7QUFLQTtBQUNBO0FBREE7QUFMQTtBQUNBO0FBU0E7QUFDQTtBQUNBO0FBREE7QUFLQTtBQURBO0FBTEE7QUFXQTtBQUNBO0FBREE7QUFLQTtBQURBO0FBZkE7QUFDQTs7QUF2WEE7QUFDQTtBQThZQTtBQUNBO0FBREE7QUFHQTtBQUhBO0FBQ0E7QUFLQTtBQUNBO0FBREE7QUFHQTtBQUhBO0FBQ0E7QUFLQTtBQUdBO0FBREE7QUFDQTtBQUdBO0FBamFBIiwic291cmNlUm9vdCI6IiJ9");

/***/ },
/* 6 */
/***/ function(module, exports, __webpack_require__) {

	eval("var utils = __webpack_require__(2);\nvar filter_using_new_nodes = __webpack_require__(7);\n\nmodule.exports = function (params, orig_network_data, change_view) {\n  var views = orig_network_data.views;\n  var filt_views;\n\n  // Get Row Filtering View\n  ///////////////////////////////////////////////////////////////\n  // change_view has the name of the new view (e.g. {N_row_sum:20})\n  // this view name is used to pull up the view information. The view consists\n  // of a description of the view (e.g N_row_sum number and distance type) and\n  // the nodes of the view (e.g. row_nodes and col_nodes). With the new set of\n  // nodes, new_nodes, the links will be filtered in order to only keep links\n  // between nodes that still exist in the view\n\n  if (utils.has(change_view, 'filter_row')) {\n\n    // failsafe if there is only row+col filtering from front-end\n    filt_views = _.filter(views, function (d) {\n\n      // failsafe from json\n      if (utils.has(d, 'filter_row')) {\n        // filter_row_value is the same as filter_row\n        return d.filter_row == change_view.filter_row;\n      } else {\n        return d.filt == change_view.filter_row;\n      }\n    });\n  } else if (utils.has(change_view, 'filter_row_value')) {\n\n    // filter row value\n    filt_views = _.filter(views, function (d) {\n\n      // failsafe from json\n      return d.filter_row_value == change_view.filter_row_value;\n    });\n  } else if (utils.has(change_view, 'pct_row_sum')) {\n\n    filt_views = _.filter(views, function (d) {\n      return d.pct_row_sum == change_view.pct_row_sum;\n    });\n  } else if (utils.has(change_view, 'filter_row_sum')) {\n\n    filt_views = _.filter(views, function (d) {\n      return d.filter_row_sum == change_view.filter_row_sum;\n    });\n  } else if (utils.has(change_view, 'filter_row_num')) {\n\n    filt_views = _.filter(views, function (d) {\n      return d.filter_row_num == change_view.filter_row_num;\n    });\n  } else if (utils.has(change_view, 'N_row_sum')) {\n\n    filt_views = _.filter(views, function (d) {\n      return d.N_row_sum == change_view.N_row_sum;\n    });\n\n    if (typeof filt_views === 'undefined') {\n      filt_views = [views[0]];\n    }\n  }\n\n  if (change_view === 'default') {\n    filt_views = [views[0]];\n  }\n\n  /*\n  get the inst_view\n  */\n\n  var inst_view;\n  var new_network_data;\n\n  // get the single view that will be used to update the network from\n  // the array of filtered views\n  if (params.show_categories === false) {\n    inst_view = filt_views[0];\n\n    if (utils.has(change_view, 'enr_score_type')) {\n\n      inst_view = _.filter(filt_views, function (d) {\n        return d.enr_score_type == change_view.enr_score_type;\n      })[0];\n    }\n  }\n\n  if (params.show_categories) {\n    // apply category filtering if necessary\n    inst_view = _.find(filt_views, function (d) {\n      return d.col_cat === params.current_col_cat;\n    });\n  }\n\n  /*\n  assign the inst_view, if it is defined\n  */\n  if (typeof inst_view !== 'undefined') {\n\n    var new_nodes = inst_view.nodes;\n    var links = orig_network_data.links;\n    new_network_data = filter_using_new_nodes(params, new_nodes, links, views);\n  } else {\n    new_network_data = orig_network_data;\n  }\n\n  return new_network_data;\n};//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNi5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy9zcmMvbmV0d29yay9jaGFuZ2VfbmV0d29ya192aWV3LmpzP2U4YmYiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIHV0aWxzID0gcmVxdWlyZSgnLi4vdXRpbHMnKTtcbnZhciBmaWx0ZXJfdXNpbmdfbmV3X25vZGVzID0gcmVxdWlyZSgnLi9maWx0ZXJfdXNpbmdfbmV3X25vZGVzJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24ocGFyYW1zLCBvcmlnX25ldHdvcmtfZGF0YSwgY2hhbmdlX3ZpZXcpIHtcbiAgdmFyIHZpZXdzID0gb3JpZ19uZXR3b3JrX2RhdGEudmlld3M7XG4gIHZhciBmaWx0X3ZpZXdzO1xuXG4gIC8vIEdldCBSb3cgRmlsdGVyaW5nIFZpZXdcbiAgLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vXG4gIC8vIGNoYW5nZV92aWV3IGhhcyB0aGUgbmFtZSBvZiB0aGUgbmV3IHZpZXcgKGUuZy4ge05fcm93X3N1bToyMH0pXG4gIC8vIHRoaXMgdmlldyBuYW1lIGlzIHVzZWQgdG8gcHVsbCB1cCB0aGUgdmlldyBpbmZvcm1hdGlvbi4gVGhlIHZpZXcgY29uc2lzdHNcbiAgLy8gb2YgYSBkZXNjcmlwdGlvbiBvZiB0aGUgdmlldyAoZS5nIE5fcm93X3N1bSBudW1iZXIgYW5kIGRpc3RhbmNlIHR5cGUpIGFuZFxuICAvLyB0aGUgbm9kZXMgb2YgdGhlIHZpZXcgKGUuZy4gcm93X25vZGVzIGFuZCBjb2xfbm9kZXMpLiBXaXRoIHRoZSBuZXcgc2V0IG9mXG4gIC8vIG5vZGVzLCBuZXdfbm9kZXMsIHRoZSBsaW5rcyB3aWxsIGJlIGZpbHRlcmVkIGluIG9yZGVyIHRvIG9ubHkga2VlcCBsaW5rc1xuICAvLyBiZXR3ZWVuIG5vZGVzIHRoYXQgc3RpbGwgZXhpc3QgaW4gdGhlIHZpZXdcblxuICBpZiAodXRpbHMuaGFzKGNoYW5nZV92aWV3LCdmaWx0ZXJfcm93Jykpe1xuXG4gICAgLy8gZmFpbHNhZmUgaWYgdGhlcmUgaXMgb25seSByb3crY29sIGZpbHRlcmluZyBmcm9tIGZyb250LWVuZFxuICAgIGZpbHRfdmlld3MgPSBfLmZpbHRlcih2aWV3cywgZnVuY3Rpb24oZCl7XG5cbiAgICAgIC8vIGZhaWxzYWZlIGZyb20ganNvblxuICAgICAgaWYgKHV0aWxzLmhhcyhkLCAnZmlsdGVyX3JvdycpKXtcbiAgICAgICAgLy8gZmlsdGVyX3Jvd192YWx1ZSBpcyB0aGUgc2FtZSBhcyBmaWx0ZXJfcm93XG4gICAgICAgIHJldHVybiBkLmZpbHRlcl9yb3cgPT0gY2hhbmdlX3ZpZXcuZmlsdGVyX3JvdztcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHJldHVybiBkLmZpbHQgPT0gY2hhbmdlX3ZpZXcuZmlsdGVyX3JvdztcbiAgICAgIH1cblxuICAgIH0pO1xuXG4gIH0gZWxzZSBpZiAodXRpbHMuaGFzKGNoYW5nZV92aWV3LCAnZmlsdGVyX3Jvd192YWx1ZScpKSB7XG5cbiAgICAvLyBmaWx0ZXIgcm93IHZhbHVlXG4gICAgZmlsdF92aWV3cyA9IF8uZmlsdGVyKHZpZXdzLCBmdW5jdGlvbihkKXtcblxuICAgICAgLy8gZmFpbHNhZmUgZnJvbSBqc29uXG4gICAgICByZXR1cm4gZC5maWx0ZXJfcm93X3ZhbHVlID09IGNoYW5nZV92aWV3LmZpbHRlcl9yb3dfdmFsdWU7XG5cbiAgICB9KTtcblxuICB9IGVsc2UgaWYgKHV0aWxzLmhhcyhjaGFuZ2VfdmlldywncGN0X3Jvd19zdW0nKSkge1xuXG4gICAgZmlsdF92aWV3cyA9IF8uZmlsdGVyKHZpZXdzLCBmdW5jdGlvbihkKXtcbiAgICAgIHJldHVybiBkLnBjdF9yb3dfc3VtID09IGNoYW5nZV92aWV3LnBjdF9yb3dfc3VtO1xuICAgIH0pO1xuXG4gIH0gZWxzZSBpZiAodXRpbHMuaGFzKGNoYW5nZV92aWV3LCdmaWx0ZXJfcm93X3N1bScpKSB7XG5cbiAgICBmaWx0X3ZpZXdzID0gXy5maWx0ZXIodmlld3MsIGZ1bmN0aW9uKGQpe1xuICAgICAgcmV0dXJuIGQuZmlsdGVyX3Jvd19zdW0gPT0gY2hhbmdlX3ZpZXcuZmlsdGVyX3Jvd19zdW07XG4gICAgfSk7XG5cbiAgfSBlbHNlIGlmICh1dGlscy5oYXMoY2hhbmdlX3ZpZXcsJ2ZpbHRlcl9yb3dfbnVtJykpIHtcblxuICAgIGZpbHRfdmlld3MgPSBfLmZpbHRlcih2aWV3cywgZnVuY3Rpb24oZCl7XG4gICAgICByZXR1cm4gZC5maWx0ZXJfcm93X251bSA9PSBjaGFuZ2Vfdmlldy5maWx0ZXJfcm93X251bTtcbiAgICB9KTtcblxuICB9IGVsc2UgaWYgKHV0aWxzLmhhcyhjaGFuZ2VfdmlldywgJ05fcm93X3N1bScpKXtcblxuICAgIGZpbHRfdmlld3MgPSBfLmZpbHRlcih2aWV3cywgZnVuY3Rpb24oZCl7XG4gICAgICByZXR1cm4gZC5OX3Jvd19zdW0gPT0gY2hhbmdlX3ZpZXcuTl9yb3dfc3VtO1xuICAgIH0pO1xuXG4gICAgaWYodHlwZW9mIGZpbHRfdmlld3MgPT09ICd1bmRlZmluZWQnKXtcbiAgICAgICAgZmlsdF92aWV3cyA9IFt2aWV3c1swXV07XG4gICAgfVxuXG4gIH1cblxuICBpZiAoY2hhbmdlX3ZpZXc9PT0nZGVmYXVsdCcpe1xuICAgIGZpbHRfdmlld3MgPSBbdmlld3NbMF1dO1xuICB9XG5cbiAgLypcbiAgZ2V0IHRoZSBpbnN0X3ZpZXdcbiAgKi9cblxuICB2YXIgaW5zdF92aWV3O1xuICB2YXIgbmV3X25ldHdvcmtfZGF0YTtcblxuICAvLyBnZXQgdGhlIHNpbmdsZSB2aWV3IHRoYXQgd2lsbCBiZSB1c2VkIHRvIHVwZGF0ZSB0aGUgbmV0d29yayBmcm9tXG4gIC8vIHRoZSBhcnJheSBvZiBmaWx0ZXJlZCB2aWV3c1xuICBpZiAoIHBhcmFtcy5zaG93X2NhdGVnb3JpZXMgPT09IGZhbHNlICl7XG4gICAgaW5zdF92aWV3ID0gZmlsdF92aWV3c1swXTtcblxuICAgIGlmICh1dGlscy5oYXMoY2hhbmdlX3ZpZXcsJ2Vucl9zY29yZV90eXBlJykpe1xuXG4gICAgICBpbnN0X3ZpZXcgPSBfLmZpbHRlcihmaWx0X3ZpZXdzLCBmdW5jdGlvbihkKXtcbiAgICAgICAgcmV0dXJuIGQuZW5yX3Njb3JlX3R5cGUgPT0gY2hhbmdlX3ZpZXcuZW5yX3Njb3JlX3R5cGU7XG4gICAgICB9KVswXTtcblxuICAgIH1cblxuICB9XG5cbiAgaWYgKHBhcmFtcy5zaG93X2NhdGVnb3JpZXMpe1xuICAgIC8vIGFwcGx5IGNhdGVnb3J5IGZpbHRlcmluZyBpZiBuZWNlc3NhcnlcbiAgICBpbnN0X3ZpZXcgPSBfLmZpbmQoZmlsdF92aWV3cywgZnVuY3Rpb24oZCl7XG4gICAgICByZXR1cm4gZC5jb2xfY2F0ID09PSBwYXJhbXMuY3VycmVudF9jb2xfY2F0O1xuICAgIH0pO1xuICB9XG5cbiAgLypcbiAgYXNzaWduIHRoZSBpbnN0X3ZpZXcsIGlmIGl0IGlzIGRlZmluZWRcbiAgKi9cbiAgaWYgKHR5cGVvZiBpbnN0X3ZpZXcgIT09ICd1bmRlZmluZWQnKXtcblxuICAgIHZhciBuZXdfbm9kZXMgPSBpbnN0X3ZpZXcubm9kZXM7XG4gICAgdmFyIGxpbmtzID0gb3JpZ19uZXR3b3JrX2RhdGEubGlua3M7XG4gICAgbmV3X25ldHdvcmtfZGF0YSA9IGZpbHRlcl91c2luZ19uZXdfbm9kZXMocGFyYW1zLCBuZXdfbm9kZXMsIGxpbmtzLCB2aWV3cyk7XG5cbiAgfSBlbHNlIHtcbiAgICBuZXdfbmV0d29ya19kYXRhID0gb3JpZ19uZXR3b3JrX2RhdGE7XG4gIH1cblxuICByZXR1cm4gbmV3X25ldHdvcmtfZGF0YTtcbn07XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiBzcmMvbmV0d29yay9jaGFuZ2VfbmV0d29ya192aWV3LmpzXG4gKiovIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7Ozs7OztBQUhBO0FBQ0E7O0FBZUE7QUFDQTs7QUFFQTs7QUFFQTtBQUZBO0FBSUE7QUFKQTtBQUhBO0FBSEE7QUFDQTs7QUFpQkE7QUFDQTs7QUFFQTtBQUhBO0FBSEE7QUFDQTtBQVdBO0FBQ0E7QUFEQTtBQUZBO0FBQ0E7QUFPQTtBQUNBO0FBREE7QUFGQTtBQUNBO0FBT0E7QUFDQTtBQURBO0FBRkE7QUFDQTtBQU9BO0FBQ0E7QUFEQTtBQUNBO0FBR0E7QUFDQTtBQURBO0FBTkE7QUFDQTtBQVdBO0FBQ0E7QUFEQTtBQUNBOzs7OztBQXJFQTtBQTZFQTtBQUNBOzs7QUE5RUE7QUFrRkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBREE7QUFGQTtBQUhBO0FBQ0E7QUFZQTs7QUFFQTtBQUNBO0FBREE7QUFGQTtBQUNBOzs7O0FBL0ZBO0FBQ0E7QUF5R0E7QUFDQTtBQUNBO0FBSkE7QUFPQTtBQVBBO0FBQ0E7QUFTQTtBQWxIQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ },
/* 7 */
/***/ function(module, exports) {

	eval("module.exports = function (params, new_nodes, links, views) {\n\n  // get new names of rows and cols\n  var row_names = _.pluck(new_nodes.row_nodes, 'name');\n  var col_names = _.pluck(new_nodes.col_nodes, 'name');\n\n  var new_links = _.filter(links, function (d) {\n    var inst_row = d.name.split('_')[0];\n    var inst_col = d.name.split('_')[1];\n\n    var row_index = _.indexOf(row_names, inst_row);\n    var col_index = _.indexOf(col_names, inst_col);\n\n    if (row_index > -1 & col_index > -1) {\n      // redefine source and target\n      d.source = row_index;\n      d.target = col_index;\n      return d;\n    }\n  });\n\n  // set up new_network_data\n  var new_network_data = {};\n  // rows\n  new_network_data.row_nodes = new_nodes.row_nodes;\n  new_network_data.row_nodes_names = row_names;\n  // cols\n  new_network_data.col_nodes = new_nodes.col_nodes;\n  new_network_data.col_nodes_names = col_names;\n  // links\n  new_network_data.links = new_links;\n\n  // save all links\n  new_network_data.all_links = links;\n\n  // pass on all views\n  new_network_data.views = views;\n\n  return new_network_data;\n};//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy9zcmMvbmV0d29yay9maWx0ZXJfdXNpbmdfbmV3X25vZGVzLmpzPzg0MjAiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihwYXJhbXMsIG5ld19ub2RlcywgbGlua3MsIHZpZXdzKSB7XG5cbiAgLy8gZ2V0IG5ldyBuYW1lcyBvZiByb3dzIGFuZCBjb2xzXG4gIHZhciByb3dfbmFtZXMgPSBfLnBsdWNrKG5ld19ub2Rlcy5yb3dfbm9kZXMsICduYW1lJyk7XG4gIHZhciBjb2xfbmFtZXMgPSBfLnBsdWNrKG5ld19ub2Rlcy5jb2xfbm9kZXMsICduYW1lJyk7XG5cbiAgdmFyIG5ld19saW5rcyA9IF8uZmlsdGVyKGxpbmtzLCBmdW5jdGlvbihkKXtcbiAgICB2YXIgaW5zdF9yb3cgPSBkLm5hbWUuc3BsaXQoJ18nKVswXTtcbiAgICB2YXIgaW5zdF9jb2wgPSBkLm5hbWUuc3BsaXQoJ18nKVsxXTtcblxuICAgIHZhciByb3dfaW5kZXggPSBfLmluZGV4T2Yocm93X25hbWVzLCBpbnN0X3Jvdyk7XG4gICAgdmFyIGNvbF9pbmRleCA9IF8uaW5kZXhPZihjb2xfbmFtZXMsIGluc3RfY29sKTtcblxuICAgIGlmICggcm93X2luZGV4ID4tMSAmIGNvbF9pbmRleCA+LTEgKXtcbiAgICAgIC8vIHJlZGVmaW5lIHNvdXJjZSBhbmQgdGFyZ2V0XG4gICAgICBkLnNvdXJjZSA9IHJvd19pbmRleDtcbiAgICAgIGQudGFyZ2V0ID0gY29sX2luZGV4O1xuICAgICAgcmV0dXJuIGQ7XG4gICAgfVxuICB9KTtcblxuICAvLyBzZXQgdXAgbmV3X25ldHdvcmtfZGF0YVxuICB2YXIgbmV3X25ldHdvcmtfZGF0YSA9IHt9O1xuICAvLyByb3dzXG4gIG5ld19uZXR3b3JrX2RhdGEucm93X25vZGVzID0gbmV3X25vZGVzLnJvd19ub2RlcztcbiAgbmV3X25ldHdvcmtfZGF0YS5yb3dfbm9kZXNfbmFtZXMgPSByb3dfbmFtZXM7XG4gIC8vIGNvbHNcbiAgbmV3X25ldHdvcmtfZGF0YS5jb2xfbm9kZXMgPSBuZXdfbm9kZXMuY29sX25vZGVzO1xuICBuZXdfbmV0d29ya19kYXRhLmNvbF9ub2Rlc19uYW1lcyA9IGNvbF9uYW1lcztcbiAgLy8gbGlua3NcbiAgbmV3X25ldHdvcmtfZGF0YS5saW5rcyA9IG5ld19saW5rcztcblxuICAvLyBzYXZlIGFsbCBsaW5rc1xuICBuZXdfbmV0d29ya19kYXRhLmFsbF9saW5rcyA9IGxpbmtzO1xuXG4gIC8vIHBhc3Mgb24gYWxsIHZpZXdzXG4gIG5ld19uZXR3b3JrX2RhdGEudmlld3MgPSB2aWV3cztcblxuICByZXR1cm4gbmV3X25ldHdvcmtfZGF0YTtcbn07XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiBzcmMvbmV0d29yay9maWx0ZXJfdXNpbmdfbmV3X25vZGVzLmpzXG4gKiovIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBSkE7QUFQQTtBQUNBOztBQVBBOztBQUFBO0FBeUJBOztBQXpCQTtBQTRCQTs7QUE1QkE7QUFDQTs7QUFEQTtBQUNBOztBQURBO0FBQ0E7QUFxQ0E7QUF0Q0EiLCJzb3VyY2VSb290IjoiIn0=");

/***/ },
/* 8 */
/***/ function(module, exports) {

	eval("// resize parent div\nmodule.exports = function (params) {\n\n  // get outer_margins\n  var outer_margins;\n  if (params.viz.expand === false) {\n    outer_margins = params.viz.outer_margins;\n  } else {\n    outer_margins = params.viz.outer_margins_expand;\n  }\n\n  if (params.viz.resize) {\n\n    // get the size of the window\n    var screen_width = window.innerWidth;\n    var screen_height = window.innerHeight;\n\n    var cont_dim = {};\n    cont_dim.width = screen_width - outer_margins.left - outer_margins.right;\n    cont_dim.height = screen_height - outer_margins.top - outer_margins.bottom;\n\n    // resize and position\n    d3.select(params.viz.viz_wrapper).style('float', 'right').style('margin-top', outer_margins.top + 'px').style('width', cont_dim.width + 'px').style('height', cont_dim.height + 'px');\n  } else {\n\n    // position\n    d3.select(params.viz.viz_wrapper).style('float', 'right').style('margin-top', outer_margins.top + 'px');\n  }\n};//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiOC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy9zcmMvcGFyZW50X2Rpdl9zaXplLmpzPzFjMDIiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gcmVzaXplIHBhcmVudCBkaXZcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24ocGFyYW1zKSB7XG5cbiAgLy8gZ2V0IG91dGVyX21hcmdpbnNcbiAgdmFyIG91dGVyX21hcmdpbnM7XG4gIGlmIChwYXJhbXMudml6LmV4cGFuZCA9PT0gZmFsc2UpIHtcbiAgICBvdXRlcl9tYXJnaW5zID0gcGFyYW1zLnZpei5vdXRlcl9tYXJnaW5zO1xuICB9IGVsc2Uge1xuICAgIG91dGVyX21hcmdpbnMgPSBwYXJhbXMudml6Lm91dGVyX21hcmdpbnNfZXhwYW5kO1xuICB9XG5cbiAgaWYgKHBhcmFtcy52aXoucmVzaXplKSB7XG5cbiAgICAvLyBnZXQgdGhlIHNpemUgb2YgdGhlIHdpbmRvd1xuICAgIHZhciBzY3JlZW5fd2lkdGggPSB3aW5kb3cuaW5uZXJXaWR0aDtcbiAgICB2YXIgc2NyZWVuX2hlaWdodCA9IHdpbmRvdy5pbm5lckhlaWdodDtcblxuICAgIHZhciBjb250X2RpbSA9IHt9O1xuICAgIGNvbnRfZGltLndpZHRoID0gc2NyZWVuX3dpZHRoIC0gb3V0ZXJfbWFyZ2lucy5sZWZ0IC0gb3V0ZXJfbWFyZ2lucy5yaWdodDtcbiAgICBjb250X2RpbS5oZWlnaHQgPSBzY3JlZW5faGVpZ2h0IC0gb3V0ZXJfbWFyZ2lucy50b3AgLSBvdXRlcl9tYXJnaW5zLmJvdHRvbTtcblxuICAgIC8vIHJlc2l6ZSBhbmQgcG9zaXRpb25cbiAgICBkMy5zZWxlY3QocGFyYW1zLnZpei52aXpfd3JhcHBlcilcbiAgICAgIC5zdHlsZSgnZmxvYXQnLCAncmlnaHQnKVxuICAgICAgLnN0eWxlKCdtYXJnaW4tdG9wJywgb3V0ZXJfbWFyZ2lucy50b3AgKyAncHgnKVxuICAgICAgLnN0eWxlKCd3aWR0aCcsIGNvbnRfZGltLndpZHRoICsgJ3B4JylcbiAgICAgIC5zdHlsZSgnaGVpZ2h0JywgY29udF9kaW0uaGVpZ2h0ICsgJ3B4Jyk7XG5cbiAgfSBlbHNlIHtcblxuICAgIC8vIHBvc2l0aW9uXG4gICAgZDMuc2VsZWN0KHBhcmFtcy52aXoudml6X3dyYXBwZXIpXG4gICAgICAuc3R5bGUoJ2Zsb2F0JywgJ3JpZ2h0JylcbiAgICAgIC5zdHlsZSgnbWFyZ2luLXRvcCcsIG91dGVyX21hcmdpbnMudG9wICsgJ3B4Jyk7XG4gIH1cbn07XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiBzcmMvcGFyZW50X2Rpdl9zaXplLmpzXG4gKiovIl0sIm1hcHBpbmdzIjoiO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFEQTtBQUdBO0FBSEE7QUFDQTtBQUtBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBVEE7QUFBQTtBQUNBOztBQW1CQTtBQXBCQTtBQVZBIiwic291cmNlUm9vdCI6IiJ9");

/***/ },
/* 9 */
/***/ function(module, exports, __webpack_require__) {

	eval("var utils = __webpack_require__(2);\n\nmodule.exports = function (network_data) {\n  var matrix = [];\n  var ini_object;\n\n  network_data.row_nodes.forEach(function (tmp, row_index) {\n\n    matrix[row_index] = {};\n    matrix[row_index].name = network_data.row_nodes[row_index].name;\n    matrix[row_index].row_data = d3.range(network_data.col_nodes.length).map(function (col_index) {\n\n      if (utils.has(network_data.links[0], 'value_up') || utils.has(network_data.links[0], 'value_dn')) {\n        ini_object = {\n          pos_x: col_index,\n          pos_y: row_index,\n          value: 0,\n          value_up: 0,\n          value_dn: 0,\n          highlight: 0\n        };\n      } else {\n\n        ini_object = {\n          pos_x: col_index,\n          pos_y: row_index,\n          value: 0,\n          highlight: 0\n        };\n      }\n      return ini_object;\n    });\n  });\n\n  network_data.links.forEach(function (link) {\n\n    // transfer additional link information is necessary\n    matrix[link.source].row_data[link.target].value = link.value;\n    matrix[link.source].row_data[link.target].row_name = link.row_name;\n    matrix[link.source].row_data[link.target].col_name = link.col_name;\n\n    if (utils.has(link, 'value_up') || utils.has(link, 'value_dn')) {\n      matrix[link.source].row_data[link.target].value_up = link.value_up;\n      matrix[link.source].row_data[link.target].value_dn = link.value_dn;\n    }\n\n    if (link.highlight) {\n      matrix[link.source].row_data[link.target].highlight = link.highlight;\n    }\n    if (link.info) {\n      matrix[link.source].row_data[link.target].info = link.info;\n    }\n  });\n\n  return matrix;\n};//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiOS5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy9zcmMvaW5pdGlhbGl6ZV9tYXRyaXguanM/NTcxYSJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgdXRpbHMgPSByZXF1aXJlKCcuL3V0aWxzJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24obmV0d29ya19kYXRhKSB7XG4gIHZhciBtYXRyaXggPSBbXTtcbiAgdmFyIGluaV9vYmplY3Q7XG5cbiAgbmV0d29ya19kYXRhLnJvd19ub2Rlcy5mb3JFYWNoKGZ1bmN0aW9uICh0bXAsIHJvd19pbmRleCkge1xuXG4gICAgbWF0cml4W3Jvd19pbmRleF0gPSB7fTtcbiAgICBtYXRyaXhbcm93X2luZGV4XS5uYW1lID0gbmV0d29ya19kYXRhLnJvd19ub2Rlc1tyb3dfaW5kZXhdLm5hbWU7XG4gICAgbWF0cml4W3Jvd19pbmRleF0ucm93X2RhdGEgPSBkMy5yYW5nZShuZXR3b3JrX2RhdGEuY29sX25vZGVzLmxlbmd0aCkubWFwKFxuICAgICAgZnVuY3Rpb24gKGNvbF9pbmRleCkge1xuXG4gICAgICAgIGlmICh1dGlscy5oYXMobmV0d29ya19kYXRhLmxpbmtzWzBdLCAndmFsdWVfdXAnKSB8fCB1dGlscy5oYXMobmV0d29ya19kYXRhLmxpbmtzWzBdLCAndmFsdWVfZG4nKSkge1xuICAgICAgICAgIGluaV9vYmplY3QgPSB7XG4gICAgICAgICAgICBwb3NfeDogY29sX2luZGV4LFxuICAgICAgICAgICAgcG9zX3k6IHJvd19pbmRleCxcbiAgICAgICAgICAgIHZhbHVlOiAwLFxuICAgICAgICAgICAgdmFsdWVfdXA6IDAsXG4gICAgICAgICAgICB2YWx1ZV9kbjogMCxcbiAgICAgICAgICAgIGhpZ2hsaWdodDogMFxuICAgICAgICAgIH07XG5cbiAgICAgICAgfSBlbHNlIHtcblxuICAgICAgICAgIGluaV9vYmplY3QgPSB7XG4gICAgICAgICAgICBwb3NfeDogY29sX2luZGV4LFxuICAgICAgICAgICAgcG9zX3k6IHJvd19pbmRleCxcbiAgICAgICAgICAgIHZhbHVlOiAwLFxuICAgICAgICAgICAgaGlnaGxpZ2h0OiAwXG4gICAgICAgICAgfTtcblxuICAgICAgICB9XG4gICAgICAgIHJldHVybiBpbmlfb2JqZWN0O1xuICAgICAgfSk7XG5cbiAgfSk7XG5cbiAgbmV0d29ya19kYXRhLmxpbmtzLmZvckVhY2goZnVuY3Rpb24gKGxpbmspIHtcblxuICAgIC8vIHRyYW5zZmVyIGFkZGl0aW9uYWwgbGluayBpbmZvcm1hdGlvbiBpcyBuZWNlc3NhcnlcbiAgICBtYXRyaXhbbGluay5zb3VyY2VdLnJvd19kYXRhW2xpbmsudGFyZ2V0XS52YWx1ZSA9IGxpbmsudmFsdWU7XG4gICAgbWF0cml4W2xpbmsuc291cmNlXS5yb3dfZGF0YVtsaW5rLnRhcmdldF0ucm93X25hbWUgPSBsaW5rLnJvd19uYW1lO1xuICAgIG1hdHJpeFtsaW5rLnNvdXJjZV0ucm93X2RhdGFbbGluay50YXJnZXRdLmNvbF9uYW1lID0gbGluay5jb2xfbmFtZTtcblxuICAgIGlmICh1dGlscy5oYXMobGluaywgJ3ZhbHVlX3VwJykgfHwgdXRpbHMuaGFzKGxpbmssICd2YWx1ZV9kbicpKSB7XG4gICAgICBtYXRyaXhbbGluay5zb3VyY2VdLnJvd19kYXRhW2xpbmsudGFyZ2V0XS52YWx1ZV91cCA9IGxpbmsudmFsdWVfdXA7XG4gICAgICBtYXRyaXhbbGluay5zb3VyY2VdLnJvd19kYXRhW2xpbmsudGFyZ2V0XS52YWx1ZV9kbiA9IGxpbmsudmFsdWVfZG47XG4gICAgfVxuXG4gICAgaWYgKGxpbmsuaGlnaGxpZ2h0KSB7XG4gICAgICBtYXRyaXhbbGluay5zb3VyY2VdLnJvd19kYXRhW2xpbmsudGFyZ2V0XS5oaWdobGlnaHQgPSBsaW5rLmhpZ2hsaWdodDtcbiAgICB9XG4gICAgaWYgKGxpbmsuaW5mbykge1xuICAgICAgbWF0cml4W2xpbmsuc291cmNlXS5yb3dfZGF0YVtsaW5rLnRhcmdldF0uaW5mbyA9IGxpbmsuaW5mbztcbiAgICB9XG4gIH0pO1xuXG4gIHJldHVybiBtYXRyaXg7XG59O1xuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogc3JjL2luaXRpYWxpemVfbWF0cml4LmpzXG4gKiovIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBTkE7QUFEQTtBQUNBO0FBV0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUpBO0FBWkE7QUFvQkE7QUF0QkE7QUFMQTtBQUNBO0FBK0JBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFGQTtBQUNBO0FBSUE7QUFDQTtBQURBO0FBR0E7QUFDQTtBQURBO0FBZkE7QUFDQTtBQW1CQTtBQXhEQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ },
/* 10 */
/***/ function(module, exports, __webpack_require__) {

	eval("var apply_transformation = __webpack_require__(11);\n\nmodule.exports = function (params) {\n  var zoom_x = d3.event.scale,\n      zoom_y = d3.event.scale,\n      trans_x = d3.event.translate[0] - params.viz.clust.margin.left,\n      trans_y = d3.event.translate[1] - params.viz.clust.margin.top;\n\n  apply_transformation(params, trans_x, trans_y, zoom_x, zoom_y);\n};//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTAuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vc3JjL3pvb21lZC5qcz82MzFhIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBhcHBseV90cmFuc2Zvcm1hdGlvbiA9IHJlcXVpcmUoJy4vYXBwbHlfdHJhbnNmb3JtYXRpb24nKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihwYXJhbXMpIHtcbiAgdmFyIHpvb21feCA9IGQzLmV2ZW50LnNjYWxlLFxuICAgIHpvb21feSA9IGQzLmV2ZW50LnNjYWxlLFxuICAgIHRyYW5zX3ggPSBkMy5ldmVudC50cmFuc2xhdGVbMF0gLSBwYXJhbXMudml6LmNsdXN0Lm1hcmdpbi5sZWZ0LFxuICAgIHRyYW5zX3kgPSBkMy5ldmVudC50cmFuc2xhdGVbMV0gLSBwYXJhbXMudml6LmNsdXN0Lm1hcmdpbi50b3A7XG5cbiAgYXBwbHlfdHJhbnNmb3JtYXRpb24ocGFyYW1zLCB0cmFuc194LCB0cmFuc195LCB6b29tX3gsIHpvb21feSk7XG59O1xuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogc3JjL3pvb21lZC5qc1xuICoqLyJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBTkEiLCJzb3VyY2VSb290IjoiIn0=");

/***/ },
/* 11 */
/***/ function(module, exports, __webpack_require__) {

	eval("var utils = __webpack_require__(2);\nvar constrain_font_size = __webpack_require__(12);\n\nmodule.exports = function (params, trans_x, trans_y, zoom_x, zoom_y) {\n  var d3_scale = zoom_x;\n\n  // y - rules\n  ///////////////////////////////////////////////////\n  // available panning room in the y direction\n  // multiple extra room (zoom - 1) by the width\n  // always defined in the same way\n  var pan_room_y = (d3_scale - 1) * params.viz.clust.dim.height;\n\n  // do not translate if translate in y direction is positive\n  if (trans_y >= 0) {\n    // restrict transformation parameters\n    // no panning in either direction\n    trans_y = 0;\n  }\n  // restrict y pan to pan_room_y if necessary\n  else if (trans_y <= -pan_room_y) {\n      trans_y = -pan_room_y;\n    }\n\n  // x - rules\n  ///////////////////////////////////////////////////\n  // zoom in y direction only - translate in y only\n  if (d3_scale < params.viz.zoom_switch) {\n    // no x translate or zoom\n    trans_x = 0;\n    zoom_x = 1;\n  }\n  // zoom in both directions\n  // scale is greater than params.viz.zoom_switch\n  else {\n      // available panning room in the x direction\n      // multiple extra room (zoom - 1) by the width\n      var pan_room_x = (d3_scale / params.viz.zoom_switch - 1) * params.viz.clust.dim.width;\n\n      // no panning in the positive direction\n      if (trans_x > 0) {\n        // restrict transformation parameters\n        // no panning in the x direction\n        trans_x = 0;\n        // set zoom_x\n        zoom_x = d3_scale / params.viz.zoom_switch;\n      }\n      // restrict panning to pan_room_x\n      else if (trans_x <= -pan_room_x) {\n          // restrict transformation parameters\n          // no panning in the x direction\n          trans_x = -pan_room_x;\n          // set zoom_x\n          zoom_x = d3_scale / params.viz.zoom_switch;\n        }\n        // allow two dimensional panning\n        else {\n            // restrict transformation parameters\n            // set zoom_x\n            zoom_x = d3_scale / params.viz.zoom_switch;\n          }\n    }\n\n  // apply transformation and reset translate vector\n  // the zoom vector (zoom.scale) never gets reset\n  ///////////////////////////////////////////////////\n  // translate clustergram\n  // viz.get_clust_group()\n  d3.select(params.root + ' .clust_group').attr('transform', 'translate(' + [trans_x, trans_y] + ') scale(' + zoom_x + ',' + zoom_y + ')');\n\n  // transform row labels\n  d3.select(params.root + ' .row_label_zoom_container').attr('transform', 'translate(' + [0, trans_y] + ') scale(' + zoom_y + ')');\n\n  // transform row_zoom_container\n  // use the offset saved in params, only zoom in the y direction\n  d3.select(params.root + ' .row_zoom_container').attr('transform', 'translate(' + [0, trans_y] + ') scale( 1,' + zoom_y + ')');\n\n  // transform col labels\n  // move down col labels as zooming occurs, subtract trans_x - 20 almost works\n  d3.select(params.root + ' .col_zoom_container').attr('transform', 'translate(' + [trans_x, 0] + ') scale(' + zoom_x + ')');\n\n  // transform col_class\n  d3.select(params.root + ' .col_viz_zoom_container').attr('transform', 'translate(' + [trans_x, 0] + ') scale(' + zoom_x + ',1)');\n\n  // reset translate vector - add back margins to trans_x and trans_y\n  params.zoom_behavior.translate([trans_x + params.viz.clust.margin.left, trans_y + params.viz.clust.margin.top]);\n\n  var trans = false;\n  constrain_font_size(params, trans);\n\n  // resize label bars if necessary\n  ////////////////////////////////////\n\n  if (utils.has(params.network_data.row_nodes[0], 'value')) {\n    d3.selectAll(params.root + ' .row_bars').attr('width', function (d) {\n      var inst_value = 0;\n      inst_value = params.labels.bar_scale_row(Math.abs(d.value)) / zoom_y;\n      return inst_value;\n    }).attr('x', function (d) {\n      var inst_value = 0;\n      inst_value = -params.labels.bar_scale_row(Math.abs(d.value)) / zoom_y;\n      return inst_value;\n    });\n  }\n\n  if (utils.has(params.network_data.col_nodes[0], 'value')) {\n    d3.selectAll(params.root + ' .col_bars').attr('width', function (d) {\n      var inst_value = 0;\n      if (d.value > 0) {\n        inst_value = params.labels.bar_scale_col(d.value) / zoom_x;\n      }\n      return inst_value;\n    });\n  }\n};//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTEuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vc3JjL2FwcGx5X3RyYW5zZm9ybWF0aW9uLmpzPzIzMDciXSwic291cmNlc0NvbnRlbnQiOlsidmFyIHV0aWxzID0gcmVxdWlyZSgnLi91dGlscycpO1xudmFyIGNvbnN0cmFpbl9mb250X3NpemUgPSByZXF1aXJlKCcuL2NvbnN0cmFpbl9mb250X3NpemUnKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihwYXJhbXMsIHRyYW5zX3gsIHRyYW5zX3ksIHpvb21feCwgem9vbV95KSB7XG4gIHZhciBkM19zY2FsZSA9IHpvb21feDtcblxuICAvLyB5IC0gcnVsZXNcbiAgLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vXG4gIC8vIGF2YWlsYWJsZSBwYW5uaW5nIHJvb20gaW4gdGhlIHkgZGlyZWN0aW9uXG4gIC8vIG11bHRpcGxlIGV4dHJhIHJvb20gKHpvb20gLSAxKSBieSB0aGUgd2lkdGhcbiAgLy8gYWx3YXlzIGRlZmluZWQgaW4gdGhlIHNhbWUgd2F5XG4gIHZhciBwYW5fcm9vbV95ID0gKGQzX3NjYWxlIC0gMSkgKiBwYXJhbXMudml6LmNsdXN0LmRpbS5oZWlnaHQ7XG5cbiAgLy8gZG8gbm90IHRyYW5zbGF0ZSBpZiB0cmFuc2xhdGUgaW4geSBkaXJlY3Rpb24gaXMgcG9zaXRpdmVcbiAgaWYgKHRyYW5zX3kgPj0gMCkge1xuICAgIC8vIHJlc3RyaWN0IHRyYW5zZm9ybWF0aW9uIHBhcmFtZXRlcnNcbiAgICAvLyBubyBwYW5uaW5nIGluIGVpdGhlciBkaXJlY3Rpb25cbiAgICB0cmFuc195ID0gMDtcbiAgfVxuICAvLyByZXN0cmljdCB5IHBhbiB0byBwYW5fcm9vbV95IGlmIG5lY2Vzc2FyeVxuICBlbHNlIGlmICh0cmFuc195IDw9IC1wYW5fcm9vbV95KSB7XG4gICAgdHJhbnNfeSA9IC1wYW5fcm9vbV95O1xuICB9XG5cbiAgLy8geCAtIHJ1bGVzXG4gIC8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xuICAvLyB6b29tIGluIHkgZGlyZWN0aW9uIG9ubHkgLSB0cmFuc2xhdGUgaW4geSBvbmx5XG4gIGlmIChkM19zY2FsZSA8IHBhcmFtcy52aXouem9vbV9zd2l0Y2gpIHtcbiAgICAvLyBubyB4IHRyYW5zbGF0ZSBvciB6b29tXG4gICAgdHJhbnNfeCA9IDA7XG4gICAgem9vbV94ID0gMTtcbiAgfVxuICAvLyB6b29tIGluIGJvdGggZGlyZWN0aW9uc1xuICAvLyBzY2FsZSBpcyBncmVhdGVyIHRoYW4gcGFyYW1zLnZpei56b29tX3N3aXRjaFxuICBlbHNlIHtcbiAgICAvLyBhdmFpbGFibGUgcGFubmluZyByb29tIGluIHRoZSB4IGRpcmVjdGlvblxuICAgIC8vIG11bHRpcGxlIGV4dHJhIHJvb20gKHpvb20gLSAxKSBieSB0aGUgd2lkdGhcbiAgICB2YXIgcGFuX3Jvb21feCA9IChkM19zY2FsZSAvIHBhcmFtcy52aXouem9vbV9zd2l0Y2ggLSAxKSAqIHBhcmFtcy52aXouY2x1c3QuZGltLndpZHRoO1xuXG4gICAgLy8gbm8gcGFubmluZyBpbiB0aGUgcG9zaXRpdmUgZGlyZWN0aW9uXG4gICAgaWYgKHRyYW5zX3ggPiAwKSB7XG4gICAgICAvLyByZXN0cmljdCB0cmFuc2Zvcm1hdGlvbiBwYXJhbWV0ZXJzXG4gICAgICAvLyBubyBwYW5uaW5nIGluIHRoZSB4IGRpcmVjdGlvblxuICAgICAgdHJhbnNfeCA9IDA7XG4gICAgICAvLyBzZXQgem9vbV94XG4gICAgICB6b29tX3ggPSBkM19zY2FsZSAvIHBhcmFtcy52aXouem9vbV9zd2l0Y2g7XG4gICAgfVxuICAgIC8vIHJlc3RyaWN0IHBhbm5pbmcgdG8gcGFuX3Jvb21feFxuICAgIGVsc2UgaWYgKHRyYW5zX3ggPD0gLXBhbl9yb29tX3gpIHtcbiAgICAgIC8vIHJlc3RyaWN0IHRyYW5zZm9ybWF0aW9uIHBhcmFtZXRlcnNcbiAgICAgIC8vIG5vIHBhbm5pbmcgaW4gdGhlIHggZGlyZWN0aW9uXG4gICAgICB0cmFuc194ID0gLXBhbl9yb29tX3g7XG4gICAgICAvLyBzZXQgem9vbV94XG4gICAgICB6b29tX3ggPSBkM19zY2FsZSAvIHBhcmFtcy52aXouem9vbV9zd2l0Y2g7XG4gICAgfVxuICAgIC8vIGFsbG93IHR3byBkaW1lbnNpb25hbCBwYW5uaW5nXG4gICAgZWxzZSB7XG4gICAgICAvLyByZXN0cmljdCB0cmFuc2Zvcm1hdGlvbiBwYXJhbWV0ZXJzXG4gICAgICAvLyBzZXQgem9vbV94XG4gICAgICB6b29tX3ggPSBkM19zY2FsZSAvIHBhcmFtcy52aXouem9vbV9zd2l0Y2g7XG4gICAgfVxuICB9XG5cbiAgLy8gYXBwbHkgdHJhbnNmb3JtYXRpb24gYW5kIHJlc2V0IHRyYW5zbGF0ZSB2ZWN0b3JcbiAgLy8gdGhlIHpvb20gdmVjdG9yICh6b29tLnNjYWxlKSBuZXZlciBnZXRzIHJlc2V0XG4gIC8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xuICAvLyB0cmFuc2xhdGUgY2x1c3RlcmdyYW1cbiAgLy8gdml6LmdldF9jbHVzdF9ncm91cCgpXG4gIGQzLnNlbGVjdChwYXJhbXMucm9vdCsnIC5jbHVzdF9ncm91cCcpXG4gICAgLmF0dHIoJ3RyYW5zZm9ybScsICd0cmFuc2xhdGUoJyArIFt0cmFuc194LCB0cmFuc195XSArICcpIHNjYWxlKCcgK1xuICAgIHpvb21feCArICcsJyArIHpvb21feSArICcpJyk7XG5cbiAgLy8gdHJhbnNmb3JtIHJvdyBsYWJlbHNcbiAgZDMuc2VsZWN0KHBhcmFtcy5yb290KycgLnJvd19sYWJlbF96b29tX2NvbnRhaW5lcicpXG4gICAgLmF0dHIoJ3RyYW5zZm9ybScsICd0cmFuc2xhdGUoJyArIFswLCB0cmFuc195XSArICcpIHNjYWxlKCcgKyB6b29tX3kgK1xuICAgICcpJyk7XG5cbiAgLy8gdHJhbnNmb3JtIHJvd196b29tX2NvbnRhaW5lclxuICAvLyB1c2UgdGhlIG9mZnNldCBzYXZlZCBpbiBwYXJhbXMsIG9ubHkgem9vbSBpbiB0aGUgeSBkaXJlY3Rpb25cbiAgZDMuc2VsZWN0KHBhcmFtcy5yb290KycgLnJvd196b29tX2NvbnRhaW5lcicpXG4gICAgLmF0dHIoJ3RyYW5zZm9ybScsICd0cmFuc2xhdGUoJyArIFswLCB0cmFuc195XSArICcpIHNjYWxlKCAxLCcgK1xuICAgIHpvb21feSArICcpJyk7XG5cbiAgLy8gdHJhbnNmb3JtIGNvbCBsYWJlbHNcbiAgLy8gbW92ZSBkb3duIGNvbCBsYWJlbHMgYXMgem9vbWluZyBvY2N1cnMsIHN1YnRyYWN0IHRyYW5zX3ggLSAyMCBhbG1vc3Qgd29ya3NcbiAgZDMuc2VsZWN0KHBhcmFtcy5yb290KycgLmNvbF96b29tX2NvbnRhaW5lcicpXG4gICAgLmF0dHIoJ3RyYW5zZm9ybScsICd0cmFuc2xhdGUoJyArIFt0cmFuc194LCAwXSArICcpIHNjYWxlKCcgKyB6b29tX3ggK1xuICAgICcpJyk7XG5cbiAgLy8gdHJhbnNmb3JtIGNvbF9jbGFzc1xuICBkMy5zZWxlY3QocGFyYW1zLnJvb3QrJyAuY29sX3Zpel96b29tX2NvbnRhaW5lcicpXG4gICAgLmF0dHIoJ3RyYW5zZm9ybScsICd0cmFuc2xhdGUoJyArIFt0cmFuc194LCAwXSArICcpIHNjYWxlKCcgKyB6b29tX3ggK1xuICAgICcsMSknKTtcblxuICAvLyByZXNldCB0cmFuc2xhdGUgdmVjdG9yIC0gYWRkIGJhY2sgbWFyZ2lucyB0byB0cmFuc194IGFuZCB0cmFuc195XG4gIHBhcmFtcy56b29tX2JlaGF2aW9yXG4gICAgLnRyYW5zbGF0ZShbdHJhbnNfeCArIHBhcmFtcy52aXouY2x1c3QubWFyZ2luLmxlZnQsIHRyYW5zX3kgKyBwYXJhbXMudml6LmNsdXN0Lm1hcmdpbi50b3BcbiAgICBdKTtcblxuICB2YXIgdHJhbnMgPSBmYWxzZTtcbiAgY29uc3RyYWluX2ZvbnRfc2l6ZShwYXJhbXMsIHRyYW5zKTtcblxuXG4gIC8vIHJlc2l6ZSBsYWJlbCBiYXJzIGlmIG5lY2Vzc2FyeVxuICAvLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cblxuICBpZiAodXRpbHMuaGFzKHBhcmFtcy5uZXR3b3JrX2RhdGEucm93X25vZGVzWzBdLCAndmFsdWUnKSkge1xuICAgIGQzLnNlbGVjdEFsbChwYXJhbXMucm9vdCsnIC5yb3dfYmFycycpXG4gICAgLmF0dHIoJ3dpZHRoJywgZnVuY3Rpb24oZCkge1xuICAgICAgdmFyIGluc3RfdmFsdWUgPSAwO1xuICAgICAgaW5zdF92YWx1ZSA9IHBhcmFtcy5sYWJlbHMuYmFyX3NjYWxlX3JvdyhNYXRoLmFicyhkLnZhbHVlKSkvem9vbV95O1xuICAgICAgcmV0dXJuIGluc3RfdmFsdWU7XG4gICAgfSlcbiAgICAuYXR0cigneCcsIGZ1bmN0aW9uKGQpIHtcbiAgICAgIHZhciBpbnN0X3ZhbHVlID0gMDtcbiAgICAgIGluc3RfdmFsdWUgPSAtcGFyYW1zLmxhYmVscy5iYXJfc2NhbGVfcm93KE1hdGguYWJzKGQudmFsdWUpKS96b29tX3k7XG4gICAgICByZXR1cm4gaW5zdF92YWx1ZTtcbiAgICB9KTtcbiAgfVxuXG4gIGlmICh1dGlscy5oYXMocGFyYW1zLm5ldHdvcmtfZGF0YS5jb2xfbm9kZXNbMF0sICd2YWx1ZScpKSB7XG4gICAgZDMuc2VsZWN0QWxsKHBhcmFtcy5yb290KycgLmNvbF9iYXJzJylcbiAgICAgIC5hdHRyKCd3aWR0aCcsIGZ1bmN0aW9uKGQpIHtcbiAgICAgICAgdmFyIGluc3RfdmFsdWUgPSAwO1xuICAgICAgICBpZiAoZC52YWx1ZSA+IDApe1xuICAgICAgICAgIGluc3RfdmFsdWUgPSBwYXJhbXMubGFiZWxzLmJhcl9zY2FsZV9jb2woZC52YWx1ZSkvem9vbV94O1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBpbnN0X3ZhbHVlO1xuICAgICAgfSk7XG4gICAgfVxufTtcblxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIHNyYy9hcHBseV90cmFuc2Zvcm1hdGlvbi5qc1xuICoqLyJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7Ozs7QUFGQTtBQUNBOztBQURBOzs7QUFjQTs7O0FBSEE7QUFPQTtBQURBO0FBQ0E7Ozs7QUFsQkE7O0FBMEJBO0FBQ0E7Ozs7QUFIQTs7O0FBVUE7QUFDQTs7QUFKQTs7O0FBU0E7O0FBSEE7OztBQUFBOzs7QUFXQTs7QUFIQTs7O0FBQUE7OztBQVdBO0FBWEE7QUFyQkE7QUFDQTs7Ozs7O0FBekJBO0FBQ0E7O0FBREE7QUFDQTs7O0FBREE7QUFDQTs7O0FBREE7QUFDQTs7QUFEQTtBQUNBOztBQURBO0FBQ0E7QUErRkE7QUFDQTtBQUNBOzs7O0FBbEdBO0FBd0dBO0FBRUE7QUFDQTtBQUNBO0FBSEE7QUFNQTtBQUNBO0FBQ0E7QUFIQTtBQVBBO0FBQ0E7QUFhQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBREE7QUFHQTtBQUxBO0FBRkE7QUFySEEiLCJzb3VyY2VSb290IjoiIn0=");

/***/ },
/* 12 */
/***/ function(module, exports, __webpack_require__) {

	eval("var utils = __webpack_require__(2);\nvar trim_text = __webpack_require__(13);\n\nmodule.exports = function (params, trans) {\n\n  var keep_width = {};\n  keep_width.row = params.bounding_width_max.row * params.labels.row_keep * params.zoom_behavior.scale();\n  keep_width.col = params.bounding_width_max.col * params.labels.col_keep * params.zoom_behavior.scale() / params.viz.zoom_switch;\n\n  if (keep_width.row > params.norm_label.width.row) {\n\n    params.viz.zoom_scale_font.row = params.norm_label.width.row / keep_width.row;\n    // params.viz.zoom_scale_font.row = params.norm_label.width.row / keep_width.row;\n\n    d3.selectAll(params.root + ' .row_label_text').each(function () {\n      if (trans) {\n\n        d3.select(this).select('text').style('font-size', params.labels.default_fs_row * params.viz.zoom_scale_font.row + 'px').attr('y', params.matrix.rect_height * 0.5 + params.labels.default_fs_row * 0.35 * params.viz.zoom_scale_font.row).style('opacity', 0.20).transition().duration(700).style('opacity', 1);\n      } else {\n\n        d3.select(this).select('text').style('font-size', params.labels.default_fs_row * params.viz.zoom_scale_font.row + 'px').attr('y', params.matrix.rect_height * 0.5 + params.labels.default_fs_row * 0.35 * params.viz.zoom_scale_font.row);\n      }\n    });\n  } else {\n\n    d3.selectAll(params.root + ' .row_label_text').each(function () {\n      if (trans) {\n\n        d3.select(this).select('text').style('font-size', params.labels.default_fs_row + 'px')\n        // do not scale by params.viz.zoom_scale_font.row, since this is 1\n        .attr('y', params.matrix.rect_height * 0.5 + params.labels.default_fs_row * 0.35);\n\n        d3.select(this).select('text').text(function (d) {\n          return utils.normal_name(d, params.labels.max_label_char);\n        }).style('opacity', 0.20).transition().duration(700).style('opacity', 1);\n      } else {\n\n        d3.select(this).select('text').style('font-size', params.labels.default_fs_row + 'px').text(function (d) {\n          return utils.normal_name(d, params.labels.max_label_char);\n        });\n      }\n    });\n  }\n\n  if (keep_width.col > params.norm_label.width.col) {\n\n    params.viz.zoom_scale_font.col = params.norm_label.width.col / keep_width.col;\n\n    d3.selectAll(params.root + ' .col_label_click').each(function () {\n      if (trans) {\n        d3.select(this).select('text').style('font-size', params.labels.default_fs_col * params.viz.zoom_scale_font.col + 'px').style('opacity', 0.20).transition().duration(700).style('opacity', 1);\n      } else {\n        d3.select(this).select('text').style('font-size', params.labels.default_fs_col * params.viz.zoom_scale_font.col + 'px');\n      }\n    });\n  } else {\n    d3.selectAll(params.root + ' .col_label_click').each(function () {\n      if (trans) {\n        d3.select(this).select('text').style('font-size', params.labels.default_fs_col + 'px');\n        d3.select(this).select('text').text(function (d) {\n          return utils.normal_name(d, params.labels.max_label_char);\n        }).style('opacity', 0.20).transition().duration(700).style('opacity', 1);\n      } else {\n        d3.select(this).select('text').style('font-size', params.labels.default_fs_col + 'px').text(function (d) {\n          return utils.normal_name(d, params.labels.max_label_char);\n        });\n      }\n    });\n  }\n\n  // constrain text after zooming\n  if (params.labels.row_keep < 1) {\n    d3.selectAll(params.root + ' .row_label_text').each(function () {\n      trim_text(params, this, 'row');\n    });\n  }\n  if (params.labels.col_keep < 1) {\n    d3.selectAll(params.root + ' .col_label_click').each(function () {\n      trim_text(params, this, 'col');\n    });\n  }\n\n  // // constrain column text highlight bars\n  // // change the size of the highlighting rects\n  // d3.selectAll(params.root+' .col_label_click')\n  //   .each(function(d) {\n  //     var bbox = d3.select(this)\n  //       .select('text')[0][0]\n  //       .getBBox();\n\n  //     d3.select(this)\n  //       .select('rect')\n  //       .attr('width', bbox.width * 1.1)\n  //       .attr('height', 0.67*params.matrix.rect_width);\n  //       // .style('fill', function(d){\n  //       //   var inst_color = 'white';\n  //       //   if (params.labels.show_categories){\n  //       //     inst_color = params.labels.class_colors.col[d.cl];\n  //       //   }\n  //       //   return inst_color\n  //       // })\n  //       // .style('opacity', 0.25);\n\n  //   });\n};undefined\n//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTIuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vc3JjL2NvbnN0cmFpbl9mb250X3NpemUuanM/ZjM0NSJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgdXRpbHMgPSByZXF1aXJlKCcuL3V0aWxzJyk7XG52YXIgdHJpbV90ZXh0ID0gcmVxdWlyZSgnLi90cmltX3RleHQnKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihwYXJhbXMsIHRyYW5zKSB7XG5cbiAgdmFyIGtlZXBfd2lkdGggPSB7fTtcbiAga2VlcF93aWR0aC5yb3cgPSBwYXJhbXMuYm91bmRpbmdfd2lkdGhfbWF4LnJvdyAqIHBhcmFtcy5sYWJlbHMucm93X2tlZXBcbiAgICAqIHBhcmFtcy56b29tX2JlaGF2aW9yLnNjYWxlKCk7XG4gIGtlZXBfd2lkdGguY29sID0gcGFyYW1zLmJvdW5kaW5nX3dpZHRoX21heC5jb2wgKiBwYXJhbXMubGFiZWxzLmNvbF9rZWVwXG4gICAgKiBwYXJhbXMuem9vbV9iZWhhdmlvci5zY2FsZSgpIC8gcGFyYW1zLnZpei56b29tX3N3aXRjaDtcblxuXG5cbiAgaWYgKGtlZXBfd2lkdGgucm93ID4gcGFyYW1zLm5vcm1fbGFiZWwud2lkdGgucm93KSB7XG5cbiAgICBwYXJhbXMudml6Lnpvb21fc2NhbGVfZm9udC5yb3cgPSBwYXJhbXMubm9ybV9sYWJlbC53aWR0aC5yb3cgLyBrZWVwX3dpZHRoLnJvdztcbiAgICAvLyBwYXJhbXMudml6Lnpvb21fc2NhbGVfZm9udC5yb3cgPSBwYXJhbXMubm9ybV9sYWJlbC53aWR0aC5yb3cgLyBrZWVwX3dpZHRoLnJvdztcblxuICAgIGQzLnNlbGVjdEFsbChwYXJhbXMucm9vdCsnIC5yb3dfbGFiZWxfdGV4dCcpLmVhY2goZnVuY3Rpb24oKSB7XG4gICAgICBpZiAodHJhbnMpe1xuXG4gICAgICAgIGQzLnNlbGVjdCh0aGlzKS5zZWxlY3QoJ3RleHQnKVxuICAgICAgICAgIC5zdHlsZSgnZm9udC1zaXplJywgcGFyYW1zLmxhYmVscy5kZWZhdWx0X2ZzX3JvdyAqIHBhcmFtcy52aXouem9vbV9zY2FsZV9mb250LnJvdyArICdweCcpXG4gICAgICAgICAgLmF0dHIoJ3knLCBwYXJhbXMubWF0cml4LnJlY3RfaGVpZ2h0ICogMC41ICsgcGFyYW1zLmxhYmVscy5kZWZhdWx0X2ZzX3JvdyowLjM1KnBhcmFtcy52aXouem9vbV9zY2FsZV9mb250LnJvdyApXG4gICAgICAgICAgLnN0eWxlKCdvcGFjaXR5JywwLjIwKS50cmFuc2l0aW9uKCkuZHVyYXRpb24oNzAwKVxuICAgICAgICAgIC5zdHlsZSgnb3BhY2l0eScsMSk7XG5cbiAgICAgIH0gZWxzZSB7XG5cbiAgICAgICAgZDMuc2VsZWN0KHRoaXMpLnNlbGVjdCgndGV4dCcpXG4gICAgICAgICAgLnN0eWxlKCdmb250LXNpemUnLCBwYXJhbXMubGFiZWxzLmRlZmF1bHRfZnNfcm93ICogcGFyYW1zLnZpei56b29tX3NjYWxlX2ZvbnQucm93ICsgJ3B4JylcbiAgICAgICAgICAuYXR0cigneScsIHBhcmFtcy5tYXRyaXgucmVjdF9oZWlnaHQgKiAwLjUgKyBwYXJhbXMubGFiZWxzLmRlZmF1bHRfZnNfcm93KjAuMzUqcGFyYW1zLnZpei56b29tX3NjYWxlX2ZvbnQucm93ICk7XG4gICAgICB9XG4gICAgfSk7XG4gIH0gZWxzZSB7XG5cbiAgICBkMy5zZWxlY3RBbGwocGFyYW1zLnJvb3QrJyAucm93X2xhYmVsX3RleHQnKS5lYWNoKGZ1bmN0aW9uKCkge1xuICAgICAgaWYgKHRyYW5zKXtcblxuICAgICAgICBkMy5zZWxlY3QodGhpcykuc2VsZWN0KCd0ZXh0JylcbiAgICAgICAgICAuc3R5bGUoJ2ZvbnQtc2l6ZScsIHBhcmFtcy5sYWJlbHMuZGVmYXVsdF9mc19yb3cgKyAncHgnKVxuICAgICAgICAgIC8vIGRvIG5vdCBzY2FsZSBieSBwYXJhbXMudml6Lnpvb21fc2NhbGVfZm9udC5yb3csIHNpbmNlIHRoaXMgaXMgMVxuICAgICAgICAgIC5hdHRyKCd5JywgcGFyYW1zLm1hdHJpeC5yZWN0X2hlaWdodCAqIDAuNSArIHBhcmFtcy5sYWJlbHMuZGVmYXVsdF9mc19yb3cqMC4zNSApO1xuXG4gICAgICAgIGQzLnNlbGVjdCh0aGlzKS5zZWxlY3QoJ3RleHQnKVxuICAgICAgICAgIC50ZXh0KGZ1bmN0aW9uKGQpeyByZXR1cm4gdXRpbHMubm9ybWFsX25hbWUoZCwgcGFyYW1zLmxhYmVscy5tYXhfbGFiZWxfY2hhcik7fSlcbiAgICAgICAgICAuc3R5bGUoJ29wYWNpdHknLDAuMjApLnRyYW5zaXRpb24oKS5kdXJhdGlvbig3MDApXG4gICAgICAgICAgLnN0eWxlKCdvcGFjaXR5JywxKTtcblxuICAgICAgfSBlbHNlIHtcblxuICAgICAgICBkMy5zZWxlY3QodGhpcykuc2VsZWN0KCd0ZXh0JylcbiAgICAgICAgICAuc3R5bGUoJ2ZvbnQtc2l6ZScsIHBhcmFtcy5sYWJlbHMuZGVmYXVsdF9mc19yb3cgKyAncHgnKVxuICAgICAgICAgIC50ZXh0KGZ1bmN0aW9uKGQpeyByZXR1cm4gdXRpbHMubm9ybWFsX25hbWUoZCwgcGFyYW1zLmxhYmVscy5tYXhfbGFiZWxfY2hhcik7fSk7XG5cbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuXG5cbiAgaWYgKGtlZXBfd2lkdGguY29sID4gcGFyYW1zLm5vcm1fbGFiZWwud2lkdGguY29sKSB7XG5cbiAgICBwYXJhbXMudml6Lnpvb21fc2NhbGVfZm9udC5jb2wgPSBwYXJhbXMubm9ybV9sYWJlbC53aWR0aC5jb2wgLyBrZWVwX3dpZHRoLmNvbDtcblxuICAgIGQzLnNlbGVjdEFsbChwYXJhbXMucm9vdCsnIC5jb2xfbGFiZWxfY2xpY2snKS5lYWNoKGZ1bmN0aW9uKCkge1xuICAgICAgaWYgKHRyYW5zKXtcbiAgICAgICAgZDMuc2VsZWN0KHRoaXMpLnNlbGVjdCgndGV4dCcpXG4gICAgICAgICAgLnN0eWxlKCdmb250LXNpemUnLCBwYXJhbXMubGFiZWxzLmRlZmF1bHRfZnNfY29sICpcbiAgICAgICAgICAgIHBhcmFtcy52aXouem9vbV9zY2FsZV9mb250LmNvbCArICdweCcpXG4gICAgICAgICAgLnN0eWxlKCdvcGFjaXR5JywwLjIwKS50cmFuc2l0aW9uKCkuZHVyYXRpb24oNzAwKVxuICAgICAgICAgIC5zdHlsZSgnb3BhY2l0eScsMSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBkMy5zZWxlY3QodGhpcykuc2VsZWN0KCd0ZXh0JylcbiAgICAgICAgICAuc3R5bGUoJ2ZvbnQtc2l6ZScsIHBhcmFtcy5sYWJlbHMuZGVmYXVsdF9mc19jb2wgKlxuICAgICAgICAgICAgcGFyYW1zLnZpei56b29tX3NjYWxlX2ZvbnQuY29sICsgJ3B4Jyk7XG4gICAgICB9XG4gICAgfSk7XG4gIH0gZWxzZSB7XG4gICAgZDMuc2VsZWN0QWxsKHBhcmFtcy5yb290KycgLmNvbF9sYWJlbF9jbGljaycpLmVhY2goZnVuY3Rpb24oKSB7XG4gICAgICBpZiAodHJhbnMpe1xuICAgICAgICBkMy5zZWxlY3QodGhpcykuc2VsZWN0KCd0ZXh0JylcbiAgICAgICAgICAuc3R5bGUoJ2ZvbnQtc2l6ZScsIHBhcmFtcy5sYWJlbHMuZGVmYXVsdF9mc19jb2wgKyAncHgnKTtcbiAgICAgICAgZDMuc2VsZWN0KHRoaXMpLnNlbGVjdCgndGV4dCcpXG4gICAgICAgICAgLnRleHQoZnVuY3Rpb24oZCl7IHJldHVybiB1dGlscy5ub3JtYWxfbmFtZShkLCBwYXJhbXMubGFiZWxzLm1heF9sYWJlbF9jaGFyKTt9KVxuICAgICAgICAgIC5zdHlsZSgnb3BhY2l0eScsMC4yMCkudHJhbnNpdGlvbigpLmR1cmF0aW9uKDcwMClcbiAgICAgICAgICAuc3R5bGUoJ29wYWNpdHknLDEpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgZDMuc2VsZWN0KHRoaXMpLnNlbGVjdCgndGV4dCcpXG4gICAgICAgICAgLnN0eWxlKCdmb250LXNpemUnLCBwYXJhbXMubGFiZWxzLmRlZmF1bHRfZnNfY29sICsgJ3B4JylcbiAgICAgICAgICAudGV4dChmdW5jdGlvbihkKXsgcmV0dXJuIHV0aWxzLm5vcm1hbF9uYW1lKGQsIHBhcmFtcy5sYWJlbHMubWF4X2xhYmVsX2NoYXIpO30pO1xuICAgICAgfVxuICAgIH0pO1xuICB9XG5cbiAgLy8gY29uc3RyYWluIHRleHQgYWZ0ZXIgem9vbWluZ1xuICBpZiAocGFyYW1zLmxhYmVscy5yb3dfa2VlcCA8IDEpe1xuICAgIGQzLnNlbGVjdEFsbChwYXJhbXMucm9vdCsnIC5yb3dfbGFiZWxfdGV4dCcgKS5lYWNoKGZ1bmN0aW9uKCkgeyB0cmltX3RleHQocGFyYW1zLCB0aGlzLCAncm93Jyk7IH0pO1xuICB9XG4gIGlmIChwYXJhbXMubGFiZWxzLmNvbF9rZWVwIDwgMSl7XG4gICAgZDMuc2VsZWN0QWxsKHBhcmFtcy5yb290KycgLmNvbF9sYWJlbF9jbGljaycpLmVhY2goZnVuY3Rpb24oKSB7IHRyaW1fdGV4dChwYXJhbXMsIHRoaXMsICdjb2wnKTsgfSk7XG4gIH1cblxuICAvLyAvLyBjb25zdHJhaW4gY29sdW1uIHRleHQgaGlnaGxpZ2h0IGJhcnNcbiAgLy8gLy8gY2hhbmdlIHRoZSBzaXplIG9mIHRoZSBoaWdobGlnaHRpbmcgcmVjdHNcbiAgLy8gZDMuc2VsZWN0QWxsKHBhcmFtcy5yb290KycgLmNvbF9sYWJlbF9jbGljaycpXG4gIC8vICAgLmVhY2goZnVuY3Rpb24oZCkge1xuICAvLyAgICAgdmFyIGJib3ggPSBkMy5zZWxlY3QodGhpcylcbiAgLy8gICAgICAgLnNlbGVjdCgndGV4dCcpWzBdWzBdXG4gIC8vICAgICAgIC5nZXRCQm94KCk7XG5cbiAgLy8gICAgIGQzLnNlbGVjdCh0aGlzKVxuICAvLyAgICAgICAuc2VsZWN0KCdyZWN0JylcbiAgLy8gICAgICAgLmF0dHIoJ3dpZHRoJywgYmJveC53aWR0aCAqIDEuMSlcbiAgLy8gICAgICAgLmF0dHIoJ2hlaWdodCcsIDAuNjcqcGFyYW1zLm1hdHJpeC5yZWN0X3dpZHRoKTtcbiAgLy8gICAgICAgLy8gLnN0eWxlKCdmaWxsJywgZnVuY3Rpb24oZCl7XG4gIC8vICAgICAgIC8vICAgdmFyIGluc3RfY29sb3IgPSAnd2hpdGUnO1xuICAvLyAgICAgICAvLyAgIGlmIChwYXJhbXMubGFiZWxzLnNob3dfY2F0ZWdvcmllcyl7XG4gIC8vICAgICAgIC8vICAgICBpbnN0X2NvbG9yID0gcGFyYW1zLmxhYmVscy5jbGFzc19jb2xvcnMuY29sW2QuY2xdO1xuICAvLyAgICAgICAvLyAgIH1cbiAgLy8gICAgICAgLy8gICByZXR1cm4gaW5zdF9jb2xvclxuICAvLyAgICAgICAvLyB9KVxuICAvLyAgICAgICAvLyAuc3R5bGUoJ29wYWNpdHknLCAwLjI1KTtcblxuICAvLyAgIH0pO1xuXG59O1xuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogc3JjL2NvbnN0cmFpbl9mb250X3NpemUuanNcbiAqKi8iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUlBO0FBQ0E7QUFDQTs7O0FBRkE7QUFNQTtBQUNBO0FBQ0E7QUFGQTtBQUNBO0FBU0E7QUFWQTtBQURBO0FBTEE7QUFDQTtBQXNCQTtBQUNBO0FBQ0E7QUFDQTs7QUFBQTtBQUNBO0FBSUE7QUFDQTtBQUFBO0FBUkE7QUFDQTtBQWFBO0FBRUE7QUFBQTtBQWhCQTtBQURBO0FBdkJBO0FBQ0E7QUE4Q0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFEQTtBQU9BO0FBUEE7QUFEQTtBQUpBO0FBa0JBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFBQTtBQUpBO0FBUUE7QUFFQTtBQUFBO0FBVkE7QUFEQTtBQWxCQTtBQUNBOztBQTFEQTtBQTZGQTtBQUFBO0FBQUE7QUFEQTtBQUdBO0FBQ0E7QUFBQTtBQUFBO0FBREE7QUFDQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFoR0FBQUFBOyIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ },
/* 13 */
/***/ function(module, exports) {

	eval("\nmodule.exports = function (params, inst_selection, inst_rc) {\n\n  var max_width, inst_zoom;\n\n  var safe_row_trim_text = 0.9;\n\n  if (inst_rc === 'row') {\n    max_width = params.norm_label.width.row * safe_row_trim_text;\n    inst_zoom = params.zoom_behavior.scale();\n  } else {\n    // the column label has extra length since its rotated\n    max_width = params.norm_label.width.col;\n    inst_zoom = params.zoom_behavior.scale() / params.viz.zoom_switch;\n  }\n\n  var tmp_width = d3.select(inst_selection).select('text').node().getBBox().width;\n  var inst_text = d3.select(inst_selection).select('text').text();\n  var actual_width = tmp_width * inst_zoom;\n\n  if (actual_width > max_width) {\n\n    var trim_fraction = max_width / actual_width;\n    var keep_num_char = Math.floor(inst_text.length * trim_fraction) - 3;\n    var trimmed_text = inst_text.substring(0, keep_num_char) + '..';\n    d3.select(inst_selection).select('text').text(trimmed_text);\n  }\n};//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vc3JjL3RyaW1fdGV4dC5qcz9mMmJlIl0sInNvdXJjZXNDb250ZW50IjpbIlxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihwYXJhbXMsIGluc3Rfc2VsZWN0aW9uLCBpbnN0X3JjKSB7XG5cbiAgdmFyIG1heF93aWR0aCxcbiAgICAgIGluc3Rfem9vbTtcblxuICB2YXIgc2FmZV9yb3dfdHJpbV90ZXh0ID0gMC45O1xuXG4gIGlmIChpbnN0X3JjID09PSAncm93Jyl7XG4gICAgbWF4X3dpZHRoID0gcGFyYW1zLm5vcm1fbGFiZWwud2lkdGgucm93ICogc2FmZV9yb3dfdHJpbV90ZXh0O1xuICAgIGluc3Rfem9vbSA9IHBhcmFtcy56b29tX2JlaGF2aW9yLnNjYWxlKCk7XG4gIH0gZWxzZSB7XG4gICAgLy8gdGhlIGNvbHVtbiBsYWJlbCBoYXMgZXh0cmEgbGVuZ3RoIHNpbmNlIGl0cyByb3RhdGVkXG4gICAgbWF4X3dpZHRoID0gcGFyYW1zLm5vcm1fbGFiZWwud2lkdGguY29sO1xuICAgIGluc3Rfem9vbSA9IHBhcmFtcy56b29tX2JlaGF2aW9yLnNjYWxlKCkvcGFyYW1zLnZpei56b29tX3N3aXRjaDtcbiAgfVxuXG4gIHZhciB0bXBfd2lkdGggPSBkMy5zZWxlY3QoaW5zdF9zZWxlY3Rpb24pLnNlbGVjdCgndGV4dCcpLm5vZGUoKS5nZXRCQm94KCkud2lkdGg7XG4gIHZhciBpbnN0X3RleHQgPSBkMy5zZWxlY3QoaW5zdF9zZWxlY3Rpb24pLnNlbGVjdCgndGV4dCcpLnRleHQoKTtcbiAgdmFyIGFjdHVhbF93aWR0aCA9IHRtcF93aWR0aCppbnN0X3pvb207XG5cbiAgaWYgKGFjdHVhbF93aWR0aD5tYXhfd2lkdGgpe1xuXG4gICAgdmFyIHRyaW1fZnJhY3Rpb24gPSBtYXhfd2lkdGgvYWN0dWFsX3dpZHRoO1xuICAgIHZhciBrZWVwX251bV9jaGFyID0gTWF0aC5mbG9vcihpbnN0X3RleHQubGVuZ3RoKnRyaW1fZnJhY3Rpb24pLTM7XG4gICAgdmFyIHRyaW1tZWRfdGV4dCA9IGluc3RfdGV4dC5zdWJzdHJpbmcoMCxrZWVwX251bV9jaGFyKSsnLi4nO1xuICAgIGQzLnNlbGVjdChpbnN0X3NlbGVjdGlvbikuc2VsZWN0KCd0ZXh0JylcbiAgICAgIC50ZXh0KHRyaW1tZWRfdGV4dCk7XG4gIH1cblxufTtcblxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIHNyYy90cmltX3RleHQuanNcbiAqKi8iXSwibWFwcGluZ3MiOiI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFGQTs7QUFLQTtBQUNBO0FBTkE7QUFDQTtBQVFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBTEE7QUFwQkEiLCJzb3VyY2VSb290IjoiIn0=");

/***/ },
/* 14 */
/***/ function(module, exports, __webpack_require__) {

	eval("var generate_matrix = __webpack_require__(15);\nvar make_rows = __webpack_require__(19);\nvar make_cols = __webpack_require__(24);\nvar generate_super_labels = __webpack_require__(27);\nvar run_spillover = __webpack_require__(28);\nvar search = __webpack_require__(29);\nvar two_translate_zoom = __webpack_require__(30);\nvar initialize_resizing = __webpack_require__(31);\nvar ini_doubleclick = __webpack_require__(34);\n\nvar build_col_dendro = __webpack_require__(35);\nvar build_row_dendro = __webpack_require__(38);\n\nmodule.exports = function (params) {\n  var svg_group = d3.select(params.viz.viz_wrapper).append('svg').attr('class', 'viz_svg').attr('width', params.viz.svg_dim.width).attr('height', params.viz.svg_dim.height);\n\n  svg_group.append('rect').attr('class', 'super_background').style('width', params.viz.svg_dim.width).style('height', params.viz.svg_dim.height).style('fill', 'white');\n\n  var matrix = generate_matrix(params, svg_group);\n\n  // var labels = generate_labels(params);\n\n  var delay_text = 0;\n  make_rows(params, delay_text);\n  var container_all_col = make_cols(params, delay_text);\n\n  if (params.viz.show_dendrogram) {\n\n    build_row_dendro(params, 'row_class_rect');\n\n    container_all_col.append('g').attr('class', 'col_viz_outer_container').attr('transform', function () {\n      var inst_offset = params.norm_label.width.col + 2;\n      return 'translate(0,' + inst_offset + ')';\n    }).append('g').attr('class', 'col_viz_zoom_container');\n\n    build_col_dendro(params, 'col_class_rect');\n  }\n\n  run_spillover(params, container_all_col);\n\n  if (params.labels.super_labels) {\n    generate_super_labels(params);\n  }\n\n  function border_colors() {\n    var inst_color = params.viz.super_border_color;\n    if (params.viz.expand) {\n      inst_color = 'white';\n    }\n    return inst_color;\n  }\n\n  // left border\n  d3.select(params.viz.viz_svg).append('rect').classed('left_border', true).classed('borders', true).attr('fill', border_colors).attr('width', params.viz.grey_border_width).attr('height', params.viz.svg_dim.height).attr('transform', 'translate(0,0)');\n\n  // right border\n  d3.select(params.viz.viz_svg).append('rect').classed('right_border', true).classed('borders', true).attr('fill', border_colors).attr('width', params.viz.grey_border_width).attr('height', params.viz.svg_dim.height).attr('transform', function () {\n    var inst_offset = params.viz.svg_dim.width - params.viz.grey_border_width;\n    return 'translate(' + inst_offset + ',0)';\n  });\n\n  // top border\n  d3.select(params.viz.viz_svg).append('rect').classed('top_border', true).classed('borders', true).attr('fill', border_colors).attr('width', params.viz.svg_dim.width).attr('height', params.viz.grey_border_width).attr('transform', function () {\n    var inst_offset = 0;\n    return 'translate(' + inst_offset + ',0)';\n  });\n\n  // bottom border\n  d3.select(params.viz.viz_svg).append('rect').classed('bottom_border', true).classed('borders', true).attr('fill', border_colors).attr('width', params.viz.svg_dim.width).attr('height', params.viz.grey_border_width).attr('transform', function () {\n    var inst_offset = params.viz.svg_dim.height - params.viz.grey_border_width;\n    return 'translate(0,' + inst_offset + ')';\n  });\n\n  initialize_resizing(params);\n\n  ini_doubleclick(params);\n\n  if (params.viz.do_zoom) {\n    svg_group.call(params.zoom_behavior);\n  }\n\n  d3.select(params.viz.viz_svg).on('dblclick.zoom', null);\n\n  var search_obj = search(params, params.network_data.row_nodes, 'name');\n\n  var opacity_slider = function (inst_slider) {\n\n    // var max_link = params.matrix.max_link;\n    var slider_scale = d3.scale.linear().domain([0, 1]).range([1, 0.1]);\n\n    var slider_factor = slider_scale(inst_slider);\n\n    if (params.matrix.opacity_function === 'linear') {\n      params.matrix.opacity_scale = d3.scale.linear().domain([0, slider_factor * Math.abs(params.matrix.max_link)]).clamp(true).range([0.0, 1.0]);\n    } else if (params.matrix.opacity_function === 'log') {\n      params.matrix.opacity_scale = d3.scale.log().domain([0.0001, slider_factor * Math.abs(params.matrix.max_link)]).clamp(true).range([0.0, 1.0]);\n    }\n\n    d3.selectAll(params.root + ' .tile').style('fill-opacity', function (d) {\n      return params.matrix.opacity_scale(Math.abs(d.value));\n    });\n  };\n\n  function reset_zoom(inst_scale) {\n    two_translate_zoom(params, 0, 0, inst_scale);\n  }\n\n  return {\n    get_clust_group: function () {\n      return matrix.get_clust_group();\n    },\n    get_matrix: function () {\n      return matrix.get_matrix();\n    },\n    get_nodes: function (type) {\n      return matrix.get_nodes(type);\n    },\n    find_entity: search_obj.find_entity,\n    get_entities: search_obj.get_entities,\n    opacity_slider: opacity_slider,\n    run_reset_visualization_size: __webpack_require__(33),\n    draw_gridlines: matrix.draw_gridlines,\n    reset_zoom: reset_zoom\n  };\n};//@ sourceMappingURL=data:application/json;base64,");

/***/ },
/* 15 */
/***/ function(module, exports, __webpack_require__) {

	eval("var utils = __webpack_require__(2);\nvar draw_gridlines = __webpack_require__(16);\nvar add_click_hlight = __webpack_require__(17);\nvar make_simple_rows = __webpack_require__(18);\n\nmodule.exports = function (params, svg_elem) {\n  var network_data = params.network_data;\n\n  var matrix = [],\n      row_nodes = network_data.row_nodes,\n      col_nodes = network_data.col_nodes,\n      clust_group;\n\n  var row_nodes_names = _.pluck(row_nodes, 'name');\n\n  // append a group that will hold clust_group and position it once\n  clust_group = svg_elem.append('g').attr('class', 'clust_container').attr('transform', 'translate(' + params.viz.clust.margin.left + ',' + params.viz.clust.margin.top + ')').append('g').attr('class', 'clust_group');\n\n  if (params.matrix.show_tile_tooltips) {\n    // d3-tooltip - for tiles\n    var tip = d3.tip().attr('class', 'd3-tip').direction('n').offset([0, 0]).html(params.matrix.make_tile_tooltip);\n    d3.select(params.root + ' .clust_group').call(tip);\n  }\n\n  // clustergram background rect\n  clust_group.append('rect').classed('background', true).classed('grey_background', true).style('fill', '#eee').attr('width', params.viz.clust.dim.width).attr('height', params.viz.clust.dim.height);\n\n  // make row matrix - add key names to rows in matrix\n  clust_group.selectAll('.row').data(params.matrix.matrix, function (d) {\n    return d.name;\n  }).enter().append('g').attr('class', 'row').attr('transform', function (d) {\n    var tmp_index = _.indexOf(row_nodes_names, d.name);\n    return 'translate(0,' + params.matrix.y_scale(tmp_index) + ')';\n  }).each(function (d) {\n    make_simple_rows(params, d, tip, this);\n  });\n\n  // add callback function to tile group - if one is supplied by the user\n  if (typeof params.click_tile === 'function') {\n    d3.selectAll(params.root + ' .tile').on('click', function (d) {\n\n      // export row/col name and value from tile\n      var tile_info = {};\n      tile_info.row = params.network_data.row_nodes[d.pos_y].name;\n      tile_info.col = params.network_data.col_nodes[d.pos_x].name;\n      tile_info.value = d.value;\n\n      if (utils.has(d, 'value_up')) {\n        tile_info.value_up = d.value_up;\n      }\n      if (utils.has(d, 'value_dn')) {\n        tile_info.value_dn = d.value_dn;\n      }\n      if (utils.has(d, 'info')) {\n        tile_info.info = d.info;\n      }\n      // run the user supplied callback function\n      params.click_tile(tile_info);\n      add_click_hlight(params, this);\n    });\n  } else {\n\n    // highlight clicked tile\n    if (params.tile_click_hlight) {\n      d3.selectAll(params.root + ' .tile').on('click', function () {\n        add_click_hlight(params, this);\n      });\n    }\n  }\n\n  // draw grid lines after drawing tiles\n  draw_gridlines(params, row_nodes, col_nodes);\n\n  // Matrix API\n  return {\n    get_clust_group: function () {\n      return clust_group;\n    },\n    get_matrix: function () {\n      return matrix;\n    },\n    get_nodes: function (type) {\n      if (type === 'row') {\n        return network_data.row_nodes;\n      }\n      return network_data.col_nodes;\n    }\n  };\n};//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTUuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vc3JjL21hdHJpeC9pbmRleC5qcz80ODZjIl0sInNvdXJjZXNDb250ZW50IjpbInZhciB1dGlscyA9IHJlcXVpcmUoJy4uL3V0aWxzJyk7XG52YXIgZHJhd19ncmlkbGluZXMgPSByZXF1aXJlKCcuLi9kcmF3X2dyaWRsaW5lcycpO1xudmFyIGFkZF9jbGlja19obGlnaHQgPSByZXF1aXJlKCcuL2FkZF9jbGlja19obGlnaHQnKTtcbnZhciBtYWtlX3NpbXBsZV9yb3dzID0gcmVxdWlyZSgnLi9tYWtlX3NpbXBsZV9yb3dzJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24ocGFyYW1zLCBzdmdfZWxlbSkge1xuICB2YXIgbmV0d29ya19kYXRhID0gcGFyYW1zLm5ldHdvcmtfZGF0YTtcblxuICB2YXIgbWF0cml4ID0gW10sXG4gIHJvd19ub2RlcyA9IG5ldHdvcmtfZGF0YS5yb3dfbm9kZXMsXG4gIGNvbF9ub2RlcyA9IG5ldHdvcmtfZGF0YS5jb2xfbm9kZXMsXG4gIGNsdXN0X2dyb3VwO1xuXG4gIHZhciByb3dfbm9kZXNfbmFtZXMgPSBfLnBsdWNrKHJvd19ub2RlcywgJ25hbWUnKTtcblxuICAvLyBhcHBlbmQgYSBncm91cCB0aGF0IHdpbGwgaG9sZCBjbHVzdF9ncm91cCBhbmQgcG9zaXRpb24gaXQgb25jZVxuICBjbHVzdF9ncm91cCA9IHN2Z19lbGVtXG4gICAgLmFwcGVuZCgnZycpXG4gICAgLmF0dHIoJ2NsYXNzJywnY2x1c3RfY29udGFpbmVyJylcbiAgICAuYXR0cigndHJhbnNmb3JtJywgJ3RyYW5zbGF0ZSgnICtcbiAgICAgIHBhcmFtcy52aXouY2x1c3QubWFyZ2luLmxlZnQgKyAnLCcgK1xuICAgICAgcGFyYW1zLnZpei5jbHVzdC5tYXJnaW4udG9wICsgJyknKVxuICAgIC5hcHBlbmQoJ2cnKVxuICAgIC5hdHRyKCdjbGFzcycsICdjbHVzdF9ncm91cCcpO1xuXG4gIGlmIChwYXJhbXMubWF0cml4LnNob3dfdGlsZV90b29sdGlwcyl7XG4gICAgLy8gZDMtdG9vbHRpcCAtIGZvciB0aWxlc1xuICAgIHZhciB0aXAgPSBkMy50aXAoKVxuICAgICAgLmF0dHIoJ2NsYXNzJywgJ2QzLXRpcCcpXG4gICAgICAuZGlyZWN0aW9uKCduJylcbiAgICAgIC5vZmZzZXQoWzAsIDBdKVxuICAgICAgLmh0bWwocGFyYW1zLm1hdHJpeC5tYWtlX3RpbGVfdG9vbHRpcCk7XG4gICAgZDMuc2VsZWN0KHBhcmFtcy5yb290KycgLmNsdXN0X2dyb3VwJylcbiAgICAgIC5jYWxsKHRpcCk7XG4gIH1cblxuICAvLyBjbHVzdGVyZ3JhbSBiYWNrZ3JvdW5kIHJlY3RcbiAgY2x1c3RfZ3JvdXBcbiAgICAuYXBwZW5kKCdyZWN0JylcbiAgICAuY2xhc3NlZCgnYmFja2dyb3VuZCcsdHJ1ZSlcbiAgICAuY2xhc3NlZCgnZ3JleV9iYWNrZ3JvdW5kJyx0cnVlKVxuICAgIC5zdHlsZSgnZmlsbCcsICcjZWVlJylcbiAgICAuYXR0cignd2lkdGgnLCBwYXJhbXMudml6LmNsdXN0LmRpbS53aWR0aClcbiAgICAuYXR0cignaGVpZ2h0JywgcGFyYW1zLnZpei5jbHVzdC5kaW0uaGVpZ2h0KTtcblxuICAvLyBtYWtlIHJvdyBtYXRyaXggLSBhZGQga2V5IG5hbWVzIHRvIHJvd3MgaW4gbWF0cml4XG4gIGNsdXN0X2dyb3VwLnNlbGVjdEFsbCgnLnJvdycpXG4gICAgLmRhdGEocGFyYW1zLm1hdHJpeC5tYXRyaXgsIGZ1bmN0aW9uKGQpe3JldHVybiBkLm5hbWU7fSlcbiAgICAuZW50ZXIoKVxuICAgIC5hcHBlbmQoJ2cnKVxuICAgIC5hdHRyKCdjbGFzcycsICdyb3cnKVxuICAgIC5hdHRyKCd0cmFuc2Zvcm0nLCBmdW5jdGlvbihkKSB7XG4gICAgICB2YXIgdG1wX2luZGV4ID0gXy5pbmRleE9mKHJvd19ub2Rlc19uYW1lcywgZC5uYW1lKTtcbiAgICAgIHJldHVybiAndHJhbnNsYXRlKDAsJyArIHBhcmFtcy5tYXRyaXgueV9zY2FsZSh0bXBfaW5kZXgpICsgJyknO1xuICAgIH0pXG4gICAgLmVhY2goZnVuY3Rpb24oZCl7XG4gICAgICBtYWtlX3NpbXBsZV9yb3dzKHBhcmFtcywgZCwgdGlwLCB0aGlzKTtcbiAgICB9KTtcblxuICAvLyBhZGQgY2FsbGJhY2sgZnVuY3Rpb24gdG8gdGlsZSBncm91cCAtIGlmIG9uZSBpcyBzdXBwbGllZCBieSB0aGUgdXNlclxuICBpZiAodHlwZW9mIHBhcmFtcy5jbGlja190aWxlID09PSAnZnVuY3Rpb24nKSB7XG4gICAgZDMuc2VsZWN0QWxsKHBhcmFtcy5yb290KycgLnRpbGUnKVxuICAgIC5vbignY2xpY2snLCBmdW5jdGlvbihkKSB7XG5cbiAgICAgIC8vIGV4cG9ydCByb3cvY29sIG5hbWUgYW5kIHZhbHVlIGZyb20gdGlsZVxuICAgICAgdmFyIHRpbGVfaW5mbyA9IHt9O1xuICAgICAgdGlsZV9pbmZvLnJvdyA9IHBhcmFtcy5uZXR3b3JrX2RhdGEucm93X25vZGVzW2QucG9zX3ldLm5hbWU7XG4gICAgICB0aWxlX2luZm8uY29sID0gcGFyYW1zLm5ldHdvcmtfZGF0YS5jb2xfbm9kZXNbZC5wb3NfeF0ubmFtZTtcbiAgICAgIHRpbGVfaW5mby52YWx1ZSA9IGQudmFsdWU7XG5cbiAgICAgIGlmICh1dGlscy5oYXMoZCwgJ3ZhbHVlX3VwJykpIHtcbiAgICAgICAgdGlsZV9pbmZvLnZhbHVlX3VwID0gZC52YWx1ZV91cDtcbiAgICAgIH1cbiAgICAgIGlmICh1dGlscy5oYXMoZCwgJ3ZhbHVlX2RuJykpIHtcbiAgICAgICAgdGlsZV9pbmZvLnZhbHVlX2RuID0gZC52YWx1ZV9kbjtcbiAgICAgIH1cbiAgICAgIGlmICh1dGlscy5oYXMoZCwgJ2luZm8nKSkge1xuICAgICAgICB0aWxlX2luZm8uaW5mbyA9IGQuaW5mbztcbiAgICAgIH1cbiAgICAgIC8vIHJ1biB0aGUgdXNlciBzdXBwbGllZCBjYWxsYmFjayBmdW5jdGlvblxuICAgICAgcGFyYW1zLmNsaWNrX3RpbGUodGlsZV9pbmZvKTtcbiAgICAgIGFkZF9jbGlja19obGlnaHQocGFyYW1zLCB0aGlzKTtcblxuICAgIH0pO1xuXG4gIH0gZWxzZSB7XG5cbiAgICAvLyBoaWdobGlnaHQgY2xpY2tlZCB0aWxlXG4gICAgaWYgKHBhcmFtcy50aWxlX2NsaWNrX2hsaWdodCl7XG4gICAgICBkMy5zZWxlY3RBbGwocGFyYW1zLnJvb3QrJyAudGlsZScpXG4gICAgICAgIC5vbignY2xpY2snLGZ1bmN0aW9uKCkge1xuICAgICAgICAgIGFkZF9jbGlja19obGlnaHQocGFyYW1zLCB0aGlzKTtcbiAgICAgICAgfSk7XG4gICAgfVxuICB9XG5cbiAgLy8gZHJhdyBncmlkIGxpbmVzIGFmdGVyIGRyYXdpbmcgdGlsZXNcbiAgZHJhd19ncmlkbGluZXMocGFyYW1zLCByb3dfbm9kZXMsIGNvbF9ub2Rlcyk7XG5cbiAgLy8gTWF0cml4IEFQSVxuICByZXR1cm4ge1xuICAgIGdldF9jbHVzdF9ncm91cDogZnVuY3Rpb24oKSB7XG4gICAgICByZXR1cm4gY2x1c3RfZ3JvdXA7XG4gICAgfSxcbiAgICBnZXRfbWF0cml4OiBmdW5jdGlvbigpe1xuICAgICAgcmV0dXJuIG1hdHJpeDtcbiAgICB9LFxuICAgIGdldF9ub2RlczogZnVuY3Rpb24odHlwZSl7XG4gICAgICBpZiAodHlwZSA9PT0gJ3JvdycpIHtcbiAgICAgICAgcmV0dXJuIG5ldHdvcmtfZGF0YS5yb3dfbm9kZXM7XG4gICAgICB9XG4gICAgICByZXR1cm4gbmV0d29ya19kYXRhLmNvbF9ub2RlcztcbiAgICB9XG4gIH07XG5cbn07XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiBzcmMvbWF0cml4L2luZGV4LmpzXG4gKiovIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBVEE7QUFDQTtBQW1CQTs7QUFFQTtBQUtBO0FBUEE7QUFDQTs7QUFyQkE7QUFDQTs7QUFEQTtBQTBDQTtBQUFBO0FBS0E7QUFDQTtBQUZBO0FBS0E7QUFEQTtBQUNBOztBQW5EQTtBQXdEQTtBQUNBOztBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBREE7QUFHQTtBQUNBO0FBREE7QUFHQTtBQUNBO0FBREE7O0FBZEE7QUFtQkE7QUFuQkE7QUFGQTtBQUNBOztBQTJCQTtBQUNBO0FBRUE7QUFEQTtBQUZBO0FBNUJBO0FBQ0E7O0FBeERBO0FBQ0E7O0FBREE7QUFnR0E7QUFDQTtBQURBO0FBR0E7QUFDQTtBQURBO0FBR0E7QUFDQTtBQUNBO0FBREE7QUFHQTtBQUpBO0FBUEE7QUEvRkEiLCJzb3VyY2VSb290IjoiIn0=");

/***/ },
/* 16 */
/***/ function(module, exports) {

	eval("\nmodule.exports = function (params, row_nodes, col_nodes) {\n  var row_nodes_names = params.network_data.row_nodes_names;\n  var col_nodes_names = params.network_data.col_nodes_names;\n\n  d3.selectAll(params.root + ' .horz_lines').remove();\n\n  d3.selectAll(params.root + ' .vert_lines').remove();\n\n  // append horizontal lines\n  d3.select(params.root + ' .clust_group').selectAll('.horz_lines').data(row_nodes, function (d) {\n    return d.name;\n  }).enter().append('g').attr('class', 'horz_lines').attr('transform', function (d) {\n    var inst_index = _.indexOf(row_nodes_names, d.name);\n    return 'translate(0,' + params.matrix.y_scale(inst_index) + ') rotate(0)';\n  }).append('line').attr('x1', 0).attr('x2', params.viz.clust.dim.width).style('stroke-width', params.viz.border_width / params.viz.zoom_switch + 'px').style('stroke', 'white');\n\n  // append vertical line groups\n  d3.select(params.root + ' .clust_group').selectAll('.vert_lines').data(col_nodes).enter().append('g').attr('class', 'vert_lines').attr('transform', function (d) {\n    var inst_index = _.indexOf(col_nodes_names, d.name);\n    return 'translate(' + params.matrix.x_scale(inst_index) + ') rotate(-90)';\n  }).append('line').attr('x1', 0).attr('x2', -params.viz.clust.dim.height).style('stroke-width', params.viz.border_width + 'px').style('stroke', 'white');\n};//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTYuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vc3JjL2RyYXdfZ3JpZGxpbmVzLmpzPzYzMTYiXSwic291cmNlc0NvbnRlbnQiOlsiXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKHBhcmFtcywgcm93X25vZGVzLCBjb2xfbm9kZXMpIHtcbiAgdmFyIHJvd19ub2Rlc19uYW1lcyA9IHBhcmFtcy5uZXR3b3JrX2RhdGEucm93X25vZGVzX25hbWVzO1xuICB2YXIgY29sX25vZGVzX25hbWVzID0gcGFyYW1zLm5ldHdvcmtfZGF0YS5jb2xfbm9kZXNfbmFtZXM7XG5cbiAgZDMuc2VsZWN0QWxsKHBhcmFtcy5yb290KycgLmhvcnpfbGluZXMnKVxuICAgIC5yZW1vdmUoKTtcblxuICBkMy5zZWxlY3RBbGwocGFyYW1zLnJvb3QrJyAudmVydF9saW5lcycpXG4gICAgLnJlbW92ZSgpO1xuXG4gIC8vIGFwcGVuZCBob3Jpem9udGFsIGxpbmVzXG4gIGQzLnNlbGVjdChwYXJhbXMucm9vdCsnIC5jbHVzdF9ncm91cCcpXG4gICAgLnNlbGVjdEFsbCgnLmhvcnpfbGluZXMnKVxuICAgIC5kYXRhKHJvd19ub2RlcywgZnVuY3Rpb24oZCl7cmV0dXJuIGQubmFtZTt9KVxuICAgIC5lbnRlcigpXG4gICAgLmFwcGVuZCgnZycpXG4gICAgLmF0dHIoJ2NsYXNzJywnaG9yel9saW5lcycpXG4gICAgLmF0dHIoJ3RyYW5zZm9ybScsIGZ1bmN0aW9uKGQpIHtcbiAgICAgIHZhciBpbnN0X2luZGV4ID0gXy5pbmRleE9mKHJvd19ub2Rlc19uYW1lcywgZC5uYW1lKTtcbiAgICAgIHJldHVybiAndHJhbnNsYXRlKDAsJyArIHBhcmFtcy5tYXRyaXgueV9zY2FsZShpbnN0X2luZGV4KSArICcpIHJvdGF0ZSgwKSc7XG4gICAgfSlcbiAgICAuYXBwZW5kKCdsaW5lJylcbiAgICAuYXR0cigneDEnLDApXG4gICAgLmF0dHIoJ3gyJyxwYXJhbXMudml6LmNsdXN0LmRpbS53aWR0aClcbiAgICAuc3R5bGUoJ3N0cm9rZS13aWR0aCcsIHBhcmFtcy52aXouYm9yZGVyX3dpZHRoL3BhcmFtcy52aXouem9vbV9zd2l0Y2grJ3B4JylcbiAgICAuc3R5bGUoJ3N0cm9rZScsJ3doaXRlJyk7XG5cbiAgLy8gYXBwZW5kIHZlcnRpY2FsIGxpbmUgZ3JvdXBzXG4gIGQzLnNlbGVjdChwYXJhbXMucm9vdCsnIC5jbHVzdF9ncm91cCcpXG4gICAgLnNlbGVjdEFsbCgnLnZlcnRfbGluZXMnKVxuICAgIC5kYXRhKGNvbF9ub2RlcylcbiAgICAuZW50ZXIoKVxuICAgIC5hcHBlbmQoJ2cnKVxuICAgIC5hdHRyKCdjbGFzcycsICd2ZXJ0X2xpbmVzJylcbiAgICAuYXR0cigndHJhbnNmb3JtJywgZnVuY3Rpb24oZCkge1xuICAgICAgdmFyIGluc3RfaW5kZXggPSBfLmluZGV4T2YoY29sX25vZGVzX25hbWVzLCBkLm5hbWUpO1xuICAgICAgcmV0dXJuICd0cmFuc2xhdGUoJyArIHBhcmFtcy5tYXRyaXgueF9zY2FsZShpbnN0X2luZGV4KSArICcpIHJvdGF0ZSgtOTApJztcbiAgICB9KVxuICAgIC5hcHBlbmQoJ2xpbmUnKVxuICAgIC5hdHRyKCd4MScsIDApXG4gICAgLmF0dHIoJ3gyJywgLXBhcmFtcy52aXouY2x1c3QuZGltLmhlaWdodClcbiAgICAuc3R5bGUoJ3N0cm9rZS13aWR0aCcsIHBhcmFtcy52aXouYm9yZGVyX3dpZHRoICsgJ3B4JylcbiAgICAuc3R5bGUoJ3N0cm9rZScsICd3aGl0ZScpO1xufTtcblxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIHNyYy9kcmF3X2dyaWRsaW5lcy5qc1xuICoqLyJdLCJtYXBwaW5ncyI6IjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7O0FBUkE7QUFhQTtBQUFBO0FBS0E7QUFDQTtBQUZBO0FBQ0E7O0FBbEJBO0FBbUNBO0FBQ0E7QUFGQTtBQWxDQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ },
/* 17 */
/***/ function(module, exports) {

	eval("module.exports = function (params, clicked_rect) {\n\n  // get x position of rectangle\n  d3.select(clicked_rect).each(function (d) {\n    var pos_x = d.pos_x;\n    var pos_y = d.pos_y;\n\n    d3.selectAll(params.root + ' .click_hlight').remove();\n\n    if (pos_x != params.matrix.click_hlight_x || pos_y != params.matrix.click_hlight_y) {\n\n      // save pos_x to params.viz.click_hlight_x\n      params.matrix.click_hlight_x = pos_x;\n      params.matrix.click_hlight_y = pos_y;\n\n      // draw the highlighting rectangle as four rectangles\n      // so that the width and height can be controlled\n      // separately\n\n      var rel_width_hlight = 6;\n      var opacity_hlight = 0.85;\n\n      var hlight_width = rel_width_hlight * params.viz.border_width;\n      var hlight_height = rel_width_hlight * params.viz.border_width / params.viz.zoom_switch;\n\n      // top highlight\n      d3.select(clicked_rect.parentNode).append('rect').classed('click_hlight', true).classed('top_hlight', true).attr('width', params.matrix.x_scale.rangeBand()).attr('height', hlight_height).attr('fill', params.matrix.hlight_color).attr('transform', function () {\n        return 'translate(' + params.matrix.x_scale(pos_x) + ',0)';\n      }).attr('opacity', opacity_hlight);\n\n      // left highlight\n      d3.select(clicked_rect.parentNode).append('rect').classed('click_hlight', true).classed('left_hlight', true).attr('width', hlight_width).attr('height', params.matrix.y_scale.rangeBand() - hlight_height * 0.99).attr('fill', params.matrix.hlight_color).attr('transform', function () {\n        return 'translate(' + params.matrix.x_scale(pos_x) + ',' + hlight_height * 0.99 + ')';\n      }).attr('opacity', opacity_hlight);\n\n      // right highlight\n      d3.select(clicked_rect.parentNode).append('rect').classed('click_hlight', true).classed('right_hlight', true).attr('width', hlight_width).attr('height', params.matrix.y_scale.rangeBand() - hlight_height * 0.99).attr('fill', params.matrix.hlight_color).attr('transform', function () {\n        var tmp_translate = params.matrix.x_scale(pos_x) + params.matrix.x_scale.rangeBand() - hlight_width;\n        return 'translate(' + tmp_translate + ',' + hlight_height * 0.99 + ')';\n      }).attr('opacity', opacity_hlight);\n\n      // bottom highlight\n      d3.select(clicked_rect.parentNode).append('rect').classed('click_hlight', true).classed('bottom_hlight', true).attr('width', function () {\n        return params.matrix.x_scale.rangeBand() - 1.98 * hlight_width;\n      }).attr('height', hlight_height).attr('fill', params.matrix.hlight_color).attr('transform', function () {\n        var tmp_translate_x = params.matrix.x_scale(pos_x) + hlight_width * 0.99;\n        var tmp_translate_y = params.matrix.y_scale.rangeBand() - hlight_height;\n        return 'translate(' + tmp_translate_x + ',' + tmp_translate_y + ')';\n      }).attr('opacity', opacity_hlight);\n    } else {\n      params.matrix.click_hlight_x = -666;\n      params.matrix.click_hlight_y = -666;\n    }\n  });\n};//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTcuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vc3JjL21hdHJpeC9hZGRfY2xpY2tfaGxpZ2h0LmpzP2NiY2QiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihwYXJhbXMsIGNsaWNrZWRfcmVjdCl7XG5cbiAgLy8gZ2V0IHggcG9zaXRpb24gb2YgcmVjdGFuZ2xlXG4gIGQzLnNlbGVjdChjbGlja2VkX3JlY3QpLmVhY2goZnVuY3Rpb24oZCl7XG4gICAgdmFyIHBvc194ID0gZC5wb3NfeDtcbiAgICB2YXIgcG9zX3kgPSBkLnBvc195O1xuXG4gICAgZDMuc2VsZWN0QWxsKHBhcmFtcy5yb290KycgLmNsaWNrX2hsaWdodCcpXG4gICAgICAucmVtb3ZlKCk7XG5cbiAgICBpZiAocG9zX3ghPXBhcmFtcy5tYXRyaXguY2xpY2tfaGxpZ2h0X3ggfHwgcG9zX3khPXBhcmFtcy5tYXRyaXguY2xpY2tfaGxpZ2h0X3kpe1xuXG4gICAgICAvLyBzYXZlIHBvc194IHRvIHBhcmFtcy52aXouY2xpY2tfaGxpZ2h0X3hcbiAgICAgIHBhcmFtcy5tYXRyaXguY2xpY2tfaGxpZ2h0X3ggPSBwb3NfeDtcbiAgICAgIHBhcmFtcy5tYXRyaXguY2xpY2tfaGxpZ2h0X3kgPSBwb3NfeTtcblxuICAgICAgLy8gZHJhdyB0aGUgaGlnaGxpZ2h0aW5nIHJlY3RhbmdsZSBhcyBmb3VyIHJlY3RhbmdsZXNcbiAgICAgIC8vIHNvIHRoYXQgdGhlIHdpZHRoIGFuZCBoZWlnaHQgY2FuIGJlIGNvbnRyb2xsZWRcbiAgICAgIC8vIHNlcGFyYXRlbHlcblxuICAgICAgdmFyIHJlbF93aWR0aF9obGlnaHQgPSA2O1xuICAgICAgdmFyIG9wYWNpdHlfaGxpZ2h0ID0gMC44NTtcblxuICAgICAgdmFyIGhsaWdodF93aWR0aCAgPSByZWxfd2lkdGhfaGxpZ2h0KnBhcmFtcy52aXouYm9yZGVyX3dpZHRoO1xuICAgICAgdmFyIGhsaWdodF9oZWlnaHQgPSByZWxfd2lkdGhfaGxpZ2h0KnBhcmFtcy52aXouYm9yZGVyX3dpZHRoL3BhcmFtcy52aXouem9vbV9zd2l0Y2g7XG5cbiAgICAgIC8vIHRvcCBoaWdobGlnaHRcbiAgICAgIGQzLnNlbGVjdChjbGlja2VkX3JlY3QucGFyZW50Tm9kZSlcbiAgICAgICAgLmFwcGVuZCgncmVjdCcpXG4gICAgICAgIC5jbGFzc2VkKCdjbGlja19obGlnaHQnLHRydWUpXG4gICAgICAgIC5jbGFzc2VkKCd0b3BfaGxpZ2h0Jyx0cnVlKVxuICAgICAgICAuYXR0cignd2lkdGgnLCBwYXJhbXMubWF0cml4Lnhfc2NhbGUucmFuZ2VCYW5kKCkpXG4gICAgICAgIC5hdHRyKCdoZWlnaHQnLCBobGlnaHRfaGVpZ2h0KVxuICAgICAgICAuYXR0cignZmlsbCcscGFyYW1zLm1hdHJpeC5obGlnaHRfY29sb3IpXG4gICAgICAgIC5hdHRyKCd0cmFuc2Zvcm0nLCBmdW5jdGlvbigpIHtcbiAgICAgICAgICByZXR1cm4gJ3RyYW5zbGF0ZSgnICsgcGFyYW1zLm1hdHJpeC54X3NjYWxlKHBvc194KSArICcsMCknO1xuICAgICAgICB9KVxuICAgICAgICAuYXR0cignb3BhY2l0eScsb3BhY2l0eV9obGlnaHQpO1xuXG4gICAgICAvLyBsZWZ0IGhpZ2hsaWdodFxuICAgICAgZDMuc2VsZWN0KGNsaWNrZWRfcmVjdC5wYXJlbnROb2RlKVxuICAgICAgICAuYXBwZW5kKCdyZWN0JylcbiAgICAgICAgLmNsYXNzZWQoJ2NsaWNrX2hsaWdodCcsdHJ1ZSlcbiAgICAgICAgLmNsYXNzZWQoJ2xlZnRfaGxpZ2h0Jyx0cnVlKVxuICAgICAgICAuYXR0cignd2lkdGgnLCBobGlnaHRfd2lkdGgpXG4gICAgICAgIC5hdHRyKCdoZWlnaHQnLCBwYXJhbXMubWF0cml4Lnlfc2NhbGUucmFuZ2VCYW5kKCkgLSBobGlnaHRfaGVpZ2h0KjAuOTkgKVxuICAgICAgICAuYXR0cignZmlsbCcscGFyYW1zLm1hdHJpeC5obGlnaHRfY29sb3IpXG4gICAgICAgIC5hdHRyKCd0cmFuc2Zvcm0nLCBmdW5jdGlvbigpIHtcbiAgICAgICAgICByZXR1cm4gJ3RyYW5zbGF0ZSgnICsgcGFyYW1zLm1hdHJpeC54X3NjYWxlKHBvc194KSArICcsJytcbiAgICAgICAgICAgIGhsaWdodF9oZWlnaHQqMC45OSsnKSc7XG4gICAgICAgIH0pXG4gICAgICAgIC5hdHRyKCdvcGFjaXR5JyxvcGFjaXR5X2hsaWdodCk7XG5cbiAgICAgIC8vIHJpZ2h0IGhpZ2hsaWdodFxuICAgICAgZDMuc2VsZWN0KGNsaWNrZWRfcmVjdC5wYXJlbnROb2RlKVxuICAgICAgICAuYXBwZW5kKCdyZWN0JylcbiAgICAgICAgLmNsYXNzZWQoJ2NsaWNrX2hsaWdodCcsdHJ1ZSlcbiAgICAgICAgLmNsYXNzZWQoJ3JpZ2h0X2hsaWdodCcsdHJ1ZSlcbiAgICAgICAgLmF0dHIoJ3dpZHRoJywgaGxpZ2h0X3dpZHRoKVxuICAgICAgICAuYXR0cignaGVpZ2h0JywgcGFyYW1zLm1hdHJpeC55X3NjYWxlLnJhbmdlQmFuZCgpIC0gaGxpZ2h0X2hlaWdodCowLjk5IClcbiAgICAgICAgLmF0dHIoJ2ZpbGwnLHBhcmFtcy5tYXRyaXguaGxpZ2h0X2NvbG9yKVxuICAgICAgICAuYXR0cigndHJhbnNmb3JtJywgZnVuY3Rpb24oKSB7XG4gICAgICAgICAgdmFyIHRtcF90cmFuc2xhdGUgPSBwYXJhbXMubWF0cml4Lnhfc2NhbGUocG9zX3gpICsgcGFyYW1zLm1hdHJpeC54X3NjYWxlLnJhbmdlQmFuZCgpIC0gaGxpZ2h0X3dpZHRoO1xuICAgICAgICAgIHJldHVybiAndHJhbnNsYXRlKCcgKyB0bXBfdHJhbnNsYXRlICsgJywnK1xuICAgICAgICAgICAgaGxpZ2h0X2hlaWdodCowLjk5KycpJztcbiAgICAgICAgfSlcbiAgICAgICAgLmF0dHIoJ29wYWNpdHknLG9wYWNpdHlfaGxpZ2h0KTtcblxuICAgICAgLy8gYm90dG9tIGhpZ2hsaWdodFxuICAgICAgZDMuc2VsZWN0KGNsaWNrZWRfcmVjdC5wYXJlbnROb2RlKVxuICAgICAgICAuYXBwZW5kKCdyZWN0JylcbiAgICAgICAgLmNsYXNzZWQoJ2NsaWNrX2hsaWdodCcsdHJ1ZSlcbiAgICAgICAgLmNsYXNzZWQoJ2JvdHRvbV9obGlnaHQnLHRydWUpXG4gICAgICAgIC5hdHRyKCd3aWR0aCcsIGZ1bmN0aW9uKCl7XG4gICAgICAgICAgcmV0dXJuIHBhcmFtcy5tYXRyaXgueF9zY2FsZS5yYW5nZUJhbmQoKSAtIDEuOTgqaGxpZ2h0X3dpZHRoO30pXG4gICAgICAgIC5hdHRyKCdoZWlnaHQnLCBobGlnaHRfaGVpZ2h0KVxuICAgICAgICAuYXR0cignZmlsbCcscGFyYW1zLm1hdHJpeC5obGlnaHRfY29sb3IpXG4gICAgICAgIC5hdHRyKCd0cmFuc2Zvcm0nLCBmdW5jdGlvbigpIHtcbiAgICAgICAgICB2YXIgdG1wX3RyYW5zbGF0ZV94ID0gcGFyYW1zLm1hdHJpeC54X3NjYWxlKHBvc194KSArIGhsaWdodF93aWR0aCowLjk5O1xuICAgICAgICAgIHZhciB0bXBfdHJhbnNsYXRlX3kgPSBwYXJhbXMubWF0cml4Lnlfc2NhbGUucmFuZ2VCYW5kKCkgLSBobGlnaHRfaGVpZ2h0O1xuICAgICAgICAgIHJldHVybiAndHJhbnNsYXRlKCcgKyB0bXBfdHJhbnNsYXRlX3ggKyAnLCcrXG4gICAgICAgICAgICB0bXBfdHJhbnNsYXRlX3krJyknO1xuICAgICAgICB9KVxuICAgICAgICAuYXR0cignb3BhY2l0eScsb3BhY2l0eV9obGlnaHQpO1xuXG4gICAgICB9IGVsc2Uge1xuICAgICAgICBwYXJhbXMubWF0cml4LmNsaWNrX2hsaWdodF94ID0gLTY2NjtcbiAgICAgICAgcGFyYW1zLm1hdHJpeC5jbGlja19obGlnaHRfeSA9IC02NjY7XG4gICAgICB9XG5cblxuICB9KTtcbn07XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiBzcmMvbWF0cml4L2FkZF9jbGlja19obGlnaHQuanNcbiAqKi8iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7Ozs7O0FBTEE7QUFXQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQWZBO0FBeUJBO0FBREE7QUFDQTs7QUF6QkE7QUFzQ0E7QUFEQTtBQUNBOztBQXRDQTtBQW9EQTtBQUNBO0FBRkE7QUFDQTs7QUFwREE7QUFnRUE7QUFEQTtBQUtBO0FBQ0E7QUFDQTtBQUhBO0FBbkVBO0FBNEVBO0FBQ0E7QUE3RUE7QUFQQTtBQUhBIiwic291cmNlUm9vdCI6IiJ9");

/***/ },
/* 18 */
/***/ function(module, exports) {

	eval("module.exports = function make_simple_rows(params, ini_inp_row_data, tip, row_selection) {\n\n  var inp_row_data = ini_inp_row_data.row_data;\n\n  // value: remove zero values to make visualization faster\n  var row_values = _.filter(inp_row_data, function (num) {\n    return num.value !== 0;\n  });\n\n  // generate tiles in the current row\n  var tile = d3.select(row_selection).selectAll('rect').data(row_values, function (d) {\n    return d.col_name;\n  }).enter().append('rect').attr('class', 'tile row_tile').attr('width', params.matrix.rect_width).attr('height', params.matrix.rect_height)\n  // switch the color based on up/dn value\n  .style('fill', function (d) {\n    return d.value > 0 ? params.matrix.tile_colors[0] : params.matrix.tile_colors[1];\n  }).on('mouseover', function (p) {\n\n    // highlight row - set text to active if\n    d3.selectAll(params.root + ' .row_label_text text').classed('active', function (d) {\n      return p.row_name.replace(/_/g, ' ') === d.name;\n    });\n\n    d3.selectAll(params.root + ' .col_label_text text').classed('active', function (d) {\n      return p.col_name === d.name;\n    });\n\n    if (params.matrix.show_tile_tooltips) {\n      tip.show(p);\n    }\n  }).on('mouseout', function () {\n    d3.selectAll(params.root + ' text').classed('active', false);\n    if (params.matrix.show_tile_tooltips) {\n      tip.hide();\n    }\n  }).attr('title', function (d) {\n    return d.value;\n  }).style('fill-opacity', function (d) {\n    // calculate output opacity using the opacity scale\n    var output_opacity = params.matrix.opacity_scale(Math.abs(d.value));\n    return output_opacity;\n  }).attr('transform', function (d) {\n    var x_pos = params.matrix.x_scale(d.pos_x) + 0.5 * params.viz.border_width;\n    var y_pos = 0.5 * params.viz.border_width / params.viz.zoom_switch;\n    return 'translate(' + x_pos + ',' + y_pos + ')';\n  });\n\n  if (params.matrix.tile_type == 'updn') {\n\n    // value split\n    var row_split_data = _.filter(inp_row_data, function (num) {\n      return num.value_up != 0 || num.value_dn != 0;\n    });\n\n    // tile_up\n    d3.select(row_selection).selectAll('.tile_up').data(row_split_data, function (d) {\n      return d.col_name;\n    }).enter().append('path').attr('class', 'tile_up').attr('d', function () {\n\n      // up triangle\n      var start_x = 0;\n      var final_x = params.matrix.x_scale.rangeBand();\n      var start_y = 0;\n      var final_y = params.matrix.y_scale.rangeBand() - params.matrix.y_scale.rangeBand() / 60;\n\n      var output_string = 'M' + start_x + ',' + start_y + ', L' + start_x + ', ' + final_y + ', L' + final_x + ',0 Z';\n\n      return output_string;\n    }).attr('transform', function (d) {\n      var x_pos = params.matrix.x_scale(d.pos_x) + 0.5 * params.viz.border_width;\n      var y_pos = 0.5 * params.viz.border_width / params.viz.zoom_switch;\n      return 'translate(' + x_pos + ',' + y_pos + ')';\n    }).style('fill', function () {\n      return params.matrix.tile_colors[0];\n    }).style('fill-opacity', function (d) {\n      var inst_opacity = 0;\n      if (Math.abs(d.value_dn) > 0) {\n        inst_opacity = params.matrix.opacity_scale(Math.abs(d.value_up));\n      }\n      return inst_opacity;\n    }).on('mouseover', function (p) {\n      // highlight row - set text to active if\n      d3.selectAll(params.root + ' .row_label_text text').classed('active', function (d) {\n        return p.row_name.replace(/_/g, ' ') === d.name;\n      });\n\n      d3.selectAll(params.root + ' .col_label_text text').classed('active', function (d) {\n        return p.col_name === d.name;\n      });\n      if (params.matrix.show_tile_tooltips) {\n        tip.show(p);\n      }\n    }).on('mouseout', function () {\n      d3.selectAll(params.root + ' text').classed('active', false);\n      if (params.matrix.show_tile_tooltips) {\n        tip.hide();\n      }\n    });\n\n    // tile_dn\n    d3.select(row_selection).selectAll('.tile_dn').data(row_split_data, function (d) {\n      return d.col_name;\n    }).enter().append('path').attr('class', 'tile_dn').attr('d', function () {\n\n      // dn triangle\n      var start_x = 0;\n      var final_x = params.matrix.x_scale.rangeBand();\n      var start_y = params.matrix.y_scale.rangeBand() - params.matrix.y_scale.rangeBand() / 60;\n      var final_y = params.matrix.y_scale.rangeBand() - params.matrix.y_scale.rangeBand() / 60;\n\n      var output_string = 'M' + start_x + ', ' + start_y + ' ,   L' + final_x + ', ' + final_y + ',  L' + final_x + ',0 Z';\n\n      return output_string;\n    }).attr('transform', function (d) {\n      var x_pos = params.matrix.x_scale(d.pos_x) + 0.5 * params.viz.border_width;\n      var y_pos = 0.5 * params.viz.border_width / params.viz.zoom_switch;\n      return 'translate(' + x_pos + ',' + y_pos + ')';\n    }).style('fill', function () {\n      return params.matrix.tile_colors[1];\n    }).style('fill-opacity', function (d) {\n      var inst_opacity = 0;\n      if (Math.abs(d.value_up) > 0) {\n        inst_opacity = params.matrix.opacity_scale(Math.abs(d.value_dn));\n      }\n      return inst_opacity;\n    }).on('mouseover', function (p) {\n      // highlight row - set text to active if\n      d3.selectAll(params.root + ' .row_label_text text').classed('active', function (d) {\n        return p.row_name.replace(/_/g, ' ') === d.name;\n      });\n\n      d3.selectAll(params.root + ' .col_label_text text').classed('active', function (d) {\n        return p.col_name === d.name;\n      });\n      if (params.matrix.show_tile_tooltips) {\n        tip.show(p);\n      }\n    }).on('mouseout', function () {\n      d3.selectAll(params.root + ' text').classed('active', false);\n      if (params.matrix.show_tile_tooltips) {\n        tip.hide();\n      }\n    });\n\n    // remove rect when tile is split\n    tile.each(function (d) {\n      if (Math.abs(d.value_up) > 0 && Math.abs(d.value_dn) > 0) {\n        d3.select(this).remove();\n      }\n    });\n  }\n\n  // append title to group\n  if (params.matrix.tile_title) {\n    tile.append('title').text(function (d) {\n      var inst_string = 'value: ' + d.value;\n      return inst_string;\n    });\n  }\n};//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTguanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vc3JjL21hdHJpeC9tYWtlX3NpbXBsZV9yb3dzLmpzPzg4NGIiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBtYWtlX3NpbXBsZV9yb3dzKHBhcmFtcywgaW5pX2lucF9yb3dfZGF0YSwgdGlwLCByb3dfc2VsZWN0aW9uKSB7XG5cbiAgdmFyIGlucF9yb3dfZGF0YSA9IGluaV9pbnBfcm93X2RhdGEucm93X2RhdGE7XG5cbiAgLy8gdmFsdWU6IHJlbW92ZSB6ZXJvIHZhbHVlcyB0byBtYWtlIHZpc3VhbGl6YXRpb24gZmFzdGVyXG4gIHZhciByb3dfdmFsdWVzID0gXy5maWx0ZXIoaW5wX3Jvd19kYXRhLCBmdW5jdGlvbihudW0pIHtcbiAgICByZXR1cm4gbnVtLnZhbHVlICE9PSAwO1xuICB9KTtcblxuICAvLyBnZW5lcmF0ZSB0aWxlcyBpbiB0aGUgY3VycmVudCByb3dcbiAgdmFyIHRpbGUgPSBkMy5zZWxlY3Qocm93X3NlbGVjdGlvbilcbiAgICAuc2VsZWN0QWxsKCdyZWN0JylcbiAgICAuZGF0YShyb3dfdmFsdWVzLCBmdW5jdGlvbihkKXsgcmV0dXJuIGQuY29sX25hbWU7IH0pXG4gICAgLmVudGVyKClcbiAgICAuYXBwZW5kKCdyZWN0JylcbiAgICAuYXR0cignY2xhc3MnLCAndGlsZSByb3dfdGlsZScpXG4gICAgLmF0dHIoJ3dpZHRoJywgcGFyYW1zLm1hdHJpeC5yZWN0X3dpZHRoKVxuICAgIC5hdHRyKCdoZWlnaHQnLCBwYXJhbXMubWF0cml4LnJlY3RfaGVpZ2h0KVxuICAgIC8vIHN3aXRjaCB0aGUgY29sb3IgYmFzZWQgb24gdXAvZG4gdmFsdWVcbiAgICAuc3R5bGUoJ2ZpbGwnLCBmdW5jdGlvbihkKSB7XG4gICAgICByZXR1cm4gZC52YWx1ZSA+IDAgPyBwYXJhbXMubWF0cml4LnRpbGVfY29sb3JzWzBdIDogcGFyYW1zLm1hdHJpeC50aWxlX2NvbG9yc1sxXTtcbiAgICB9KVxuICAgIC5vbignbW91c2VvdmVyJywgZnVuY3Rpb24ocCkge1xuXG4gICAgICAvLyBoaWdobGlnaHQgcm93IC0gc2V0IHRleHQgdG8gYWN0aXZlIGlmXG4gICAgICBkMy5zZWxlY3RBbGwocGFyYW1zLnJvb3QrJyAucm93X2xhYmVsX3RleHQgdGV4dCcpXG4gICAgICAgIC5jbGFzc2VkKCdhY3RpdmUnLCBmdW5jdGlvbihkKSB7XG4gICAgICAgICAgcmV0dXJuIHAucm93X25hbWUucmVwbGFjZSgvXy9nLCAnICcpID09PSBkLm5hbWU7XG4gICAgICAgIH0pO1xuXG4gICAgICBkMy5zZWxlY3RBbGwocGFyYW1zLnJvb3QrJyAuY29sX2xhYmVsX3RleHQgdGV4dCcpXG4gICAgICAgIC5jbGFzc2VkKCdhY3RpdmUnLCBmdW5jdGlvbihkKSB7XG4gICAgICAgICAgcmV0dXJuIHAuY29sX25hbWUgPT09IGQubmFtZTtcbiAgICAgICAgfSk7XG5cbiAgICAgIGlmIChwYXJhbXMubWF0cml4LnNob3dfdGlsZV90b29sdGlwcyl7XG4gICAgICAgIHRpcC5zaG93KHApO1xuICAgICAgfVxuXG4gICAgfSlcbiAgICAub24oJ21vdXNlb3V0JywgZnVuY3Rpb24oKSB7XG4gICAgICBkMy5zZWxlY3RBbGwocGFyYW1zLnJvb3QrJyB0ZXh0JykuY2xhc3NlZCgnYWN0aXZlJywgZmFsc2UpO1xuICAgICAgaWYgKHBhcmFtcy5tYXRyaXguc2hvd190aWxlX3Rvb2x0aXBzKXtcbiAgICAgICAgdGlwLmhpZGUoKTtcbiAgICAgIH1cbiAgICB9KVxuICAgIC5hdHRyKCd0aXRsZScsIGZ1bmN0aW9uKGQpIHtcbiAgICAgIHJldHVybiBkLnZhbHVlO1xuICAgIH0pXG4gICAgLnN0eWxlKCdmaWxsLW9wYWNpdHknLCBmdW5jdGlvbihkKSB7XG4gICAgICAvLyBjYWxjdWxhdGUgb3V0cHV0IG9wYWNpdHkgdXNpbmcgdGhlIG9wYWNpdHkgc2NhbGVcbiAgICAgIHZhciBvdXRwdXRfb3BhY2l0eSA9IHBhcmFtcy5tYXRyaXgub3BhY2l0eV9zY2FsZShNYXRoLmFicyhkLnZhbHVlKSk7XG4gICAgICByZXR1cm4gb3V0cHV0X29wYWNpdHk7XG4gICAgfSlcbiAgICAuYXR0cigndHJhbnNmb3JtJywgZnVuY3Rpb24oZCkge1xuICAgICAgdmFyIHhfcG9zID0gcGFyYW1zLm1hdHJpeC54X3NjYWxlKGQucG9zX3gpICsgMC41KnBhcmFtcy52aXouYm9yZGVyX3dpZHRoO1xuICAgICAgdmFyIHlfcG9zID0gMC41KnBhcmFtcy52aXouYm9yZGVyX3dpZHRoL3BhcmFtcy52aXouem9vbV9zd2l0Y2g7XG4gICAgICByZXR1cm4gJ3RyYW5zbGF0ZSgnICsgeF9wb3MgKyAnLCcreV9wb3MrJyknO1xuICAgIH0pO1xuXG4gIGlmIChwYXJhbXMubWF0cml4LnRpbGVfdHlwZSA9PSAndXBkbicpe1xuXG4gICAgLy8gdmFsdWUgc3BsaXRcbiAgICB2YXIgcm93X3NwbGl0X2RhdGEgPSBfLmZpbHRlcihpbnBfcm93X2RhdGEsIGZ1bmN0aW9uKG51bSl7XG4gICAgICByZXR1cm4gbnVtLnZhbHVlX3VwICE9IDAgfHwgbnVtLnZhbHVlX2RuICE9MCA7XG4gICAgfSk7XG5cbiAgICAvLyB0aWxlX3VwXG4gICAgZDMuc2VsZWN0KHJvd19zZWxlY3Rpb24pXG4gICAgICAuc2VsZWN0QWxsKCcudGlsZV91cCcpXG4gICAgICAuZGF0YShyb3dfc3BsaXRfZGF0YSwgZnVuY3Rpb24oZCl7cmV0dXJuIGQuY29sX25hbWU7fSlcbiAgICAgIC5lbnRlcigpXG4gICAgICAuYXBwZW5kKCdwYXRoJylcbiAgICAgIC5hdHRyKCdjbGFzcycsJ3RpbGVfdXAnKVxuICAgICAgLmF0dHIoJ2QnLCBmdW5jdGlvbigpIHtcblxuICAgICAgICAvLyB1cCB0cmlhbmdsZVxuICAgICAgICB2YXIgc3RhcnRfeCA9IDA7XG4gICAgICAgIHZhciBmaW5hbF94ID0gcGFyYW1zLm1hdHJpeC54X3NjYWxlLnJhbmdlQmFuZCgpO1xuICAgICAgICB2YXIgc3RhcnRfeSA9IDA7XG4gICAgICAgIHZhciBmaW5hbF95ID0gcGFyYW1zLm1hdHJpeC55X3NjYWxlLnJhbmdlQmFuZCgpIC0gcGFyYW1zLm1hdHJpeC55X3NjYWxlLnJhbmdlQmFuZCgpIC82MDtcblxuICAgICAgICB2YXIgb3V0cHV0X3N0cmluZyA9ICdNJyArIHN0YXJ0X3ggKyAnLCcgKyBzdGFydF95ICsgJywgTCcgK1xuICAgICAgICBzdGFydF94ICsgJywgJyArIGZpbmFsX3kgKyAnLCBMJyArIGZpbmFsX3ggKyAnLDAgWic7XG5cbiAgICAgICAgcmV0dXJuIG91dHB1dF9zdHJpbmc7XG4gICAgICB9KVxuICAgICAgLmF0dHIoJ3RyYW5zZm9ybScsIGZ1bmN0aW9uKGQpIHtcbiAgICAgICAgdmFyIHhfcG9zID0gcGFyYW1zLm1hdHJpeC54X3NjYWxlKGQucG9zX3gpICsgMC41KnBhcmFtcy52aXouYm9yZGVyX3dpZHRoO1xuICAgICAgICB2YXIgeV9wb3MgPSAwLjUqcGFyYW1zLnZpei5ib3JkZXJfd2lkdGgvcGFyYW1zLnZpei56b29tX3N3aXRjaDtcbiAgICAgICAgcmV0dXJuICd0cmFuc2xhdGUoJyArIHhfcG9zICsgJywnK3lfcG9zKycpJztcbiAgICAgIH0pXG4gICAgICAuc3R5bGUoJ2ZpbGwnLCBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIHBhcmFtcy5tYXRyaXgudGlsZV9jb2xvcnNbMF07XG4gICAgICB9KVxuICAgICAgLnN0eWxlKCdmaWxsLW9wYWNpdHknLGZ1bmN0aW9uKGQpe1xuICAgICAgICB2YXIgaW5zdF9vcGFjaXR5ID0gMDtcbiAgICAgICAgaWYgKE1hdGguYWJzKGQudmFsdWVfZG4pPjApe1xuICAgICAgICAgIGluc3Rfb3BhY2l0eSA9IHBhcmFtcy5tYXRyaXgub3BhY2l0eV9zY2FsZShNYXRoLmFicyhkLnZhbHVlX3VwKSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGluc3Rfb3BhY2l0eTtcbiAgICAgIH0pXG4gICAgICAub24oJ21vdXNlb3ZlcicsIGZ1bmN0aW9uKHApIHtcbiAgICAgIC8vIGhpZ2hsaWdodCByb3cgLSBzZXQgdGV4dCB0byBhY3RpdmUgaWZcbiAgICAgIGQzLnNlbGVjdEFsbChwYXJhbXMucm9vdCsnIC5yb3dfbGFiZWxfdGV4dCB0ZXh0JylcbiAgICAgICAgLmNsYXNzZWQoJ2FjdGl2ZScsIGZ1bmN0aW9uKGQpIHtcbiAgICAgICAgICByZXR1cm4gcC5yb3dfbmFtZS5yZXBsYWNlKC9fL2csICcgJykgPT09IGQubmFtZTtcbiAgICAgICAgfSk7XG5cbiAgICAgIGQzLnNlbGVjdEFsbChwYXJhbXMucm9vdCsnIC5jb2xfbGFiZWxfdGV4dCB0ZXh0JylcbiAgICAgICAgLmNsYXNzZWQoJ2FjdGl2ZScsIGZ1bmN0aW9uKGQpIHtcbiAgICAgICAgICByZXR1cm4gcC5jb2xfbmFtZSA9PT0gZC5uYW1lO1xuICAgICAgICB9KTtcbiAgICAgIGlmIChwYXJhbXMubWF0cml4LnNob3dfdGlsZV90b29sdGlwcyl7XG4gICAgICAgIHRpcC5zaG93KHApO1xuICAgICAgfVxuICAgIH0pXG4gICAgLm9uKCdtb3VzZW91dCcsIGZ1bmN0aW9uKCkge1xuICAgICAgZDMuc2VsZWN0QWxsKHBhcmFtcy5yb290KycgdGV4dCcpLmNsYXNzZWQoJ2FjdGl2ZScsIGZhbHNlKTtcbiAgICAgIGlmIChwYXJhbXMubWF0cml4LnNob3dfdGlsZV90b29sdGlwcyl7XG4gICAgICAgIHRpcC5oaWRlKCk7XG4gICAgICB9XG4gICAgfSk7XG5cbiAgICAvLyB0aWxlX2RuXG4gICAgZDMuc2VsZWN0KHJvd19zZWxlY3Rpb24pXG4gICAgICAuc2VsZWN0QWxsKCcudGlsZV9kbicpXG4gICAgICAuZGF0YShyb3dfc3BsaXRfZGF0YSwgZnVuY3Rpb24oZCl7cmV0dXJuIGQuY29sX25hbWU7fSlcbiAgICAgIC5lbnRlcigpXG4gICAgICAuYXBwZW5kKCdwYXRoJylcbiAgICAgIC5hdHRyKCdjbGFzcycsJ3RpbGVfZG4nKVxuICAgICAgLmF0dHIoJ2QnLCBmdW5jdGlvbigpIHtcblxuICAgICAgICAvLyBkbiB0cmlhbmdsZVxuICAgICAgICB2YXIgc3RhcnRfeCA9IDA7XG4gICAgICAgIHZhciBmaW5hbF94ID0gcGFyYW1zLm1hdHJpeC54X3NjYWxlLnJhbmdlQmFuZCgpO1xuICAgICAgICB2YXIgc3RhcnRfeSA9IHBhcmFtcy5tYXRyaXgueV9zY2FsZS5yYW5nZUJhbmQoKSAtIHBhcmFtcy5tYXRyaXgueV9zY2FsZS5yYW5nZUJhbmQoKSAvNjA7XG4gICAgICAgIHZhciBmaW5hbF95ID0gcGFyYW1zLm1hdHJpeC55X3NjYWxlLnJhbmdlQmFuZCgpIC0gcGFyYW1zLm1hdHJpeC55X3NjYWxlLnJhbmdlQmFuZCgpIC82MDtcblxuICAgICAgICB2YXIgb3V0cHV0X3N0cmluZyA9ICdNJyArIHN0YXJ0X3ggKyAnLCAnICsgc3RhcnRfeSArICcgLCAgIEwnICtcbiAgICAgICAgZmluYWxfeCArICcsICcgKyBmaW5hbF95ICsgJywgIEwnICsgZmluYWxfeCArICcsMCBaJztcblxuICAgICAgICByZXR1cm4gb3V0cHV0X3N0cmluZztcbiAgICAgIH0pXG4gICAgICAuYXR0cigndHJhbnNmb3JtJywgZnVuY3Rpb24oZCkge1xuICAgICAgICB2YXIgeF9wb3MgPSBwYXJhbXMubWF0cml4Lnhfc2NhbGUoZC5wb3NfeCkgKyAwLjUqcGFyYW1zLnZpei5ib3JkZXJfd2lkdGg7XG4gICAgICAgIHZhciB5X3BvcyA9IDAuNSpwYXJhbXMudml6LmJvcmRlcl93aWR0aC9wYXJhbXMudml6Lnpvb21fc3dpdGNoO1xuICAgICAgICByZXR1cm4gJ3RyYW5zbGF0ZSgnICsgeF9wb3MgKyAnLCcreV9wb3MrJyknO1xuICAgICAgfSlcbiAgICAgIC5zdHlsZSgnZmlsbCcsIGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gcGFyYW1zLm1hdHJpeC50aWxlX2NvbG9yc1sxXTtcbiAgICAgIH0pXG4gICAgICAuc3R5bGUoJ2ZpbGwtb3BhY2l0eScsZnVuY3Rpb24oZCl7XG4gICAgICAgIHZhciBpbnN0X29wYWNpdHkgPSAwO1xuICAgICAgICBpZiAoTWF0aC5hYnMoZC52YWx1ZV91cCk+MCl7XG4gICAgICAgICAgaW5zdF9vcGFjaXR5ID0gcGFyYW1zLm1hdHJpeC5vcGFjaXR5X3NjYWxlKE1hdGguYWJzKGQudmFsdWVfZG4pKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gaW5zdF9vcGFjaXR5O1xuICAgICAgfSlcbiAgICAgIC5vbignbW91c2VvdmVyJywgZnVuY3Rpb24ocCkge1xuICAgICAgLy8gaGlnaGxpZ2h0IHJvdyAtIHNldCB0ZXh0IHRvIGFjdGl2ZSBpZlxuICAgICAgZDMuc2VsZWN0QWxsKHBhcmFtcy5yb290KycgLnJvd19sYWJlbF90ZXh0IHRleHQnKVxuICAgICAgICAuY2xhc3NlZCgnYWN0aXZlJywgZnVuY3Rpb24oZCkge1xuICAgICAgICAgIHJldHVybiBwLnJvd19uYW1lLnJlcGxhY2UoL18vZywgJyAnKSA9PT0gZC5uYW1lO1xuICAgICAgICB9KTtcblxuICAgICAgZDMuc2VsZWN0QWxsKHBhcmFtcy5yb290KycgLmNvbF9sYWJlbF90ZXh0IHRleHQnKVxuICAgICAgICAuY2xhc3NlZCgnYWN0aXZlJywgZnVuY3Rpb24oZCkge1xuICAgICAgICAgIHJldHVybiBwLmNvbF9uYW1lID09PSBkLm5hbWU7XG4gICAgICAgIH0pO1xuICAgICAgaWYgKHBhcmFtcy5tYXRyaXguc2hvd190aWxlX3Rvb2x0aXBzKXtcbiAgICAgICAgdGlwLnNob3cocCk7XG4gICAgICB9XG4gICAgfSlcbiAgICAub24oJ21vdXNlb3V0JywgZnVuY3Rpb24oKSB7XG4gICAgICBkMy5zZWxlY3RBbGwocGFyYW1zLnJvb3QrJyB0ZXh0JykuY2xhc3NlZCgnYWN0aXZlJywgZmFsc2UpO1xuICAgICAgaWYgKHBhcmFtcy5tYXRyaXguc2hvd190aWxlX3Rvb2x0aXBzKXtcbiAgICAgICAgdGlwLmhpZGUoKTtcbiAgICAgIH1cbiAgICB9KTtcblxuICAgIC8vIHJlbW92ZSByZWN0IHdoZW4gdGlsZSBpcyBzcGxpdCBcbiAgICB0aWxlXG4gICAgICAuZWFjaChmdW5jdGlvbihkKXtcbiAgICAgICAgaWYgKCBNYXRoLmFicyhkLnZhbHVlX3VwKT4wICYmIE1hdGguYWJzKGQudmFsdWVfZG4pPjAgKXtcbiAgICAgICAgICBkMy5zZWxlY3QodGhpcykucmVtb3ZlKCk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuXG4gIH1cblxuICAvLyBhcHBlbmQgdGl0bGUgdG8gZ3JvdXBcbiAgaWYgKHBhcmFtcy5tYXRyaXgudGlsZV90aXRsZSkge1xuICAgIHRpbGUuYXBwZW5kKCd0aXRsZScpXG4gICAgLnRleHQoZnVuY3Rpb24oZCkge1xuICAgICAgdmFyIGluc3Rfc3RyaW5nID0gJ3ZhbHVlOiAnICsgZC52YWx1ZTtcbiAgICAgIHJldHVybiBpbnN0X3N0cmluZztcbiAgICB9KTtcbiAgfVxuXG59O1xuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIHNyYy9tYXRyaXgvbWFrZV9zaW1wbGVfcm93cy5qc1xuICoqLyJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7O0FBSEE7QUFNQTtBQURBO0FBQ0E7O0FBTkE7QUFZQTtBQUFBOztBQUZBO0FBVUE7QUFEQTtBQUNBOztBQUtBO0FBRUE7QUFEQTtBQUNBO0FBR0E7QUFFQTtBQURBO0FBQ0E7QUFHQTtBQUNBO0FBREE7QUFiQTtBQW1CQTtBQUNBO0FBQ0E7QUFEQTtBQUZBO0FBT0E7QUFEQTs7QUFLQTtBQUNBO0FBSEE7QUFNQTtBQUNBO0FBQ0E7QUFIQTtBQUNBO0FBS0E7QUFDQTs7QUFFQTtBQUNBO0FBREE7QUFDQTs7QUFKQTtBQVVBO0FBQUE7QUFDQTs7QUFNQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBWEE7QUFjQTtBQUNBO0FBQ0E7QUFIQTtBQU1BO0FBREE7QUFJQTtBQUNBO0FBQ0E7QUFEQTtBQUdBO0FBTEE7O0FBU0E7QUFFQTtBQURBO0FBQ0E7QUFHQTtBQUVBO0FBREE7QUFHQTtBQUNBO0FBREE7QUFYQTtBQWdCQTtBQUNBO0FBQ0E7QUFEQTtBQUZBO0FBQ0E7O0FBMURBO0FBbUVBO0FBQUE7QUFDQTs7QUFNQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBWEE7QUFjQTtBQUNBO0FBQ0E7QUFIQTtBQU1BO0FBREE7QUFJQTtBQUNBO0FBQ0E7QUFEQTtBQUdBO0FBTEE7O0FBU0E7QUFFQTtBQURBO0FBQ0E7QUFHQTtBQUVBO0FBREE7QUFHQTtBQUNBO0FBREE7QUFYQTtBQWdCQTtBQUNBO0FBQ0E7QUFEQTtBQUZBO0FBQ0E7O0FBbkhBO0FBNEhBO0FBQ0E7QUFEQTtBQURBO0FBM0hBO0FBQ0E7O0FBN0RBO0FBaU1BO0FBRUE7QUFDQTtBQUZBO0FBRkE7QUFoTUEiLCJzb3VyY2VSb290IjoiIn0=");

/***/ },
/* 19 */
/***/ function(module, exports, __webpack_require__) {

	eval("var utils = __webpack_require__(2);\nvar add_row_click_hlight = __webpack_require__(20);\nvar row_reorder = __webpack_require__(21);\n\nmodule.exports = function (params, text_delay) {\n  var row_nodes = params.network_data.row_nodes;\n\n  var row_nodes_names = params.network_data.row_nodes_names;\n  var row_container;\n\n  // row container holds all row text and row visualizations (triangles rects)\n  if (d3.select(params.viz.vis_svg + ' .row_container').empty()) {\n    row_container = d3.select(params.viz.viz_svg).append('g').attr('class', 'row_container').attr('transform', 'translate(' + params.norm_label.margin.left + ',' + params.viz.clust.margin.top + ')');\n  } else {\n    row_container = d3.select(params.viz.viz_svg).select('.row_container').attr('transform', 'translate(' + params.norm_label.margin.left + ',' + params.viz.clust.margin.top + ')');\n  }\n\n  if (d3.select(params.root + ' .row_white_background').empty()) {\n    row_container.append('rect').classed('row_white_background', true).classed('white_bars', true).attr('fill', params.viz.background_color).attr('width', params.norm_label.background.row).attr('height', 30 * params.viz.clust.dim.height + 'px');\n  }\n\n  // container to hold text row labels\n  row_container.append('g').attr('class', 'row_label_container').attr('transform', 'translate(' + params.norm_label.width.row + ',0)').append('g').attr('class', 'row_label_zoom_container');\n\n  var row_labels = d3.select(params.root + ' .row_label_zoom_container').selectAll('g').data(row_nodes, function (d) {\n    return d.name;\n  }).enter().append('g').attr('class', 'row_label_text').attr('transform', function (d) {\n    var inst_index = _.indexOf(row_nodes_names, d.name);\n    return 'translate(0,' + params.matrix.y_scale(inst_index) + ')';\n  });\n\n  d3.select(params.root + ' .row_label_zoom_container').selectAll('.row_label_text').on('dblclick', function (d) {\n    row_reorder(params, this);\n    if (params.tile_click_hlight) {\n      add_row_click_hlight(this, d.ini);\n    }\n  });\n\n  if (params.labels.show_label_tooltips) {\n\n    // d3-tooltip\n    var tip = d3.tip().attr('class', 'd3-tip').direction('e').offset([0, 10]).html(function (d) {\n      var inst_name = d.name.replace(/_/g, ' ').split('#')[0];\n      return \"<span>\" + inst_name + \"</span>\";\n    });\n\n    d3.select(params.viz.viz_wrapper).select(params.root + ' .row_container').call(tip);\n\n    row_labels.on('mouseover', function (d) {\n      d3.select(this).select('text').classed('active', true);\n      tip.show(d);\n    }).on('mouseout', function mouseout(d) {\n      d3.select(this).select('text').classed('active', false);\n      tip.hide(d);\n    });\n  } else {\n    row_labels.on('mouseover', function () {\n      d3.select(this).select('text').classed('active', true);\n    }).on('mouseout', function mouseout() {\n      d3.select(this).select('text').classed('active', false);\n    });\n  }\n\n  // append rectangle behind text\n  row_labels.insert('rect').style('opacity', 0);\n\n  // append row label text\n  row_labels.append('text').attr('y', params.matrix.rect_height * 0.5 + params.labels.default_fs_row * 0.35).attr('text-anchor', 'end').style('font-size', params.labels.default_fs_row + 'px').text(function (d) {\n    return utils.normal_name(d, params.labels.max_label_char);\n  }).attr('pointer-events', 'none').style('opacity', 0).transition().delay(text_delay).duration(text_delay).style('opacity', 1);\n\n  // change the size of the highlighting rects\n  row_labels.each(function () {\n    var bbox = d3.select(this).select('text')[0][0].getBBox();\n    d3.select(this).select('rect').attr('x', bbox.x).attr('y', 0).attr('width', bbox.width).attr('height', params.matrix.y_scale.rangeBand()).style('fill', function () {\n      var inst_hl = 'yellow';\n      return inst_hl;\n    }).style('opacity', function (d) {\n      var inst_opacity = 0;\n      // highlight target genes\n      if (d.target === 1) {\n        inst_opacity = 1;\n      }\n      return inst_opacity;\n    });\n  });\n\n  // label the widest row and col labels\n  params.bounding_width_max = {};\n  params.bounding_width_max.row = 0;\n\n  d3.selectAll(params.root + ' .row_label_text').each(function () {\n    var tmp_width = d3.select(this).select('text').node().getBBox().width;\n    if (tmp_width > params.bounding_width_max.row) {\n      params.bounding_width_max.row = tmp_width;\n    }\n  });\n\n  // row visualizations - classification triangles and colorbar rects\n  var row_viz_container = row_container.append('g').attr('class', 'row_viz_container').attr('transform', 'translate(' + params.norm_label.width.row + ',0)').append('g').attr('class', 'row_zoom_container');\n\n  // white background for triangle\n  if (d3.select(params.root + ' .row_zoom_container').select('.white_bars').empty()) {\n    row_viz_container.append('rect').attr('class', 'white_bars').attr('fill', params.viz.background_color).attr('width', params.class_room.row + 'px').attr('height', function () {\n      var inst_height = params.viz.clust.dim.height;\n      return inst_height;\n    });\n  } else {\n    row_viz_container.select('class', 'white_bars').attr('fill', params.viz.background_color).attr('width', params.class_room.row + 'px').attr('height', function () {\n      var inst_height = params.viz.clust.dim.height;\n      return inst_height;\n    });\n  }\n\n  // groups that hold classification triangle and colorbar rect\n  var row_viz_group = d3.select(params.root + ' .row_zoom_container').selectAll('g').data(row_nodes, function (d) {\n    return d.name;\n  }).enter().append('g').attr('class', 'row_viz_group').attr('transform', function (d) {\n    var inst_index = _.indexOf(row_nodes_names, d.name);\n    return 'translate(0, ' + params.matrix.y_scale(inst_index) + ')';\n  });\n\n  // add triangles\n  row_viz_group.append('path').attr('d', function () {\n    var origin_x = params.class_room.symbol_width - 1;\n    var origin_y = 0;\n    var mid_x = 1;\n    var mid_y = params.matrix.y_scale.rangeBand() / 2;\n    var final_x = params.class_room.symbol_width - 1;\n    var final_y = params.matrix.y_scale.rangeBand();\n    var output_string = 'M ' + origin_x + ',' + origin_y + ' L ' + mid_x + ',' + mid_y + ', L ' + final_x + ',' + final_y + ' Z';\n    return output_string;\n  }).attr('fill', function (d) {\n    // initailize color\n    var inst_color = '#eee';\n    if (params.labels.show_categories) {\n      inst_color = params.labels.class_colors.row[d.cl];\n    }\n    return inst_color;\n  }).style('opacity', 0).transition().delay(text_delay).duration(text_delay).style('opacity', 1);\n\n  if (utils.has(params.network_data.row_nodes[0], 'value')) {\n\n    row_labels.append('rect').attr('class', 'row_bars').attr('width', function (d) {\n      var inst_value = 0;\n      inst_value = params.labels.bar_scale_row(Math.abs(d.value));\n      return inst_value;\n    }).attr('x', function (d) {\n      var inst_value = 0;\n      inst_value = -params.labels.bar_scale_row(Math.abs(d.value));\n      return inst_value;\n    }).attr('height', params.matrix.y_scale.rangeBand()).attr('fill', function (d) {\n      return d.value > 0 ? params.matrix.bar_colors[0] : params.matrix.bar_colors[1];\n    }).attr('opacity', 0.4);\n  }\n\n  // add row callback function\n  d3.selectAll(params.root + ' .row_label_text').on('click', function (d) {\n    if (typeof params.click_label == 'function') {\n      params.click_label(d.name, 'row');\n      add_row_click_hlight(params, this, d.ini);\n    } else {\n      if (params.tile_click_hlight) {\n        add_row_click_hlight(params, this, d.ini);\n      }\n    }\n  });\n\n  // row label text will not spillover initially since\n  // the font-size is set up to not allow spillover\n  // it can spillover during zooming and must be constrained\n\n  // return row_viz_group so that the dendrogram can be made\n  return row_viz_group;\n};//@ sourceMappingURL=data:application/json;base64,");

/***/ },
/* 20 */
/***/ function(module, exports) {

	eval("module.exports = function (params, clicked_row, id_clicked_row) {\n  if (id_clicked_row != params.click_hlight_row) {\n\n    var rel_width_hlight = 6;\n    var opacity_hlight = 0.85;\n    // var hlight_width  = rel_width_hlight*params.viz.border_width;\n    var hlight_height = rel_width_hlight * params.viz.border_width / params.viz.zoom_switch;\n\n    d3.selectAll(params.root + ' .click_hlight').remove();\n\n    // // highlight selected row\n    // d3.selectAll(params.root+' .row_label_text')\n    //   .select('rect')\n    // d3.select(this)\n    //   .select('rect')\n    //   .style('opacity', 1);\n\n    d3.select(clicked_row).append('rect').classed('click_hlight', true).classed('row_top_hlight', true).attr('width', params.viz.svg_dim.width).attr('height', hlight_height).attr('fill', params.matrix.hlight_color).attr('opacity', opacity_hlight);\n\n    d3.select(clicked_row).append('rect').classed('click_hlight', true).classed('row_bottom_hlight', true).attr('width', params.viz.svg_dim.width).attr('height', hlight_height).attr('fill', params.matrix.hlight_color).attr('opacity', opacity_hlight).attr('transform', function () {\n      var tmp_translate_y = params.matrix.y_scale.rangeBand() - hlight_height;\n      return 'translate(0,' + tmp_translate_y + ')';\n    });\n  } else {\n    d3.selectAll(params.root + ' .click_hlight').remove();\n    params.click_hlight_row = -666;\n  }\n};//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjAuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vc3JjL2xhYmVscy9hZGRfcm93X2NsaWNrX2hsaWdodC5qcz9jMjUxIl0sInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24ocGFyYW1zLCBjbGlja2VkX3JvdywgaWRfY2xpY2tlZF9yb3cpIHtcbiAgaWYgKGlkX2NsaWNrZWRfcm93ICE9IHBhcmFtcy5jbGlja19obGlnaHRfcm93KXtcblxuICAgIHZhciByZWxfd2lkdGhfaGxpZ2h0ID0gNjtcbiAgICB2YXIgb3BhY2l0eV9obGlnaHQgPSAwLjg1O1xuICAgIC8vIHZhciBobGlnaHRfd2lkdGggID0gcmVsX3dpZHRoX2hsaWdodCpwYXJhbXMudml6LmJvcmRlcl93aWR0aDtcbiAgICB2YXIgaGxpZ2h0X2hlaWdodCA9IHJlbF93aWR0aF9obGlnaHQqcGFyYW1zLnZpei5ib3JkZXJfd2lkdGgvcGFyYW1zLnZpei56b29tX3N3aXRjaDtcblxuICAgIGQzLnNlbGVjdEFsbChwYXJhbXMucm9vdCsnIC5jbGlja19obGlnaHQnKVxuICAgICAgLnJlbW92ZSgpO1xuXG4gICAgLy8gLy8gaGlnaGxpZ2h0IHNlbGVjdGVkIHJvd1xuICAgIC8vIGQzLnNlbGVjdEFsbChwYXJhbXMucm9vdCsnIC5yb3dfbGFiZWxfdGV4dCcpXG4gICAgLy8gICAuc2VsZWN0KCdyZWN0JylcbiAgICAvLyBkMy5zZWxlY3QodGhpcylcbiAgICAvLyAgIC5zZWxlY3QoJ3JlY3QnKVxuICAgIC8vICAgLnN0eWxlKCdvcGFjaXR5JywgMSk7XG5cbiAgICBkMy5zZWxlY3QoY2xpY2tlZF9yb3cpXG4gICAgICAuYXBwZW5kKCdyZWN0JylcbiAgICAgIC5jbGFzc2VkKCdjbGlja19obGlnaHQnLHRydWUpXG4gICAgICAuY2xhc3NlZCgncm93X3RvcF9obGlnaHQnLHRydWUpXG4gICAgICAuYXR0cignd2lkdGgnLHBhcmFtcy52aXouc3ZnX2RpbS53aWR0aClcbiAgICAgIC5hdHRyKCdoZWlnaHQnLGhsaWdodF9oZWlnaHQpXG4gICAgICAuYXR0cignZmlsbCcscGFyYW1zLm1hdHJpeC5obGlnaHRfY29sb3IpXG4gICAgICAuYXR0cignb3BhY2l0eScsb3BhY2l0eV9obGlnaHQpO1xuXG4gICAgZDMuc2VsZWN0KGNsaWNrZWRfcm93KVxuICAgICAgLmFwcGVuZCgncmVjdCcpXG4gICAgICAuY2xhc3NlZCgnY2xpY2tfaGxpZ2h0Jyx0cnVlKVxuICAgICAgLmNsYXNzZWQoJ3Jvd19ib3R0b21faGxpZ2h0Jyx0cnVlKVxuICAgICAgLmF0dHIoJ3dpZHRoJyxwYXJhbXMudml6LnN2Z19kaW0ud2lkdGgpXG4gICAgICAuYXR0cignaGVpZ2h0JyxobGlnaHRfaGVpZ2h0KVxuICAgICAgLmF0dHIoJ2ZpbGwnLHBhcmFtcy5tYXRyaXguaGxpZ2h0X2NvbG9yKVxuICAgICAgLmF0dHIoJ29wYWNpdHknLG9wYWNpdHlfaGxpZ2h0KVxuICAgICAgLmF0dHIoJ3RyYW5zZm9ybScsIGZ1bmN0aW9uKCl7XG4gICAgICAgIHZhciB0bXBfdHJhbnNsYXRlX3kgPSBwYXJhbXMubWF0cml4Lnlfc2NhbGUucmFuZ2VCYW5kKCkgLSBobGlnaHRfaGVpZ2h0O1xuICAgICAgICByZXR1cm4gJ3RyYW5zbGF0ZSgwLCcrdG1wX3RyYW5zbGF0ZV95KycpJztcbiAgICAgIH0pO1xuICB9IGVsc2V7XG4gICAgZDMuc2VsZWN0QWxsKHBhcmFtcy5yb290KycgLmNsaWNrX2hsaWdodCcpXG4gICAgLnJlbW92ZSgpO1xuICAgIHBhcmFtcy5jbGlja19obGlnaHRfcm93ID0gLTY2NjtcbiAgfVxuXG59O1xuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogc3JjL2xhYmVscy9hZGRfcm93X2NsaWNrX2hsaWdodC5qc1xuICoqLyJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFIQTtBQUNBO0FBTUE7QUFDQTs7Ozs7Ozs7QUFSQTtBQUNBO0FBeUJBO0FBU0E7QUFDQTtBQUZBO0FBbENBO0FBdUNBO0FBRUE7QUF6Q0E7QUFEQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ },
/* 21 */
/***/ function(module, exports, __webpack_require__) {

	eval("var reposition_tile_highlight = __webpack_require__(23);\n\nmodule.exports = function (params, row_selection) {\n\n  // get inst row (gene)\n  var inst_row = d3.select(row_selection).select('text').text();\n\n  params.viz.run_trans = true;\n\n  var mat = params.matrix.matrix;\n  var row_nodes = params.network_data.row_nodes;\n  var col_nodes = params.network_data.col_nodes;\n\n  var col_nodes_names = _.pluck(col_nodes, 'name');\n\n  // find the index of the row\n  var tmp_arr = [];\n  row_nodes.forEach(function (node) {\n    tmp_arr.push(node.name);\n  });\n\n  // find index\n  inst_row = _.indexOf(tmp_arr, inst_row);\n\n  // gather the values of the input genes\n  tmp_arr = [];\n  col_nodes.forEach(function (node, index) {\n    tmp_arr.push(mat[inst_row].row_data[index].value);\n  });\n\n  // sort the rows\n  var tmp_sort = d3.range(tmp_arr.length).sort(function (a, b) {\n    return tmp_arr[b] - tmp_arr[a];\n  });\n\n  // resort cols\n  params.matrix.x_scale.domain(tmp_sort);\n\n  var t;\n\n  // reorder matrix\n  ////////////////////\n  if (params.network_data.links.length > params.matrix.def_large_matrix) {\n\n    // define the t variable as the transition function\n    t = d3.select(params.root + ' .clust_group');\n\n    // Move Col Labels\n    d3.select(params.root + ' .col_zoom_container').selectAll('.col_label_text').attr('transform', function (d) {\n      var inst_index = _.indexOf(col_nodes_names, d.name);\n      return 'translate(' + params.matrix.x_scale(inst_index) + ')rotate(-90)';\n    });\n\n    // reorder col_class groups\n    d3.selectAll(params.root + ' .col_viz_group').attr('transform', function (d) {\n      var inst_index = _.indexOf(col_nodes_names, d.name);\n      return 'translate(' + params.matrix.x_scale(inst_index) + ',0)';\n    });\n  } else {\n\n    // define the t variable as the transition function\n    t = d3.select(params.root + ' .clust_group').transition().duration(2500);\n\n    // Move Col Labels\n    d3.select(params.root + ' .col_zoom_container').selectAll('.col_label_text').transition().duration(2500).attr('transform', function (d) {\n      var inst_index = _.indexOf(col_nodes_names, d.name);\n      return 'translate(' + params.matrix.x_scale(inst_index) + ')rotate(-90)';\n    });\n\n    // reorder col_class groups\n    d3.selectAll(params.root + ' .col_viz_group').transition().duration(2500).attr('transform', function (d) {\n      var inst_index = _.indexOf(col_nodes_names, d.name);\n      return 'translate(' + params.matrix.x_scale(inst_index) + ',0)';\n    });\n    // .each('end', function() {\n    //   // set running transition to 0\n    //   params.viz.run_trans = false;\n    // });\n  }\n\n  // reorder matrix\n  t.selectAll('.tile').attr('transform', function (d) {\n    return 'translate(' + params.matrix.x_scale(d.pos_x) + ',0)';\n  });\n\n  t.selectAll('.tile_up').attr('transform', function (d) {\n    return 'translate(' + params.matrix.x_scale(d.pos_x) + ',0)';\n  });\n\n  t.selectAll('.tile_dn').attr('transform', function (d) {\n    return 'translate(' + params.matrix.x_scale(d.pos_x) + ',0)';\n  });\n\n  // highlight selected column\n  ///////////////////////////////\n  // unhilight and unbold all columns (already unbolded earlier)\n  d3.selectAll(params.root + ' .row_label_text').select('rect').style('opacity', 0);\n  // highlight column name\n  d3.select(row_selection).select('rect').style('opacity', 1);\n\n  reposition_tile_highlight(params);\n\n  // redefine x and y positions\n  params.network_data.links.forEach(function (d) {\n    d.x = params.matrix.x_scale(d.target);\n    d.y = params.matrix.y_scale(d.source);\n  });\n\n  setTimeout(function () {\n    params.viz.run_trans = false;\n  }, 2500);\n};//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjEuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vc3JjL3Jlb3JkZXIvcm93X3Jlb3JkZXIuanM/ZDA4MSJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgcmVwb3NpdGlvbl90aWxlX2hpZ2hsaWdodCA9IHJlcXVpcmUoJy4vcmVwb3NpdGlvbl90aWxlX2hpZ2hsaWdodCcpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKHBhcmFtcywgcm93X3NlbGVjdGlvbikge1xuXG4gIC8vIGdldCBpbnN0IHJvdyAoZ2VuZSlcbiAgdmFyIGluc3Rfcm93ID0gZDMuc2VsZWN0KHJvd19zZWxlY3Rpb24pLnNlbGVjdCgndGV4dCcpLnRleHQoKTtcblxuICBwYXJhbXMudml6LnJ1bl90cmFucyA9IHRydWU7XG5cbiAgdmFyIG1hdCAgICAgICA9IHBhcmFtcy5tYXRyaXgubWF0cml4O1xuICB2YXIgcm93X25vZGVzID0gcGFyYW1zLm5ldHdvcmtfZGF0YS5yb3dfbm9kZXM7XG4gIHZhciBjb2xfbm9kZXMgPSBwYXJhbXMubmV0d29ya19kYXRhLmNvbF9ub2RlcztcblxuICB2YXIgY29sX25vZGVzX25hbWVzID0gXy5wbHVjayhjb2xfbm9kZXMsICduYW1lJyk7XG5cbiAgLy8gZmluZCB0aGUgaW5kZXggb2YgdGhlIHJvd1xuICB2YXIgdG1wX2FyciA9IFtdO1xuICByb3dfbm9kZXMuZm9yRWFjaChmdW5jdGlvbihub2RlKSB7XG4gICAgdG1wX2Fyci5wdXNoKG5vZGUubmFtZSk7XG4gIH0pO1xuXG4gIC8vIGZpbmQgaW5kZXhcbiAgaW5zdF9yb3cgPSBfLmluZGV4T2YodG1wX2FyciwgaW5zdF9yb3cpO1xuXG4gIC8vIGdhdGhlciB0aGUgdmFsdWVzIG9mIHRoZSBpbnB1dCBnZW5lc1xuICB0bXBfYXJyID0gW107XG4gIGNvbF9ub2Rlcy5mb3JFYWNoKGZ1bmN0aW9uKG5vZGUsIGluZGV4KSB7XG4gICAgdG1wX2Fyci5wdXNoKCBtYXRbaW5zdF9yb3ddLnJvd19kYXRhW2luZGV4XS52YWx1ZSk7XG4gIH0pO1xuXG4gIC8vIHNvcnQgdGhlIHJvd3NcbiAgdmFyIHRtcF9zb3J0ID0gZDMucmFuZ2UodG1wX2Fyci5sZW5ndGgpLnNvcnQoZnVuY3Rpb24oYSwgYikge1xuICAgIHJldHVybiB0bXBfYXJyW2JdIC0gdG1wX2FyclthXTtcbiAgfSk7XG5cbiAgLy8gcmVzb3J0IGNvbHNcbiAgcGFyYW1zLm1hdHJpeC54X3NjYWxlLmRvbWFpbih0bXBfc29ydCk7XG5cbiAgdmFyIHQ7XG5cbiAgLy8gcmVvcmRlciBtYXRyaXhcbiAgLy8vLy8vLy8vLy8vLy8vLy8vLy9cbiAgaWYgKHBhcmFtcy5uZXR3b3JrX2RhdGEubGlua3MubGVuZ3RoID4gcGFyYW1zLm1hdHJpeC5kZWZfbGFyZ2VfbWF0cml4KXtcblxuICAgIC8vIGRlZmluZSB0aGUgdCB2YXJpYWJsZSBhcyB0aGUgdHJhbnNpdGlvbiBmdW5jdGlvblxuICAgIHQgPSBkMy5zZWxlY3QocGFyYW1zLnJvb3QgKyAnIC5jbHVzdF9ncm91cCcpO1xuXG4gICAgLy8gTW92ZSBDb2wgTGFiZWxzXG4gICAgZDMuc2VsZWN0KHBhcmFtcy5yb290KycgLmNvbF96b29tX2NvbnRhaW5lcicpXG4gICAgICAuc2VsZWN0QWxsKCcuY29sX2xhYmVsX3RleHQnKVxuICAgICAgLmF0dHIoJ3RyYW5zZm9ybScsIGZ1bmN0aW9uKGQpIHtcbiAgICAgICAgdmFyIGluc3RfaW5kZXggPSBfLmluZGV4T2YoY29sX25vZGVzX25hbWVzLCBkLm5hbWUpO1xuICAgICAgICByZXR1cm4gJ3RyYW5zbGF0ZSgnICsgcGFyYW1zLm1hdHJpeC54X3NjYWxlKGluc3RfaW5kZXgpICsgJylyb3RhdGUoLTkwKSc7XG4gICAgICB9KTtcblxuICAgIC8vIHJlb3JkZXIgY29sX2NsYXNzIGdyb3Vwc1xuICAgIGQzLnNlbGVjdEFsbChwYXJhbXMucm9vdCsnIC5jb2xfdml6X2dyb3VwJylcbiAgICAgIC5hdHRyKCd0cmFuc2Zvcm0nLCBmdW5jdGlvbihkKSB7XG4gICAgICAgIHZhciBpbnN0X2luZGV4ID0gXy5pbmRleE9mKGNvbF9ub2Rlc19uYW1lcywgZC5uYW1lKTtcbiAgICAgICAgcmV0dXJuICd0cmFuc2xhdGUoJyArIHBhcmFtcy5tYXRyaXgueF9zY2FsZShpbnN0X2luZGV4KSArICcsMCknO1xuICAgICAgfSk7XG5cbiAgfSBlbHNlIHtcblxuICAgIC8vIGRlZmluZSB0aGUgdCB2YXJpYWJsZSBhcyB0aGUgdHJhbnNpdGlvbiBmdW5jdGlvblxuICAgIHQgPSBkMy5zZWxlY3QocGFyYW1zLnJvb3QgKyAnIC5jbHVzdF9ncm91cCcpLnRyYW5zaXRpb24oKS5kdXJhdGlvbigyNTAwKTtcblxuICAgIC8vIE1vdmUgQ29sIExhYmVsc1xuICAgIGQzLnNlbGVjdChwYXJhbXMucm9vdCsnIC5jb2xfem9vbV9jb250YWluZXInKVxuICAgICAgLnNlbGVjdEFsbCgnLmNvbF9sYWJlbF90ZXh0JylcbiAgICAgIC50cmFuc2l0aW9uKCkuZHVyYXRpb24oMjUwMClcbiAgICAgIC5hdHRyKCd0cmFuc2Zvcm0nLCBmdW5jdGlvbihkKSB7XG4gICAgICAgIHZhciBpbnN0X2luZGV4ID0gXy5pbmRleE9mKGNvbF9ub2Rlc19uYW1lcywgZC5uYW1lKTtcbiAgICAgICAgcmV0dXJuICd0cmFuc2xhdGUoJyArIHBhcmFtcy5tYXRyaXgueF9zY2FsZShpbnN0X2luZGV4KSArICcpcm90YXRlKC05MCknO1xuICAgICAgfSk7XG5cbiAgICAvLyByZW9yZGVyIGNvbF9jbGFzcyBncm91cHNcbiAgICBkMy5zZWxlY3RBbGwocGFyYW1zLnJvb3QrJyAuY29sX3Zpel9ncm91cCcpXG4gICAgICAudHJhbnNpdGlvbigpLmR1cmF0aW9uKDI1MDApXG4gICAgICAuYXR0cigndHJhbnNmb3JtJywgZnVuY3Rpb24oZCkge1xuICAgICAgICB2YXIgaW5zdF9pbmRleCA9IF8uaW5kZXhPZihjb2xfbm9kZXNfbmFtZXMsIGQubmFtZSk7XG4gICAgICAgIHJldHVybiAndHJhbnNsYXRlKCcgKyBwYXJhbXMubWF0cml4Lnhfc2NhbGUoaW5zdF9pbmRleCkgKyAnLDApJztcbiAgICAgIH0pO1xuICAgICAgLy8gLmVhY2goJ2VuZCcsIGZ1bmN0aW9uKCkge1xuICAgICAgLy8gICAvLyBzZXQgcnVubmluZyB0cmFuc2l0aW9uIHRvIDBcbiAgICAgIC8vICAgcGFyYW1zLnZpei5ydW5fdHJhbnMgPSBmYWxzZTtcbiAgICAgIC8vIH0pO1xuICB9XG5cbiAgLy8gcmVvcmRlciBtYXRyaXhcbiAgdC5zZWxlY3RBbGwoJy50aWxlJylcbiAgICAuYXR0cigndHJhbnNmb3JtJywgZnVuY3Rpb24oZCkge1xuICAgICAgcmV0dXJuICd0cmFuc2xhdGUoJyArIHBhcmFtcy5tYXRyaXgueF9zY2FsZShkLnBvc194KSArICcsMCknO1xuICAgIH0pO1xuXG4gIHQuc2VsZWN0QWxsKCcudGlsZV91cCcpXG4gICAgLmF0dHIoJ3RyYW5zZm9ybScsIGZ1bmN0aW9uKGQpIHtcbiAgICAgIHJldHVybiAndHJhbnNsYXRlKCcgKyBwYXJhbXMubWF0cml4Lnhfc2NhbGUoZC5wb3NfeCkgKyAnLDApJztcbiAgICB9KTtcblxuICB0LnNlbGVjdEFsbCgnLnRpbGVfZG4nKVxuICAgIC5hdHRyKCd0cmFuc2Zvcm0nLCBmdW5jdGlvbihkKSB7XG4gICAgICByZXR1cm4gJ3RyYW5zbGF0ZSgnICsgcGFyYW1zLm1hdHJpeC54X3NjYWxlKGQucG9zX3gpICsgJywwKSc7XG4gICAgfSk7XG5cblxuICAvLyBoaWdobGlnaHQgc2VsZWN0ZWQgY29sdW1uXG4gIC8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cbiAgLy8gdW5oaWxpZ2h0IGFuZCB1bmJvbGQgYWxsIGNvbHVtbnMgKGFscmVhZHkgdW5ib2xkZWQgZWFybGllcilcbiAgZDMuc2VsZWN0QWxsKHBhcmFtcy5yb290KycgLnJvd19sYWJlbF90ZXh0JylcbiAgICAuc2VsZWN0KCdyZWN0JylcbiAgICAuc3R5bGUoJ29wYWNpdHknLCAwKTtcbiAgLy8gaGlnaGxpZ2h0IGNvbHVtbiBuYW1lXG4gIGQzLnNlbGVjdChyb3dfc2VsZWN0aW9uKVxuICAgIC5zZWxlY3QoJ3JlY3QnKVxuICAgIC5zdHlsZSgnb3BhY2l0eScsIDEpO1xuXG4gIHJlcG9zaXRpb25fdGlsZV9oaWdobGlnaHQocGFyYW1zKTtcblxuICAvLyByZWRlZmluZSB4IGFuZCB5IHBvc2l0aW9uc1xuICBwYXJhbXMubmV0d29ya19kYXRhLmxpbmtzLmZvckVhY2goZnVuY3Rpb24oZCl7XG4gICAgZC54ID0gcGFyYW1zLm1hdHJpeC54X3NjYWxlKGQudGFyZ2V0KTtcbiAgICBkLnkgPSBwYXJhbXMubWF0cml4Lnlfc2NhbGUoZC5zb3VyY2UpO1xuICB9KTtcblxuICBzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7XG4gICAgcGFyYW1zLnZpei5ydW5fdHJhbnMgPSBmYWxzZTtcbiAgfSwgMjUwMCk7XG5cbn07XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiBzcmMvcmVvcmRlci9yb3dfcmVvcmRlci5qc1xuICoqLyJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBWkE7QUFlQTtBQUNBO0FBREE7QUFDQTs7QUFoQkE7QUFDQTs7QUFEQTtBQXdCQTtBQUNBO0FBREE7QUFDQTs7QUF6QkE7QUE4QkE7QUFEQTtBQUNBOztBQTlCQTtBQUNBO0FBbUNBO0FBQ0E7OztBQXJDQTtBQUNBOztBQTBDQTtBQUNBOztBQUpBO0FBU0E7QUFDQTtBQUZBO0FBQ0E7O0FBVEE7QUFnQkE7QUFDQTtBQUZBO0FBZkE7QUFDQTs7QUFzQkE7QUFDQTs7QUFKQTtBQVVBO0FBQ0E7QUFGQTtBQUNBOztBQVZBO0FBa0JBO0FBQ0E7QUFGQTs7Ozs7QUFqQkE7QUFDQTs7QUE3REE7QUEwRkE7QUFEQTtBQUNBO0FBR0E7QUFFQTtBQURBO0FBQ0E7QUFHQTtBQUVBO0FBREE7QUFDQTs7OztBQXBHQTs7QUFBQTtBQUNBO0FBa0hBO0FBQ0E7O0FBcEhBO0FBdUhBO0FBQ0E7QUFGQTtBQUNBO0FBSUE7QUFDQTtBQURBO0FBM0hBIiwic291cmNlUm9vdCI6IiJ9");

/***/ },
/* 22 */,
/* 23 */
/***/ function(module, exports) {

	eval("module.exports = function (params) {\n\n  // resize click hlight\n  var rel_width_hlight = 6;\n  // var opacity_hlight = 0.85;\n\n  var hlight_width = rel_width_hlight * params.viz.border_width;\n  var hlight_height = rel_width_hlight * params.viz.border_width / params.viz.zoom_switch;\n  // reposition tile highlight\n  ////////////////////////////////\n\n  // top highlight\n  d3.select(params.root + ' .top_hlight').attr('width', params.matrix.x_scale.rangeBand()).attr('height', hlight_height).transition().duration(2500).attr('transform', function () {\n    return 'translate(' + params.matrix.x_scale(params.matrix.click_hlight_x) + ',0)';\n  });\n\n  // left highlight\n  d3.select(params.root + ' .left_hlight').attr('width', hlight_width).attr('height', params.matrix.y_scale.rangeBand() - hlight_height * 0.99).transition().duration(2500).attr('transform', function () {\n    return 'translate(' + params.matrix.x_scale(params.matrix.click_hlight_x) + ',' + hlight_height * 0.99 + ')';\n  });\n\n  // right highlight\n  d3.select(params.root + ' .right_hlight').attr('width', hlight_width).attr('height', params.matrix.y_scale.rangeBand() - hlight_height * 0.99).transition().duration(2500).attr('transform', function () {\n    var tmp_translate = params.matrix.x_scale(params.matrix.click_hlight_x) + params.matrix.x_scale.rangeBand() - hlight_width;\n    return 'translate(' + tmp_translate + ',' + hlight_height * 0.99 + ')';\n  });\n\n  // bottom highlight\n  d3.select(params.root + ' .bottom_hlight').attr('width', function () {\n    return params.matrix.x_scale.rangeBand() - 1.98 * hlight_width;\n  }).attr('height', hlight_height).transition().duration(2500).attr('transform', function () {\n    var tmp_translate_x = params.matrix.x_scale(params.matrix.click_hlight_x) + hlight_width * 0.99;\n    var tmp_translate_y = params.matrix.y_scale.rangeBand() - hlight_height;\n    return 'translate(' + tmp_translate_x + ',' + tmp_translate_y + ')';\n  });\n};//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vc3JjL3Jlb3JkZXIvcmVwb3NpdGlvbl90aWxlX2hpZ2hsaWdodC5qcz85ZjA2Il0sInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24ocGFyYW1zKSB7XG5cbiAgLy8gcmVzaXplIGNsaWNrIGhsaWdodFxuICB2YXIgcmVsX3dpZHRoX2hsaWdodCA9IDY7XG4gIC8vIHZhciBvcGFjaXR5X2hsaWdodCA9IDAuODU7XG5cbiAgdmFyIGhsaWdodF93aWR0aCA9IHJlbF93aWR0aF9obGlnaHQqcGFyYW1zLnZpei5ib3JkZXJfd2lkdGg7XG4gIHZhciBobGlnaHRfaGVpZ2h0ID0gcmVsX3dpZHRoX2hsaWdodCpwYXJhbXMudml6LmJvcmRlcl93aWR0aC9wYXJhbXMudml6Lnpvb21fc3dpdGNoO1xuICAvLyByZXBvc2l0aW9uIHRpbGUgaGlnaGxpZ2h0XG4gIC8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vXG5cbiAgLy8gdG9wIGhpZ2hsaWdodFxuICBkMy5zZWxlY3QocGFyYW1zLnJvb3QrJyAudG9wX2hsaWdodCcpXG4gICAgLmF0dHIoJ3dpZHRoJywgcGFyYW1zLm1hdHJpeC54X3NjYWxlLnJhbmdlQmFuZCgpKVxuICAgIC5hdHRyKCdoZWlnaHQnLCBobGlnaHRfaGVpZ2h0KVxuICAgIC50cmFuc2l0aW9uKCkuZHVyYXRpb24oMjUwMClcbiAgICAuYXR0cigndHJhbnNmb3JtJywgZnVuY3Rpb24oKSB7XG4gICAgICByZXR1cm4gJ3RyYW5zbGF0ZSgnICsgcGFyYW1zLm1hdHJpeC54X3NjYWxlKHBhcmFtcy5tYXRyaXguY2xpY2tfaGxpZ2h0X3gpICsgJywwKSc7XG4gICAgfSk7XG5cbiAgLy8gbGVmdCBoaWdobGlnaHRcbiAgZDMuc2VsZWN0KHBhcmFtcy5yb290KycgLmxlZnRfaGxpZ2h0JylcbiAgICAuYXR0cignd2lkdGgnLCBobGlnaHRfd2lkdGgpXG4gICAgLmF0dHIoJ2hlaWdodCcsIHBhcmFtcy5tYXRyaXgueV9zY2FsZS5yYW5nZUJhbmQoKSAtIGhsaWdodF9oZWlnaHQqMC45OSApXG4gICAgLnRyYW5zaXRpb24oKS5kdXJhdGlvbigyNTAwKVxuICAgIC5hdHRyKCd0cmFuc2Zvcm0nLCBmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiAndHJhbnNsYXRlKCcgKyBwYXJhbXMubWF0cml4Lnhfc2NhbGUocGFyYW1zLm1hdHJpeC5jbGlja19obGlnaHRfeCkgKyAnLCcrXG4gICAgICAgIGhsaWdodF9oZWlnaHQqMC45OSsnKSc7XG4gICAgfSk7XG5cbiAgLy8gcmlnaHQgaGlnaGxpZ2h0XG4gIGQzLnNlbGVjdChwYXJhbXMucm9vdCsnIC5yaWdodF9obGlnaHQnKVxuICAgIC5hdHRyKCd3aWR0aCcsIGhsaWdodF93aWR0aClcbiAgICAuYXR0cignaGVpZ2h0JywgcGFyYW1zLm1hdHJpeC55X3NjYWxlLnJhbmdlQmFuZCgpIC0gaGxpZ2h0X2hlaWdodCowLjk5IClcbiAgICAudHJhbnNpdGlvbigpLmR1cmF0aW9uKDI1MDApXG4gICAgLmF0dHIoJ3RyYW5zZm9ybScsIGZ1bmN0aW9uKCkge1xuICAgICAgdmFyIHRtcF90cmFuc2xhdGUgPSBwYXJhbXMubWF0cml4Lnhfc2NhbGUocGFyYW1zLm1hdHJpeC5jbGlja19obGlnaHRfeCkgKyBwYXJhbXMubWF0cml4Lnhfc2NhbGUucmFuZ2VCYW5kKCkgLSBobGlnaHRfd2lkdGg7XG4gICAgICByZXR1cm4gJ3RyYW5zbGF0ZSgnICsgdG1wX3RyYW5zbGF0ZSArICcsJytcbiAgICAgICAgaGxpZ2h0X2hlaWdodCowLjk5KycpJztcbiAgICB9KTtcblxuICAvLyBib3R0b20gaGlnaGxpZ2h0XG4gIGQzLnNlbGVjdChwYXJhbXMucm9vdCsnIC5ib3R0b21faGxpZ2h0JylcbiAgICAuYXR0cignd2lkdGgnLCBmdW5jdGlvbigpe1xuICAgICAgcmV0dXJuIHBhcmFtcy5tYXRyaXgueF9zY2FsZS5yYW5nZUJhbmQoKSAtIDEuOTgqaGxpZ2h0X3dpZHRoO30pXG4gICAgLmF0dHIoJ2hlaWdodCcsIGhsaWdodF9oZWlnaHQpXG4gICAgLnRyYW5zaXRpb24oKS5kdXJhdGlvbigyNTAwKVxuICAgIC5hdHRyKCd0cmFuc2Zvcm0nLCBmdW5jdGlvbigpIHtcbiAgICAgIHZhciB0bXBfdHJhbnNsYXRlX3ggPSBwYXJhbXMubWF0cml4Lnhfc2NhbGUocGFyYW1zLm1hdHJpeC5jbGlja19obGlnaHRfeCkgKyBobGlnaHRfd2lkdGgqMC45OTtcbiAgICAgIHZhciB0bXBfdHJhbnNsYXRlX3kgPSBwYXJhbXMubWF0cml4Lnlfc2NhbGUucmFuZ2VCYW5kKCkgLSBobGlnaHRfaGVpZ2h0O1xuICAgICAgcmV0dXJuICd0cmFuc2xhdGUoJyArIHRtcF90cmFuc2xhdGVfeCArICcsJytcbiAgICAgICAgdG1wX3RyYW5zbGF0ZV95KycpJztcbiAgICB9KTtcblxufTtcblxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIHNyYy9yZW9yZGVyL3JlcG9zaXRpb25fdGlsZV9oaWdobGlnaHQuanNcbiAqKi8iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7O0FBRUE7OztBQUhBO0FBT0E7Ozs7O0FBUEE7QUFpQkE7QUFEQTtBQUNBOztBQWpCQTtBQTBCQTtBQURBO0FBQ0E7O0FBMUJBO0FBb0NBO0FBQ0E7QUFGQTtBQUNBOztBQXBDQTtBQTRDQTtBQURBO0FBS0E7QUFDQTtBQUNBO0FBSEE7QUEvQ0EiLCJzb3VyY2VSb290IjoiIn0=");

/***/ },
/* 24 */
/***/ function(module, exports, __webpack_require__) {

	eval("var utils = __webpack_require__(2);\nvar trim_text = __webpack_require__(13);\nvar add_col_click_hlight = __webpack_require__(25);\nvar col_reorder = __webpack_require__(26);\n\nmodule.exports = function (params, text_delay) {\n\n  var container_all_col;\n\n  var col_nodes = params.network_data.col_nodes;\n  var col_nodes_names = params.network_data.col_nodes_names;\n\n  // offset click group column label\n  var x_offset_click = params.matrix.x_scale.rangeBand() / 2 + params.viz.border_width;\n  // reduce width of rotated rects\n  var reduce_rect_width = params.matrix.x_scale.rangeBand() * 0.36;\n\n  // make container to pre-position zoomable elements\n  if (d3.select(params.root + ' .col_container').empty()) {\n\n    container_all_col = d3.select(params.viz.viz_svg).append('g').attr('class', 'col_container').attr('transform', 'translate(' + params.viz.clust.margin.left + ',' + params.norm_label.margin.top + ')');\n\n    // white background rect for col labels\n    container_all_col.append('rect').attr('fill', params.viz.background_color) //!! prog_colors\n    .attr('width', 30 * params.viz.clust.dim.width + 'px').attr('height', params.norm_label.background.col).attr('class', 'white_bars');\n\n    // col labels\n    container_all_col.append('g').attr('class', 'col_label_outer_container')\n    // position the outer col label group\n    .attr('transform', 'translate(0,' + params.norm_label.width.col + ')').append('g').attr('class', 'col_zoom_container');\n  } else {\n\n    container_all_col = d3.select(params.root + ' .col_container').attr('transform', 'translate(' + params.viz.clust.margin.left + ',' + params.norm_label.margin.top + ')');\n\n    // white background rect for col labels\n    container_all_col.select('.white_bars').attr('fill', params.viz.background_color) //!! prog_colors\n    .attr('width', 30 * params.viz.clust.dim.width + 'px').attr('height', params.norm_label.background.col);\n\n    // col labels\n    container_all_col.select(params.root + ' .col_label_outer_container');\n  }\n\n  // add main column label group\n  var col_label_obj = d3.select(params.root + ' .col_zoom_container').selectAll('.col_label_text').data(col_nodes, function (d) {\n    return d.name;\n  }).enter().append('g').attr('class', 'col_label_text').attr('transform', function (d) {\n    var inst_index = _.indexOf(col_nodes_names, d.name);\n    return 'translate(' + params.matrix.x_scale(inst_index) + ') rotate(-90)';\n  });\n\n  // append group for individual column label\n  var col_label_click = col_label_obj\n  // append new group for rect and label (not white lines)\n  .append('g').attr('class', 'col_label_click')\n  // rotate column labels\n  .attr('transform', 'translate(' + params.matrix.x_scale.rangeBand() / 2 + ',' + x_offset_click + ') rotate(45)').on('mouseover', function () {\n    d3.select(this).select('text').classed('active', true);\n  }).on('mouseout', function () {\n    d3.select(this).select('text').classed('active', false);\n  });\n\n  // append column value bars\n  if (utils.has(params.network_data.col_nodes[0], 'value')) {\n\n    // d3.selectAll(params.root+' col_bars').remove();\n\n    col_label_click.append('rect').attr('class', 'col_bars').attr('width', function (d) {\n      var inst_value = 0;\n      if (d.value > 0) {\n        inst_value = params.labels.bar_scale_col(d.value);\n      }\n      return inst_value;\n    })\n    // rotate labels - reduce width if rotating\n    .attr('height', params.matrix.x_scale.rangeBand() * 0.66).style('fill', function (d) {\n      return d.value > 0 ? params.matrix.bar_colors[0] : params.matrix.bar_colors[1];\n    }).attr('opacity', 0.4);\n  }\n\n  // add column label\n  col_label_click.append('text').attr('x', 0)\n  // manually tuned\n  .attr('y', params.matrix.x_scale.rangeBand() * 0.64).attr('dx', params.viz.border_width).attr('text-anchor', 'start').attr('full_name', function (d) {\n    return d.name;\n  })\n  // original font size\n  .style('font-size', params.labels.default_fs_col + 'px').text(function (d) {\n    return utils.normal_name(d, params.labels.max_label_char);\n  })\n  // .attr('pointer-events','none')\n  .style('opacity', 0).transition().delay(text_delay).duration(text_delay).style('opacity', 1);\n\n  if (params.labels.show_label_tooltips) {\n\n    // d3-tooltip\n    var tip = d3.tip().attr('class', 'd3-tip').direction('s').offset([20, 0]).html(function (d) {\n      var inst_name = d.name.replace(/_/g, ' ').split('#')[0];\n\n      if (params.show_categories) {\n        inst_name = inst_name + ': ' + String(d.cl);\n      }\n\n      return \"<span>\" + inst_name + \"</span>\";\n    });\n\n    d3.select(params.viz.viz_wrapper).select('svg').select(params.root + ' .col_container').call(tip);\n\n    col_label_obj\n    // .select('text')\n    .on('mouseover', tip.show).on('mouseout', tip.hide);\n  }\n\n  // bounding font size\n  /////////////////////////////\n\n  params.bounding_width_max.col = 0;\n  d3.selectAll(params.root + ' .col_label_click').each(function () {\n    var tmp_width = d3.select(this).select('text').node().getBBox().width;\n    if (tmp_width > params.bounding_width_max.col) {\n      // increase the apparent width of the column label since its rotated\n      // this will give more room for text\n      params.bounding_width_max.col = tmp_width;\n    }\n  });\n\n  // check if widest row or col are wider than the allowed label width\n  ////////////////////////////////////////////////////////////////////////\n  params.ini_scale_font = {};\n  params.ini_scale_font.row = 1;\n  params.ini_scale_font.col = 1;\n\n  if (params.bounding_width_max.row > params.norm_label.width.row) {\n\n    // calc reduction in font size\n    params.ini_scale_font.row = params.norm_label.width.row / params.bounding_width_max.row;\n    // redefine bounding_width_max.row\n    params.bounding_width_max.row = params.ini_scale_font.row * params.bounding_width_max.row;\n\n    // redefine default fs !! increase to make more readable\n    params.labels.default_fs_row = params.labels.default_fs_row * params.ini_scale_font.row;\n\n    // reduce font size\n    d3.selectAll(params.root + ' .row_label_text').each(function () {\n      d3.select(this).select('text').style('font-size', params.labels.default_fs_row + 'px');\n    });\n  }\n\n  // debugger;\n\n  if (params.bounding_width_max.col > params.norm_label.width.col) {\n\n    // calc reduction in font size\n    params.ini_scale_font.col = params.norm_label.width.col / params.bounding_width_max.col;\n    // redefine bounding_width_max.col\n    params.bounding_width_max.col = params.ini_scale_font.col * params.bounding_width_max.col;\n    // redefine default fs, !! increase to make more readable\n    params.labels.default_fs_col = params.labels.default_fs_col * params.ini_scale_font.col;\n\n    // reduce font size\n    d3.selectAll(params.root + ' .col_label_click').each(function () {\n      d3.select(this).select('text').style('font-size', params.labels.default_fs_col + 'px');\n    });\n  }\n\n  // constrain text after zooming\n  if (params.labels.row_keep < 1) {\n    d3.selectAll(params.root + ' .row_label_text').each(function () {\n      trim_text(params, this, 'row');\n    });\n  }\n  if (params.labels.col_keep < 1) {\n    d3.selectAll(params.root + ' .col_label_click').each(function () {\n      trim_text(params, this, 'col');\n    });\n  }\n\n  // append rectangle behind text\n  col_label_click.insert('rect').attr('class', '.highlight_rect').attr('x', 0).attr('y', 0).attr('width', 10 * params.matrix.rect_height).attr('height', 0.67 * params.matrix.rect_width).style('opacity', 0);\n\n  // // only run this if there are col categories\n  // if (params.labels.show_categories){\n  //   // change the size of the highlighting rects\n  //   col_label_click\n  //     .each(function(d) {\n  //       var bbox = d3.select(this)\n  //         .select('text')[0][0]\n  //         .getBBox();\n\n  //       d3.select(this)\n  //         .select('rect')\n  //         .attr('width', bbox.width * 1.1)\n  //         .attr('height', 0.67*params.matrix.rect_width)\n  //         .style('fill', function(d){\n  //           var inst_color = 'white';\n  //           inst_color = params.labels.class_colors.col[d.cl];\n  //           return inst_color\n  //         })\n  //         .style('opacity', 0.30);\n  //     });\n  // }\n\n  // add triangle under rotated labels\n  col_label_click.append('path').style('stroke-width', 0).attr('d', function () {\n    // x and y are flipped since its rotated\n    var origin_y = -params.viz.border_width;\n    var start_x = 0;\n    var final_x = params.matrix.x_scale.rangeBand() - reduce_rect_width;\n    var start_y = -(params.matrix.x_scale.rangeBand() - reduce_rect_width + params.viz.border_width);\n    var final_y = -params.viz.border_width;\n    var output_string = 'M ' + origin_y + ',0 L ' + start_y + ',' + start_x + ', L ' + final_y + ',' + final_x + ' Z';\n    return output_string;\n  }).attr('fill', function (d) {\n    var inst_color = '#eee';\n    if (params.labels.show_categories) {\n      inst_color = params.labels.class_colors.col[d.cl];\n    }\n    return inst_color;\n  }).style('opacity', 0).transition().delay(text_delay).duration(text_delay).style('opacity', 1);\n\n  // add col callback function\n  d3.selectAll(params.root + ' .col_label_text').on('click', function (d) {\n\n    if (typeof params.click_label == 'function') {\n      params.click_label(d.name, 'col');\n      add_col_click_hlight(params, this, d.ini);\n    } else {\n\n      if (params.tile_click_hlight) {\n        add_col_click_hlight(params, this, d.ini);\n      }\n    }\n  }).on('dblclick', function (d) {\n    col_reorder(params, this);\n    if (params.tile_click_hlight) {\n      add_col_click_hlight(params, this, d.ini);\n    }\n  });\n\n  return container_all_col;\n};//@ sourceMappingURL=data:application/json;base64,");

/***/ },
/* 25 */
/***/ function(module, exports) {

	eval("module.exports = function (params, clicked_col, id_clicked_col) {\n\n  if (id_clicked_col != params.click_hlight_col) {\n\n    params.click_hlight_col = id_clicked_col;\n\n    var rel_width_hlight = 6;\n    var opacity_hlight = 0.85;\n    var hlight_width = rel_width_hlight * params.viz.border_width;\n    // var hlight_height = rel_width_hlight*params.viz.border_width/params.viz.zoom_switch;\n\n    d3.selectAll(params.root + ' .click_hlight').remove();\n\n    // // highlight selected column\n    // ///////////////////////////////\n    // // unhilight and unbold all columns (already unbolded earlier)\n    // d3.selectAll('.col_label_text')\n    //   .select('rect')\n    //   .style('opacity', 0);\n    // // highlight column name\n    // d3.select(clicked_col)\n    //   .select('rect')\n    //   .style('opacity', 1);\n\n    d3.select(clicked_col).append('rect').classed('click_hlight', true).classed('col_top_hlight', true).attr('width', params.viz.clust.dim.height).attr('height', hlight_width).attr('fill', params.matrix.hlight_color).attr('opacity', opacity_hlight).attr('transform', function () {\n      var tmp_translate_y = 0;\n      var tmp_translate_x = -(params.viz.clust.dim.height + params.class_room.col + params.viz.uni_margin);\n      return 'translate(' + tmp_translate_x + ',' + tmp_translate_y + ')';\n    });\n\n    d3.select(clicked_col).append('rect').classed('click_hlight', true).classed('col_bottom_hlight', true).attr('width', params.viz.clust.dim.height).attr('height', hlight_width).attr('fill', params.matrix.hlight_color).attr('opacity', opacity_hlight).attr('transform', function () {\n      // reverse x and y since rotated\n      var tmp_translate_y = params.matrix.x_scale.rangeBand() - hlight_width;\n      var tmp_translate_x = -(params.viz.clust.dim.height + params.class_room.col + params.viz.uni_margin);\n      return 'translate(' + tmp_translate_x + ',' + tmp_translate_y + ')';\n    });\n  } else {\n    d3.selectAll(params.root + ' .click_hlight').remove();\n    params.click_hlight_col = -666;\n  }\n};//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjUuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vc3JjL2xhYmVscy9hZGRfY29sX2NsaWNrX2hsaWdodC5qcz83MGFiIl0sInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24ocGFyYW1zLCBjbGlja2VkX2NvbCwgaWRfY2xpY2tlZF9jb2wpIHtcblxuICBpZiAoaWRfY2xpY2tlZF9jb2wgIT0gcGFyYW1zLmNsaWNrX2hsaWdodF9jb2wpe1xuXG4gICAgcGFyYW1zLmNsaWNrX2hsaWdodF9jb2wgPSBpZF9jbGlja2VkX2NvbDtcblxuICAgIHZhciByZWxfd2lkdGhfaGxpZ2h0ID0gNjtcbiAgICB2YXIgb3BhY2l0eV9obGlnaHQgPSAwLjg1O1xuICAgIHZhciBobGlnaHRfd2lkdGggID0gcmVsX3dpZHRoX2hsaWdodCpwYXJhbXMudml6LmJvcmRlcl93aWR0aDtcbiAgICAvLyB2YXIgaGxpZ2h0X2hlaWdodCA9IHJlbF93aWR0aF9obGlnaHQqcGFyYW1zLnZpei5ib3JkZXJfd2lkdGgvcGFyYW1zLnZpei56b29tX3N3aXRjaDtcblxuICAgIGQzLnNlbGVjdEFsbChwYXJhbXMucm9vdCsnIC5jbGlja19obGlnaHQnKVxuICAgICAgLnJlbW92ZSgpO1xuXG4gICAgLy8gLy8gaGlnaGxpZ2h0IHNlbGVjdGVkIGNvbHVtblxuICAgIC8vIC8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cbiAgICAvLyAvLyB1bmhpbGlnaHQgYW5kIHVuYm9sZCBhbGwgY29sdW1ucyAoYWxyZWFkeSB1bmJvbGRlZCBlYXJsaWVyKVxuICAgIC8vIGQzLnNlbGVjdEFsbCgnLmNvbF9sYWJlbF90ZXh0JylcbiAgICAvLyAgIC5zZWxlY3QoJ3JlY3QnKVxuICAgIC8vICAgLnN0eWxlKCdvcGFjaXR5JywgMCk7XG4gICAgLy8gLy8gaGlnaGxpZ2h0IGNvbHVtbiBuYW1lXG4gICAgLy8gZDMuc2VsZWN0KGNsaWNrZWRfY29sKVxuICAgIC8vICAgLnNlbGVjdCgncmVjdCcpXG4gICAgLy8gICAuc3R5bGUoJ29wYWNpdHknLCAxKTtcblxuICAgIGQzLnNlbGVjdChjbGlja2VkX2NvbClcbiAgICAgIC5hcHBlbmQoJ3JlY3QnKVxuICAgICAgLmNsYXNzZWQoJ2NsaWNrX2hsaWdodCcsdHJ1ZSlcbiAgICAgIC5jbGFzc2VkKCdjb2xfdG9wX2hsaWdodCcsdHJ1ZSlcbiAgICAgIC5hdHRyKCd3aWR0aCcscGFyYW1zLnZpei5jbHVzdC5kaW0uaGVpZ2h0KVxuICAgICAgLmF0dHIoJ2hlaWdodCcsaGxpZ2h0X3dpZHRoKVxuICAgICAgLmF0dHIoJ2ZpbGwnLHBhcmFtcy5tYXRyaXguaGxpZ2h0X2NvbG9yKVxuICAgICAgLmF0dHIoJ29wYWNpdHknLG9wYWNpdHlfaGxpZ2h0KVxuICAgICAgLmF0dHIoJ3RyYW5zZm9ybScsZnVuY3Rpb24oKXtcbiAgICAgICAgdmFyIHRtcF90cmFuc2xhdGVfeSA9IDA7XG4gICAgICAgIHZhciB0bXBfdHJhbnNsYXRlX3ggPSAtKHBhcmFtcy52aXouY2x1c3QuZGltLmhlaWdodCtcbiAgICAgICAgICBwYXJhbXMuY2xhc3Nfcm9vbS5jb2wrcGFyYW1zLnZpei51bmlfbWFyZ2luKTtcbiAgICAgICAgcmV0dXJuICd0cmFuc2xhdGUoJyt0bXBfdHJhbnNsYXRlX3grJywnK3RtcF90cmFuc2xhdGVfeSsnKSc7XG4gICAgICB9KTtcblxuICAgIGQzLnNlbGVjdChjbGlja2VkX2NvbClcbiAgICAgIC5hcHBlbmQoJ3JlY3QnKVxuICAgICAgLmNsYXNzZWQoJ2NsaWNrX2hsaWdodCcsdHJ1ZSlcbiAgICAgIC5jbGFzc2VkKCdjb2xfYm90dG9tX2hsaWdodCcsdHJ1ZSlcbiAgICAgIC5hdHRyKCd3aWR0aCcscGFyYW1zLnZpei5jbHVzdC5kaW0uaGVpZ2h0KVxuICAgICAgLmF0dHIoJ2hlaWdodCcsaGxpZ2h0X3dpZHRoKVxuICAgICAgLmF0dHIoJ2ZpbGwnLHBhcmFtcy5tYXRyaXguaGxpZ2h0X2NvbG9yKVxuICAgICAgLmF0dHIoJ29wYWNpdHknLG9wYWNpdHlfaGxpZ2h0KVxuICAgICAgLmF0dHIoJ3RyYW5zZm9ybScsIGZ1bmN0aW9uKCl7XG4gICAgICAgIC8vIHJldmVyc2UgeCBhbmQgeSBzaW5jZSByb3RhdGVkXG4gICAgICAgIHZhciB0bXBfdHJhbnNsYXRlX3kgPSBwYXJhbXMubWF0cml4Lnhfc2NhbGUucmFuZ2VCYW5kKCkgLSBobGlnaHRfd2lkdGg7XG4gICAgICAgIHZhciB0bXBfdHJhbnNsYXRlX3ggPSAtKHBhcmFtcy52aXouY2x1c3QuZGltLmhlaWdodCArXG4gICAgICAgICAgcGFyYW1zLmNsYXNzX3Jvb20uY29sK3BhcmFtcy52aXoudW5pX21hcmdpbik7XG4gICAgICAgIHJldHVybiAndHJhbnNsYXRlKCcrdG1wX3RyYW5zbGF0ZV94KycsJyt0bXBfdHJhbnNsYXRlX3krJyknO1xuICAgICAgfSk7XG4gIH0gZWxzZSB7XG4gICAgZDMuc2VsZWN0QWxsKHBhcmFtcy5yb290KycgLmNsaWNrX2hsaWdodCcpXG4gICAgICAucmVtb3ZlKCk7XG4gICAgcGFyYW1zLmNsaWNrX2hsaWdodF9jb2wgPSAtNjY2O1xuICB9XG5cbn07XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiBzcmMvbGFiZWxzL2FkZF9jb2xfY2xpY2tfaGxpZ2h0LmpzXG4gKiovIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQU5BO0FBQ0E7Ozs7Ozs7Ozs7OztBQURBO0FBZ0NBO0FBQ0E7QUFFQTtBQUpBO0FBQ0E7QUFNQTs7QUFVQTtBQUNBO0FBRUE7QUFMQTtBQTlDQTtBQXNEQTtBQUVBO0FBeERBO0FBRkEiLCJzb3VyY2VSb290IjoiIn0=");

/***/ },
/* 26 */
/***/ function(module, exports, __webpack_require__) {

	eval("var reposition_tile_highlight = __webpack_require__(23);\n\nmodule.exports = function (params, col_selection) {\n\n  params.viz.run_trans = true;\n\n  var mat = params.matrix.matrix;\n  var row_nodes = params.network_data.row_nodes;\n  var col_nodes = params.network_data.col_nodes;\n\n  var row_nodes_names = _.pluck(row_nodes, 'name');\n\n  // get inst col (term)\n  var inst_term = d3.select(col_selection).select('text').attr('full_name');\n\n  // find the column number of col_selection term from col_nodes\n  // gather column node names\n  var tmp_arr = [];\n  col_nodes.forEach(function (node) {\n    tmp_arr.push(node.name);\n  });\n\n  // find index\n  var inst_col = _.indexOf(tmp_arr, inst_term);\n\n  // gather the values of the input genes\n  tmp_arr = [];\n  row_nodes.forEach(function (node, index) {\n    tmp_arr.push(mat[index].row_data[inst_col].value);\n  });\n\n  // sort the cols\n  var tmp_sort = d3.range(tmp_arr.length).sort(function (a, b) {\n    return tmp_arr[b] - tmp_arr[a];\n  });\n\n  // resort cols\n  ////////////////////////////\n  params.matrix.y_scale.domain(tmp_sort);\n\n  var t;\n\n  // reorder\n  if (params.network_data.links.length > params.matrix.def_large_matrix) {\n    t = d3.select(params.root + ' .clust_group');\n\n    // reorder row_label_triangle groups\n    d3.selectAll(params.root + ' .row_viz_group').attr('transform', function (d) {\n      var inst_index = _.indexOf(row_nodes_names, d.name);\n      return 'translate(0,' + params.matrix.y_scale(inst_index) + ')';\n    });\n\n    // Move Row Labels\n    d3.select(params.root + ' .row_label_zoom_container').selectAll('.row_label_text').attr('transform', function (d) {\n      var inst_index = _.indexOf(row_nodes_names, d.name);\n      return 'translate(0,' + params.matrix.y_scale(inst_index) + ')';\n    });\n  } else {\n\n    t = d3.select(params.root + ' .clust_group').transition().duration(2500);\n\n    // reorder row_label_triangle groups\n    d3.selectAll(params.root + ' .row_viz_group').transition().duration(2500).attr('transform', function (d) {\n      var inst_index = _.indexOf(row_nodes_names, d.name);\n      return 'translate(0,' + params.matrix.y_scale(inst_index) + ')';\n    });\n\n    // Move Row Labels\n    d3.select(params.root + ' .row_label_zoom_container').selectAll('.row_label_text').transition().duration(2500).attr('transform', function (d) {\n      var inst_index = _.indexOf(row_nodes_names, d.name);\n      return 'translate(0,' + params.matrix.y_scale(inst_index) + ')';\n    });\n  }\n\n  // reorder matrix rows\n  t.selectAll('.row').attr('transform', function (d) {\n    var inst_index = _.indexOf(row_nodes_names, d.name);\n    return 'translate(0,' + params.matrix.y_scale(inst_index) + ')';\n  });\n\n  // highlight selected column\n  ///////////////////////////////\n  // unhilight and unbold all columns (already unbolded earlier)\n  d3.selectAll(params.root + ' .col_label_text').select('.highlight_rect').style('opacity', 0);\n  // highlight column name\n  d3.select(col_selection).select('.highlight_rect').style('opacity', 1);\n\n  // redefine x and y positions\n  params.network_data.links.forEach(function (d) {\n    d.x = params.matrix.x_scale(d.target);\n    d.y = params.matrix.y_scale(d.source);\n  });\n\n  reposition_tile_highlight(params);\n\n  setTimeout(function () {\n    params.viz.run_trans = false;\n  }, 2500);\n};//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjYuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vc3JjL3Jlb3JkZXIvY29sX3Jlb3JkZXIuanM/NWFlNiJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgcmVwb3NpdGlvbl90aWxlX2hpZ2hsaWdodCA9IHJlcXVpcmUoJy4vcmVwb3NpdGlvbl90aWxlX2hpZ2hsaWdodCcpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKHBhcmFtcywgY29sX3NlbGVjdGlvbikge1xuXG4gIHBhcmFtcy52aXoucnVuX3RyYW5zID0gdHJ1ZTtcblxuICB2YXIgbWF0ICAgICAgID0gcGFyYW1zLm1hdHJpeC5tYXRyaXg7XG4gIHZhciByb3dfbm9kZXMgPSBwYXJhbXMubmV0d29ya19kYXRhLnJvd19ub2RlcztcbiAgdmFyIGNvbF9ub2RlcyA9IHBhcmFtcy5uZXR3b3JrX2RhdGEuY29sX25vZGVzO1xuXG4gIHZhciByb3dfbm9kZXNfbmFtZXMgPSBfLnBsdWNrKHJvd19ub2RlcywgJ25hbWUnKTtcblxuICAvLyBnZXQgaW5zdCBjb2wgKHRlcm0pXG4gIHZhciBpbnN0X3Rlcm0gPSBkMy5zZWxlY3QoY29sX3NlbGVjdGlvbikuc2VsZWN0KCd0ZXh0JykuYXR0cignZnVsbF9uYW1lJyk7XG5cbiAgLy8gZmluZCB0aGUgY29sdW1uIG51bWJlciBvZiBjb2xfc2VsZWN0aW9uIHRlcm0gZnJvbSBjb2xfbm9kZXNcbiAgLy8gZ2F0aGVyIGNvbHVtbiBub2RlIG5hbWVzXG4gIHZhciB0bXBfYXJyID0gW107XG4gIGNvbF9ub2Rlcy5mb3JFYWNoKGZ1bmN0aW9uKG5vZGUpIHtcbiAgICB0bXBfYXJyLnB1c2gobm9kZS5uYW1lKTtcbiAgfSk7XG5cbiAgLy8gZmluZCBpbmRleFxuICB2YXIgaW5zdF9jb2wgPSBfLmluZGV4T2YodG1wX2FyciwgaW5zdF90ZXJtKTtcblxuICAvLyBnYXRoZXIgdGhlIHZhbHVlcyBvZiB0aGUgaW5wdXQgZ2VuZXNcbiAgdG1wX2FyciA9IFtdO1xuICByb3dfbm9kZXMuZm9yRWFjaChmdW5jdGlvbihub2RlLCBpbmRleCkge1xuICAgIHRtcF9hcnIucHVzaCggbWF0W2luZGV4XS5yb3dfZGF0YVtpbnN0X2NvbF0udmFsdWUpO1xuICB9KTtcblxuICAvLyBzb3J0IHRoZSBjb2xzXG4gIHZhciB0bXBfc29ydCA9IGQzLnJhbmdlKHRtcF9hcnIubGVuZ3RoKS5zb3J0KGZ1bmN0aW9uKGEsIGIpIHtcbiAgICByZXR1cm4gdG1wX2FycltiXSAtIHRtcF9hcnJbYV07XG4gIH0pO1xuXG5cbiAgLy8gcmVzb3J0IGNvbHNcbiAgLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xuICBwYXJhbXMubWF0cml4Lnlfc2NhbGUuZG9tYWluKHRtcF9zb3J0KTtcblxuICB2YXIgdDtcblxuICAvLyByZW9yZGVyXG4gIGlmIChwYXJhbXMubmV0d29ya19kYXRhLmxpbmtzLmxlbmd0aCA+IHBhcmFtcy5tYXRyaXguZGVmX2xhcmdlX21hdHJpeCl7XG4gICAgdCA9IGQzLnNlbGVjdChwYXJhbXMucm9vdCsnIC5jbHVzdF9ncm91cCcpO1xuXG4gICAgLy8gcmVvcmRlciByb3dfbGFiZWxfdHJpYW5nbGUgZ3JvdXBzXG4gICAgZDMuc2VsZWN0QWxsKHBhcmFtcy5yb290KycgLnJvd192aXpfZ3JvdXAnKVxuICAgICAgLmF0dHIoJ3RyYW5zZm9ybScsIGZ1bmN0aW9uKGQpIHtcbiAgICAgICAgdmFyIGluc3RfaW5kZXggPSBfLmluZGV4T2Yocm93X25vZGVzX25hbWVzLCBkLm5hbWUpO1xuICAgICAgICByZXR1cm4gJ3RyYW5zbGF0ZSgwLCcgKyBwYXJhbXMubWF0cml4Lnlfc2NhbGUoaW5zdF9pbmRleCkgKyAnKSc7XG4gICAgICB9KTtcblxuICAgIC8vIE1vdmUgUm93IExhYmVsc1xuICAgIGQzLnNlbGVjdChwYXJhbXMucm9vdCsnIC5yb3dfbGFiZWxfem9vbV9jb250YWluZXInKVxuICAgICAgLnNlbGVjdEFsbCgnLnJvd19sYWJlbF90ZXh0JylcbiAgICAgIC5hdHRyKCd0cmFuc2Zvcm0nLCBmdW5jdGlvbihkKSB7XG4gICAgICAgIHZhciBpbnN0X2luZGV4ID0gXy5pbmRleE9mKHJvd19ub2Rlc19uYW1lcywgZC5uYW1lKTtcbiAgICAgICAgcmV0dXJuICd0cmFuc2xhdGUoMCwnICsgcGFyYW1zLm1hdHJpeC55X3NjYWxlKGluc3RfaW5kZXgpICsgJyknO1xuICAgICAgfSk7XG5cbiAgfSBlbHNlIHtcblxuICAgIHQgPSBkMy5zZWxlY3QocGFyYW1zLnJvb3QrJyAuY2x1c3RfZ3JvdXAnKVxuICAgICAgLnRyYW5zaXRpb24oKS5kdXJhdGlvbigyNTAwKTtcblxuICAgIC8vIHJlb3JkZXIgcm93X2xhYmVsX3RyaWFuZ2xlIGdyb3Vwc1xuICAgIGQzLnNlbGVjdEFsbChwYXJhbXMucm9vdCsnIC5yb3dfdml6X2dyb3VwJylcbiAgICAgIC50cmFuc2l0aW9uKCkuZHVyYXRpb24oMjUwMClcbiAgICAgIC5hdHRyKCd0cmFuc2Zvcm0nLCBmdW5jdGlvbihkKSB7XG4gICAgICAgIHZhciBpbnN0X2luZGV4ID0gXy5pbmRleE9mKHJvd19ub2Rlc19uYW1lcywgZC5uYW1lKTtcbiAgICAgICAgcmV0dXJuICd0cmFuc2xhdGUoMCwnICsgcGFyYW1zLm1hdHJpeC55X3NjYWxlKGluc3RfaW5kZXgpICsgJyknO1xuICAgICAgfSk7XG5cbiAgICAvLyBNb3ZlIFJvdyBMYWJlbHNcbiAgICBkMy5zZWxlY3QocGFyYW1zLnJvb3QrJyAucm93X2xhYmVsX3pvb21fY29udGFpbmVyJylcbiAgICAgIC5zZWxlY3RBbGwoJy5yb3dfbGFiZWxfdGV4dCcpXG4gICAgICAudHJhbnNpdGlvbigpLmR1cmF0aW9uKDI1MDApXG4gICAgICAuYXR0cigndHJhbnNmb3JtJywgZnVuY3Rpb24oZCkge1xuICAgICAgICB2YXIgaW5zdF9pbmRleCA9IF8uaW5kZXhPZihyb3dfbm9kZXNfbmFtZXMsIGQubmFtZSk7XG4gICAgICAgIHJldHVybiAndHJhbnNsYXRlKDAsJyArIHBhcmFtcy5tYXRyaXgueV9zY2FsZShpbnN0X2luZGV4KSArICcpJztcbiAgICAgIH0pO1xuICB9XG5cbiAgLy8gcmVvcmRlciBtYXRyaXggcm93c1xuICB0LnNlbGVjdEFsbCgnLnJvdycpXG4gICAgLmF0dHIoJ3RyYW5zZm9ybScsIGZ1bmN0aW9uKGQpIHtcbiAgICAgIHZhciBpbnN0X2luZGV4ID0gXy5pbmRleE9mKHJvd19ub2Rlc19uYW1lcywgZC5uYW1lKTtcbiAgICAgIHJldHVybiAndHJhbnNsYXRlKDAsJyArIHBhcmFtcy5tYXRyaXgueV9zY2FsZShpbnN0X2luZGV4KSArICcpJztcbiAgICB9KTtcblxuXG4gIC8vIGhpZ2hsaWdodCBzZWxlY3RlZCBjb2x1bW5cbiAgLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xuICAvLyB1bmhpbGlnaHQgYW5kIHVuYm9sZCBhbGwgY29sdW1ucyAoYWxyZWFkeSB1bmJvbGRlZCBlYXJsaWVyKVxuICBkMy5zZWxlY3RBbGwocGFyYW1zLnJvb3QrJyAuY29sX2xhYmVsX3RleHQnKVxuICAgIC5zZWxlY3QoJy5oaWdobGlnaHRfcmVjdCcpXG4gICAgLnN0eWxlKCdvcGFjaXR5JywgMCk7XG4gIC8vIGhpZ2hsaWdodCBjb2x1bW4gbmFtZVxuICBkMy5zZWxlY3QoY29sX3NlbGVjdGlvbilcbiAgICAuc2VsZWN0KCcuaGlnaGxpZ2h0X3JlY3QnKVxuICAgIC5zdHlsZSgnb3BhY2l0eScsIDEpO1xuXG4gIC8vIHJlZGVmaW5lIHggYW5kIHkgcG9zaXRpb25zXG4gIHBhcmFtcy5uZXR3b3JrX2RhdGEubGlua3MuZm9yRWFjaChmdW5jdGlvbihkKXtcbiAgICBkLnggPSBwYXJhbXMubWF0cml4Lnhfc2NhbGUoZC50YXJnZXQpO1xuICAgIGQueSA9IHBhcmFtcy5tYXRyaXgueV9zY2FsZShkLnNvdXJjZSk7XG4gIH0pO1xuXG4gIHJlcG9zaXRpb25fdGlsZV9oaWdobGlnaHQocGFyYW1zKTtcblxuICBzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7XG4gICAgcGFyYW1zLnZpei5ydW5fdHJhbnMgPSBmYWxzZTtcbiAgfSwgMjUwMCk7XG5cbn07XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiBzcmMvcmVvcmRlci9jb2xfcmVvcmRlci5qc1xuICoqLyJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQVRBO0FBQ0E7OztBQURBO0FBZ0JBO0FBQ0E7QUFEQTtBQUNBOztBQWpCQTtBQUNBOztBQURBO0FBeUJBO0FBQ0E7QUFEQTtBQUNBOztBQTFCQTtBQStCQTtBQURBO0FBQ0E7OztBQS9CQTtBQUNBO0FBc0NBO0FBQ0E7O0FBeENBO0FBMkNBO0FBQ0E7O0FBRkE7QUFNQTtBQUNBO0FBRkE7QUFDQTs7QUFOQTtBQWNBO0FBQ0E7QUFGQTtBQWJBO0FBQ0E7QUFtQkE7QUFDQTs7QUFIQTtBQVNBO0FBQ0E7QUFGQTtBQUNBOztBQVRBO0FBa0JBO0FBQ0E7QUFGQTtBQW5DQTtBQUNBOztBQTNDQTtBQXNGQTtBQUNBO0FBRkE7QUFDQTs7OztBQXRGQTs7QUFBQTtBQUNBOztBQURBO0FBd0dBO0FBQ0E7QUFGQTtBQUNBO0FBSUE7QUFDQTtBQUNBO0FBQ0E7QUFEQTtBQTlHQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ },
/* 27 */
/***/ function(module, exports) {

	eval("module.exports = function (params) {\n\n  // super col title\n  /////////////////////////////////////\n  // add super column title background\n  d3.select(params.viz.viz_svg).append('rect').attr('fill', params.viz.background_color).attr('height', params.labels.super_label_width + 'px').attr('width', '3000px').classed('super_col_bkg', true).classed('white_bars', true).attr('transform', 'translate(0,' + params.viz.grey_border_width + ')');\n\n  // super col title\n  d3.select(params.viz.viz_svg).append('text').attr('class', 'super_col').text(params.labels.super.col).attr('text-anchor', 'center').attr('transform', function () {\n\n    var inst_text_width = d3.select(this)[0][0].getBBox().width;\n\n    var inst_x = params.viz.clust.dim.width / 2 + params.norm_label.width.row - inst_text_width / 2;\n    var inst_y = params.labels.super_label_width - params.viz.uni_margin;\n    return 'translate(' + inst_x + ',' + inst_y + ')';\n  }).style('font-size', function () {\n    var inst_font_size = 14 * params.labels.super_label_scale;\n    return inst_font_size + 'px';\n  }).style('font-weight', 300);\n\n  // super row title\n  /////////////////////////////////////\n  d3.select(params.viz.viz_svg).append('rect').attr('fill', params.viz.background_color).attr('width', params.labels.super_label_width + 'px').attr('height', '3000px').classed('super_row_bkg', true).classed('white_bars', true).attr('transform', 'translate(' + params.viz.grey_border_width + ',0)');\n\n  // append super title row group\n  // this is used to separate translation from rotation\n  d3.select(params.viz.viz_svg).append('g').classed('super_row', true).attr('transform', function () {\n    // position in the middle of the clustergram\n    var inst_x = params.labels.super_label_width - params.viz.uni_margin;\n    var inst_y = params.viz.clust.dim.height / 2 + params.norm_label.width.col;\n    return 'translate(' + inst_x + ',' + inst_y + ')';\n  });\n\n  // super row label (rotate the already translated title )\n  d3.select(params.root + ' .super_row').append('text').text(params.labels.super.row).attr('text-anchor', 'center').attr('transform', function () {\n    var inst_text_width = d3.select(this)[0][0].getBBox().width;\n    var inst_x_offset = inst_text_width / 2 + params.norm_label.width.col;\n    var inst_offset = 'translate(0,' + inst_x_offset + '), rotate(-90)';\n    return inst_offset;\n  }).style('font-size', function () {\n    var inst_font_size = 14 * params.labels.super_label_scale;\n    return inst_font_size + 'px';\n  }).style('font-weight', 300);\n};//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjcuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vc3JjL2xhYmVscy9zdXBlcl9sYWJlbHMuanM/YjgxNyJdLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKHBhcmFtcykge1xuXG4gIC8vIHN1cGVyIGNvbCB0aXRsZVxuICAvLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vXG4gIC8vIGFkZCBzdXBlciBjb2x1bW4gdGl0bGUgYmFja2dyb3VuZFxuICBkMy5zZWxlY3QocGFyYW1zLnZpei52aXpfc3ZnKVxuICAgIC5hcHBlbmQoJ3JlY3QnKVxuICAgIC5hdHRyKCdmaWxsJywgcGFyYW1zLnZpei5iYWNrZ3JvdW5kX2NvbG9yKVxuICAgIC5hdHRyKCdoZWlnaHQnLCBwYXJhbXMubGFiZWxzLnN1cGVyX2xhYmVsX3dpZHRoICsgJ3B4JylcbiAgICAuYXR0cignd2lkdGgnLCAnMzAwMHB4JylcbiAgICAuY2xhc3NlZCgnc3VwZXJfY29sX2JrZycsdHJ1ZSlcbiAgICAuY2xhc3NlZCgnd2hpdGVfYmFycycsdHJ1ZSlcbiAgICAuYXR0cigndHJhbnNmb3JtJywgJ3RyYW5zbGF0ZSgwLCcgKyBwYXJhbXMudml6LmdyZXlfYm9yZGVyX3dpZHRoICsgJyknKTtcblxuICAvLyBzdXBlciBjb2wgdGl0bGVcbiAgZDMuc2VsZWN0KHBhcmFtcy52aXoudml6X3N2ZylcbiAgICAuYXBwZW5kKCd0ZXh0JylcbiAgICAuYXR0cignY2xhc3MnLCAnc3VwZXJfY29sJylcbiAgICAudGV4dChwYXJhbXMubGFiZWxzLnN1cGVyLmNvbClcbiAgICAuYXR0cigndGV4dC1hbmNob3InLCAnY2VudGVyJylcbiAgICAuYXR0cigndHJhbnNmb3JtJywgZnVuY3Rpb24gKCkge1xuXG4gICAgICB2YXIgaW5zdF90ZXh0X3dpZHRoID0gZDMuc2VsZWN0KHRoaXMpWzBdWzBdXG4gICAgICAgIC5nZXRCQm94KCkud2lkdGg7XG5cbiAgICAgIHZhciBpbnN0X3ggPSBwYXJhbXMudml6LmNsdXN0LmRpbS53aWR0aCAvIDIgKyBwYXJhbXMubm9ybV9sYWJlbC53aWR0aFxuICAgICAgICAgIC5yb3cgLSBpbnN0X3RleHRfd2lkdGggLyAyO1xuICAgICAgdmFyIGluc3RfeSA9IHBhcmFtcy5sYWJlbHMuc3VwZXJfbGFiZWxfd2lkdGggLSBwYXJhbXMudml6LnVuaV9tYXJnaW47XG4gICAgICByZXR1cm4gJ3RyYW5zbGF0ZSgnICsgaW5zdF94ICsgJywnICsgaW5zdF95ICsgJyknO1xuICAgIH0pXG4gICAgLnN0eWxlKCdmb250LXNpemUnLCBmdW5jdGlvbiAoKSB7XG4gICAgICB2YXIgaW5zdF9mb250X3NpemUgPSAxNCAqIHBhcmFtcy5sYWJlbHMuc3VwZXJfbGFiZWxfc2NhbGU7XG4gICAgICByZXR1cm4gaW5zdF9mb250X3NpemUgKyAncHgnO1xuICAgIH0pXG4gICAgLnN0eWxlKCdmb250LXdlaWdodCcsIDMwMCk7XG5cbiAgLy8gc3VwZXIgcm93IHRpdGxlXG4gIC8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cbiAgZDMuc2VsZWN0KHBhcmFtcy52aXoudml6X3N2ZylcbiAgICAuYXBwZW5kKCdyZWN0JylcbiAgICAuYXR0cignZmlsbCcsIHBhcmFtcy52aXouYmFja2dyb3VuZF9jb2xvcilcbiAgICAuYXR0cignd2lkdGgnLCBwYXJhbXMubGFiZWxzLnN1cGVyX2xhYmVsX3dpZHRoICsgJ3B4JylcbiAgICAuYXR0cignaGVpZ2h0JywgJzMwMDBweCcpXG4gICAgLmNsYXNzZWQoJ3N1cGVyX3Jvd19ia2cnLHRydWUpXG4gICAgLmNsYXNzZWQoJ3doaXRlX2JhcnMnLHRydWUpXG4gICAgLmF0dHIoJ3RyYW5zZm9ybScsICd0cmFuc2xhdGUoJyArIHBhcmFtcy52aXouZ3JleV9ib3JkZXJfd2lkdGggKyAnLDApJyk7XG5cbiAgLy8gYXBwZW5kIHN1cGVyIHRpdGxlIHJvdyBncm91cFxuICAvLyB0aGlzIGlzIHVzZWQgdG8gc2VwYXJhdGUgdHJhbnNsYXRpb24gZnJvbSByb3RhdGlvblxuICBkMy5zZWxlY3QocGFyYW1zLnZpei52aXpfc3ZnKVxuICAgIC5hcHBlbmQoJ2cnKVxuICAgIC5jbGFzc2VkKCdzdXBlcl9yb3cnLHRydWUpXG4gICAgLmF0dHIoJ3RyYW5zZm9ybScsIGZ1bmN0aW9uICgpIHtcbiAgICAgIC8vIHBvc2l0aW9uIGluIHRoZSBtaWRkbGUgb2YgdGhlIGNsdXN0ZXJncmFtXG4gICAgICB2YXIgaW5zdF94ID0gcGFyYW1zLmxhYmVscy5zdXBlcl9sYWJlbF93aWR0aCAtIHBhcmFtcy52aXoudW5pX21hcmdpbjtcbiAgICAgIHZhciBpbnN0X3kgPSBwYXJhbXMudml6LmNsdXN0LmRpbS5oZWlnaHQgLyAyICsgcGFyYW1zLm5vcm1fbGFiZWwud2lkdGhcbiAgICAgICAgICAuY29sO1xuICAgICAgcmV0dXJuICd0cmFuc2xhdGUoJyArIGluc3RfeCArICcsJyArIGluc3RfeSArICcpJztcbiAgICB9KTtcblxuICAvLyBzdXBlciByb3cgbGFiZWwgKHJvdGF0ZSB0aGUgYWxyZWFkeSB0cmFuc2xhdGVkIHRpdGxlIClcbiAgZDMuc2VsZWN0KHBhcmFtcy5yb290KycgLnN1cGVyX3JvdycpXG4gICAgLmFwcGVuZCgndGV4dCcpXG4gICAgLnRleHQocGFyYW1zLmxhYmVscy5zdXBlci5yb3cpXG4gICAgLmF0dHIoJ3RleHQtYW5jaG9yJywgJ2NlbnRlcicpXG4gICAgLmF0dHIoJ3RyYW5zZm9ybScsIGZ1bmN0aW9uICgpIHtcbiAgICAgIHZhciBpbnN0X3RleHRfd2lkdGggPSBkMy5zZWxlY3QodGhpcylbMF1bMF0uZ2V0QkJveCgpLndpZHRoO1xuICAgICAgdmFyIGluc3RfeF9vZmZzZXQgPSBpbnN0X3RleHRfd2lkdGggLyAyICsgcGFyYW1zLm5vcm1fbGFiZWwud2lkdGguY29sO1xuICAgICAgdmFyIGluc3Rfb2Zmc2V0ID0gJ3RyYW5zbGF0ZSgwLCcgKyBpbnN0X3hfb2Zmc2V0ICsgJyksIHJvdGF0ZSgtOTApJztcbiAgICAgIHJldHVybiBpbnN0X29mZnNldDtcbiAgICB9KVxuICAgIC5zdHlsZSgnZm9udC1zaXplJywgZnVuY3Rpb24gKCkge1xuICAgICAgdmFyIGluc3RfZm9udF9zaXplID0gMTQgKiBwYXJhbXMubGFiZWxzLnN1cGVyX2xhYmVsX3NjYWxlO1xuICAgICAgcmV0dXJuIGluc3RfZm9udF9zaXplICsgJ3B4JztcbiAgICB9KVxuICAgIC5zdHlsZSgnZm9udC13ZWlnaHQnLCAzMDApO1xufTtcblxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIHNyYy9sYWJlbHMvc3VwZXJfbGFiZWxzLmpzXG4gKiovIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBOzs7O0FBSUE7QUFDQTs7QUFOQTtBQUNBO0FBcUJBO0FBQ0E7QUFFQTtBQUVBO0FBQ0E7QUFSQTtBQVdBO0FBQ0E7QUFGQTtBQUNBOzs7QUEvQkE7QUFDQTs7O0FBREE7O0FBc0RBO0FBQ0E7QUFFQTtBQUxBO0FBQ0E7O0FBckRBO0FBa0VBO0FBQ0E7QUFDQTtBQUNBO0FBSkE7QUFPQTtBQUNBO0FBRkE7QUF2RUEiLCJzb3VyY2VSb290IjoiIn0=");

/***/ },
/* 28 */
/***/ function(module, exports) {

	eval("/* Spillover Module\n*/\nmodule.exports = function (params, container_all_col) {\n  // make spillover protection divs\n  make(params, container_all_col);\n\n  function make(params, container_all_col) {\n    // Spillover Protection\n    //////////////////////////\n\n    // hide spillover from slanted column labels on right side\n    container_all_col.append('path').style('stroke-width', '0')\n    // mini-language for drawing path in d3, used to draw triangle\n    .attr('d', 'M 0,0 L 500,-500, L 500,0 Z').attr('fill', params.viz.background_color) //!! prog_colors\n    .attr('class', 'right_slant_triangle').attr('transform', 'translate(' + params.viz.clust.dim.width + ',' + params.norm_label.width.col + ')');\n\n    // hide spillover from slanted column labels on left side\n    container_all_col.append('path').style('stroke-width', '0')\n    // mini-language for drawing path in d3, used to draw triangle\n    .attr('d', 'M 0,0 L 500,-500, L 0,-500 Z').attr('fill', params.viz.background_color).attr('class', 'left_slant_triangle')\n    // shift left by 1 px to prevent cutting off labels\n    .attr('transform', 'translate(-1,' + params.norm_label.width.col + ')');\n\n    // top corner rect\n    ///////////////////////////////\n    // white rect to cover excess labels\n    d3.select(params.viz.viz_svg).append('rect').attr('fill', params.viz.background_color) //!! prog_colors\n    .attr('width', params.viz.clust.margin.left).attr('height', params.viz.clust.margin.top).attr('class', 'top_left_white');\n\n    // hide spillover from right\n    d3.select(params.viz.viz_svg).append('rect').attr('fill', params.viz.background_color) //!! prog_colors\n    .attr('width', '300px').attr('height', '3000px').attr('transform', function () {\n      var tmp_left = params.viz.clust.margin.left + params.viz.clust.dim.width;\n      var tmp_top = params.norm_label.margin.top + params.norm_label.width.col;\n      return 'translate(' + tmp_left + ',' + tmp_top + ')';\n    }).attr('class', 'white_bars').attr('class', 'right_spillover');\n\n    // white border bottom - prevent clustergram from hitting border\n    ///////////////////////////////////////////////////////////////////\n    d3.select(params.viz.viz_svg).append('rect').attr('class', 'bottom_spillover').attr('fill', params.viz.background_color) //!! prog_colors\n    .attr('width', params.viz.svg_dim.width)\n    // make this border twice the width of the grey border\n    .attr('height', 2 * params.viz.grey_border_width).attr('transform', function () {\n      // shift up enough to show the entire border width\n      var inst_offset = params.viz.svg_dim.height - 3 * params.viz.grey_border_width;\n      return 'translate(0,' + inst_offset + ')';\n    });\n  }\n};//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjguanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vc3JjL3NwaWxsb3Zlci5qcz9mNTBhIl0sInNvdXJjZXNDb250ZW50IjpbIi8qIFNwaWxsb3ZlciBNb2R1bGVcbiovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKHBhcmFtcywgY29udGFpbmVyX2FsbF9jb2wpIHtcbiAgLy8gbWFrZSBzcGlsbG92ZXIgcHJvdGVjdGlvbiBkaXZzXG4gIG1ha2UocGFyYW1zLCBjb250YWluZXJfYWxsX2NvbCk7XG5cbiAgZnVuY3Rpb24gbWFrZShwYXJhbXMsIGNvbnRhaW5lcl9hbGxfY29sICl7XG4gICAgLy8gU3BpbGxvdmVyIFByb3RlY3Rpb25cbiAgICAvLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xuXG4gICAgLy8gaGlkZSBzcGlsbG92ZXIgZnJvbSBzbGFudGVkIGNvbHVtbiBsYWJlbHMgb24gcmlnaHQgc2lkZVxuICAgIGNvbnRhaW5lcl9hbGxfY29sXG4gICAgICAuYXBwZW5kKCdwYXRoJylcbiAgICAgIC5zdHlsZSgnc3Ryb2tlLXdpZHRoJywgJzAnKVxuICAgICAgLy8gbWluaS1sYW5ndWFnZSBmb3IgZHJhd2luZyBwYXRoIGluIGQzLCB1c2VkIHRvIGRyYXcgdHJpYW5nbGVcbiAgICAgIC5hdHRyKCdkJywgJ00gMCwwIEwgNTAwLC01MDAsIEwgNTAwLDAgWicpXG4gICAgICAuYXR0cignZmlsbCcsIHBhcmFtcy52aXouYmFja2dyb3VuZF9jb2xvcikgLy8hISBwcm9nX2NvbG9yc1xuICAgICAgLmF0dHIoJ2NsYXNzJywgJ3JpZ2h0X3NsYW50X3RyaWFuZ2xlJylcbiAgICAgIC5hdHRyKCd0cmFuc2Zvcm0nLCAndHJhbnNsYXRlKCcgKyBwYXJhbXMudml6LmNsdXN0LmRpbS53aWR0aCArICcsJyArXG4gICAgICBwYXJhbXMubm9ybV9sYWJlbC53aWR0aC5jb2wgKyAnKScpO1xuXG4gICAgLy8gaGlkZSBzcGlsbG92ZXIgZnJvbSBzbGFudGVkIGNvbHVtbiBsYWJlbHMgb24gbGVmdCBzaWRlXG4gICAgY29udGFpbmVyX2FsbF9jb2xcbiAgICAgIC5hcHBlbmQoJ3BhdGgnKVxuICAgICAgLnN0eWxlKCdzdHJva2Utd2lkdGgnLCAnMCcpXG4gICAgICAvLyBtaW5pLWxhbmd1YWdlIGZvciBkcmF3aW5nIHBhdGggaW4gZDMsIHVzZWQgdG8gZHJhdyB0cmlhbmdsZVxuICAgICAgLmF0dHIoJ2QnLCAnTSAwLDAgTCA1MDAsLTUwMCwgTCAwLC01MDAgWicpXG4gICAgICAuYXR0cignZmlsbCcsIHBhcmFtcy52aXouYmFja2dyb3VuZF9jb2xvcilcbiAgICAgIC5hdHRyKCdjbGFzcycsICdsZWZ0X3NsYW50X3RyaWFuZ2xlJylcbiAgICAgIC8vIHNoaWZ0IGxlZnQgYnkgMSBweCB0byBwcmV2ZW50IGN1dHRpbmcgb2ZmIGxhYmVsc1xuICAgICAgLmF0dHIoJ3RyYW5zZm9ybScsICd0cmFuc2xhdGUoLTEsJyArIHBhcmFtcy5ub3JtX2xhYmVsLndpZHRoLmNvbCArXG4gICAgICAnKScpO1xuXG4gICAgLy8gdG9wIGNvcm5lciByZWN0XG4gICAgLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xuICAgIC8vIHdoaXRlIHJlY3QgdG8gY292ZXIgZXhjZXNzIGxhYmVsc1xuICAgIGQzLnNlbGVjdChwYXJhbXMudml6LnZpel9zdmcpXG4gICAgICAuYXBwZW5kKCdyZWN0JylcbiAgICAgIC5hdHRyKCdmaWxsJywgcGFyYW1zLnZpei5iYWNrZ3JvdW5kX2NvbG9yKSAvLyEhIHByb2dfY29sb3JzXG4gICAgICAuYXR0cignd2lkdGgnLCBwYXJhbXMudml6LmNsdXN0Lm1hcmdpbi5sZWZ0KVxuICAgICAgLmF0dHIoJ2hlaWdodCcsIHBhcmFtcy52aXouY2x1c3QubWFyZ2luLnRvcClcbiAgICAgIC5hdHRyKCdjbGFzcycsICd0b3BfbGVmdF93aGl0ZScpO1xuXG4gICAgLy8gaGlkZSBzcGlsbG92ZXIgZnJvbSByaWdodFxuICAgIGQzLnNlbGVjdChwYXJhbXMudml6LnZpel9zdmcpXG4gICAgICAuYXBwZW5kKCdyZWN0JylcbiAgICAgIC5hdHRyKCdmaWxsJywgcGFyYW1zLnZpei5iYWNrZ3JvdW5kX2NvbG9yKSAvLyEhIHByb2dfY29sb3JzXG4gICAgICAuYXR0cignd2lkdGgnLCAnMzAwcHgnKVxuICAgICAgLmF0dHIoJ2hlaWdodCcsICczMDAwcHgnKVxuICAgICAgLmF0dHIoJ3RyYW5zZm9ybScsIGZ1bmN0aW9uKCkge1xuICAgICAgICB2YXIgdG1wX2xlZnQgPSBwYXJhbXMudml6LmNsdXN0Lm1hcmdpbi5sZWZ0ICsgcGFyYW1zLnZpei5jbHVzdC5kaW0ud2lkdGg7XG4gICAgICAgIHZhciB0bXBfdG9wID0gcGFyYW1zLm5vcm1fbGFiZWwubWFyZ2luLnRvcCArIHBhcmFtcy5ub3JtX2xhYmVsLndpZHRoXG4gICAgICAgICAgLmNvbDtcbiAgICAgICAgcmV0dXJuICd0cmFuc2xhdGUoJyArIHRtcF9sZWZ0ICsgJywnICsgdG1wX3RvcCArICcpJztcbiAgICAgIH0pXG4gICAgICAuYXR0cignY2xhc3MnLCAnd2hpdGVfYmFycycpXG4gICAgICAuYXR0cignY2xhc3MnLCdyaWdodF9zcGlsbG92ZXInKTtcblxuICAgIC8vIHdoaXRlIGJvcmRlciBib3R0b20gLSBwcmV2ZW50IGNsdXN0ZXJncmFtIGZyb20gaGl0dGluZyBib3JkZXJcbiAgICAvLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vXG4gICAgZDMuc2VsZWN0KHBhcmFtcy52aXoudml6X3N2ZylcbiAgICAgIC5hcHBlbmQoJ3JlY3QnKVxuICAgICAgLmF0dHIoJ2NsYXNzJywnYm90dG9tX3NwaWxsb3ZlcicpXG4gICAgICAuYXR0cignZmlsbCcsIHBhcmFtcy52aXouYmFja2dyb3VuZF9jb2xvcikgLy8hISBwcm9nX2NvbG9yc1xuICAgICAgLmF0dHIoJ3dpZHRoJywgcGFyYW1zLnZpei5zdmdfZGltLndpZHRoKVxuICAgICAgLy8gbWFrZSB0aGlzIGJvcmRlciB0d2ljZSB0aGUgd2lkdGggb2YgdGhlIGdyZXkgYm9yZGVyXG4gICAgICAuYXR0cignaGVpZ2h0JywgMiAqIHBhcmFtcy52aXouZ3JleV9ib3JkZXJfd2lkdGgpXG4gICAgICAuYXR0cigndHJhbnNmb3JtJywgZnVuY3Rpb24oKSB7XG4gICAgICAgIC8vIHNoaWZ0IHVwIGVub3VnaCB0byBzaG93IHRoZSBlbnRpcmUgYm9yZGVyIHdpZHRoXG4gICAgICAgIHZhciBpbnN0X29mZnNldCA9IHBhcmFtcy52aXouc3ZnX2RpbS5oZWlnaHQgLSAzICogcGFyYW1zLnZpei5ncmV5X2JvcmRlcl93aWR0aDtcbiAgICAgICAgcmV0dXJuICd0cmFuc2xhdGUoMCwnICsgaW5zdF9vZmZzZXQgKyAnKSc7XG4gICAgICB9KTtcbiAgfVxufTtcblxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIHNyYy9zcGlsbG92ZXIuanNcbiAqKi8iXSwibWFwcGluZ3MiOiI7O0FBRUE7O0FBRUE7QUFDQTtBQUNBOzs7OztBQUtBOztBQUlBO0FBSkE7QUFDQTs7QUFOQTs7QUFvQkE7O0FBSUE7QUFDQTs7OztBQXpCQTtBQThCQTtBQUNBOztBQS9CQTtBQXNDQTtBQU1BO0FBQ0E7QUFFQTtBQUpBO0FBQ0E7OztBQTVDQTtBQXNEQTs7QUFBQTs7QUFTQTtBQUNBO0FBSEE7QUE3REE7QUFKQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ },
/* 29 */
/***/ function(module, exports, __webpack_require__) {

	eval("var two_translate_zoom = __webpack_require__(30);\n\n/* Handles searching rows or columns.\n TODO need to generalize to column and row\n * ----------------------------------------------------------------------- */\nmodule.exports = function (params, nodes, prop) {\n\n  /* Collect entities from row or columns.\n   */\n  var entities = [];\n  var i;\n\n  for (i = 0; i < nodes.length; i++) {\n    entities.push(nodes[i][prop]);\n  }\n\n  /* Find a gene (row) in the clustergram.\n   */\n  function find_entity(search_term) {\n    if (entities.indexOf(search_term) !== -1) {\n\n      // unhighlight\n      d3.selectAll(params.root + ' .row_label_text').select('rect').style('opacity', 0);\n\n      // calc pan_dy\n      var idx = _.indexOf(entities, search_term);\n      var inst_y_pos = params.matrix.y_scale(idx);\n      var pan_dy = params.viz.clust.dim.height / 2 - inst_y_pos;\n\n      two_translate_zoom(params, 0, pan_dy, params.viz.zoom_switch);\n\n      // highlight\n      d3.selectAll(params.root + ' .row_label_text').filter(function (d) {\n        return d[prop] === search_term;\n      }).select('rect').style('opacity', 1);\n    }\n  }\n\n  return {\n    find_entity: find_entity,\n    get_entities: entities\n  };\n};//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjkuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vc3JjL3NlYXJjaC9pbmRleC5qcz80OTEwIl0sInNvdXJjZXNDb250ZW50IjpbInZhciB0d29fdHJhbnNsYXRlX3pvb20gPSByZXF1aXJlKCcuLi90d29fdHJhbnNsYXRlX3pvb20nKTtcblxuLyogSGFuZGxlcyBzZWFyY2hpbmcgcm93cyBvciBjb2x1bW5zLlxuIFRPRE8gbmVlZCB0byBnZW5lcmFsaXplIHRvIGNvbHVtbiBhbmQgcm93XG4gKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihwYXJhbXMsIG5vZGVzLCBwcm9wKSB7XG5cbiAgLyogQ29sbGVjdCBlbnRpdGllcyBmcm9tIHJvdyBvciBjb2x1bW5zLlxuICAgKi9cbiAgdmFyIGVudGl0aWVzID0gW107XG4gIHZhciBpO1xuXG4gIGZvciAoaSA9IDA7IGkgPCBub2Rlcy5sZW5ndGg7IGkrKykge1xuICAgIGVudGl0aWVzLnB1c2gobm9kZXNbaV1bcHJvcF0pO1xuICB9XG5cbiAgLyogRmluZCBhIGdlbmUgKHJvdykgaW4gdGhlIGNsdXN0ZXJncmFtLlxuICAgKi9cbiAgZnVuY3Rpb24gZmluZF9lbnRpdHkoc2VhcmNoX3Rlcm0pIHtcbiAgICBpZiAoZW50aXRpZXMuaW5kZXhPZihzZWFyY2hfdGVybSkgIT09IC0xKSB7XG5cbiAgICAgIC8vIHVuaGlnaGxpZ2h0XG4gICAgICBkMy5zZWxlY3RBbGwocGFyYW1zLnJvb3QrJyAucm93X2xhYmVsX3RleHQnKVxuICAgICAgICAuc2VsZWN0KCdyZWN0Jykuc3R5bGUoJ29wYWNpdHknLCAwKTtcblxuICAgICAgLy8gY2FsYyBwYW5fZHkgXG4gICAgICB2YXIgaWR4ID0gXy5pbmRleE9mKGVudGl0aWVzLCBzZWFyY2hfdGVybSk7XG4gICAgICB2YXIgaW5zdF95X3BvcyA9IHBhcmFtcy5tYXRyaXgueV9zY2FsZShpZHgpO1xuICAgICAgdmFyIHBhbl9keSA9IHBhcmFtcy52aXouY2x1c3QuZGltLmhlaWdodCAvIDIgLSBpbnN0X3lfcG9zO1xuXG4gICAgICB0d29fdHJhbnNsYXRlX3pvb20ocGFyYW1zLCAwLCBwYW5fZHksIHBhcmFtcy52aXouem9vbV9zd2l0Y2gpO1xuXG4gICAgICAvLyBoaWdobGlnaHQgXG4gICAgICBkMy5zZWxlY3RBbGwocGFyYW1zLnJvb3QrJyAucm93X2xhYmVsX3RleHQnKVxuICAgICAgICAuZmlsdGVyKGZ1bmN0aW9uKGQpIHtcbiAgICAgICAgICByZXR1cm4gZFtwcm9wXSA9PT0gc2VhcmNoX3Rlcm07XG4gICAgICAgIH0pXG4gICAgICAgIC5zZWxlY3QoJ3JlY3QnKVxuICAgICAgICAuc3R5bGUoJ29wYWNpdHknLCAxKTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4ge1xuICAgIGZpbmRfZW50aXR5OiBmaW5kX2VudGl0eSxcbiAgICBnZXRfZW50aXRpZXM6IGVudGl0aWVzXG4gIH07XG59O1xuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogc3JjL3NlYXJjaC9pbmRleC5qc1xuICoqLyJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTs7OztBQUlBO0FBQ0E7OztBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFEQTtBQUNBOzs7QUFSQTtBQWNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFKQTtBQVFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBWkE7QUFnQkE7QUFEQTtBQWZBO0FBREE7QUFDQTtBQXVCQTtBQUNBO0FBQ0E7QUFGQTtBQXJDQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ },
/* 30 */
/***/ function(module, exports, __webpack_require__) {

	eval("var utils = __webpack_require__(2);\nvar constrain_font_size = __webpack_require__(12);\n\nmodule.exports = function (params, pan_dx, pan_dy, fin_zoom) {\n  // get parameters\n  if (!params.viz.run_trans) {\n\n    // define the commonly used variable half_height\n    var half_height = params.viz.clust.dim.height / 2;\n\n    // y pan room, the pan room has to be less than half_height since\n    // zooming in on a gene that is near the top of the clustergram also causes\n    // panning out of the visible region\n    var y_pan_room = half_height / params.viz.zoom_switch;\n\n    // prevent visualization from panning down too much\n    // when zooming into genes near the top of the clustergram\n    if (pan_dy >= half_height - y_pan_room) {\n\n      // explanation of panning rules\n      /////////////////////////////////\n      // prevent the clustergram from panning down too much\n      // if the amount of panning is equal to the half_height then it needs to be reduced\n      // effectively, the the visualization needs to be moved up (negative) by some factor\n      // of the half-width-of-the-visualization.\n      //\n      // If there was no zooming involved, then the\n      // visualization would be centered first, then panned to center the top term\n      // this would require a\n      // correction to re-center it. However, because of the zooming the offset is\n      // reduced by the zoom factor (this is because the panning is occurring on something\n      // that will be zoomed into - this is why the pan_dy value is not scaled in the two\n      // translate transformations, but it has to be scaled afterwards to set the translate\n      // vector)\n      // pan_dy = half_height - (half_height)/params.viz.zoom_switch\n\n      // if pan_dy is greater than the pan room, then panning has to be restricted\n      // start by shifting back up (negative) by half_height/params.viz.zoom_switch then shift back down\n      // by the difference between half_height and pan_dy (so that the top of the clustergram is\n      // visible)\n      var shift_top_viz = half_height - pan_dy;\n      var shift_up_viz = -half_height / params.viz.zoom_switch + shift_top_viz;\n\n      // reduce pan_dy so that the visualization does not get panned to far down\n      pan_dy = pan_dy + shift_up_viz;\n    }\n\n    // prevent visualization from panning up too much\n    // when zooming into genes at the bottom of the clustergram\n    if (pan_dy < -(half_height - y_pan_room)) {\n\n      shift_top_viz = half_height + pan_dy;\n\n      shift_up_viz = half_height / params.viz.zoom_switch - shift_top_viz; //- move_up_one_row;\n\n      // reduce pan_dy so that the visualization does not get panned to far down\n      pan_dy = pan_dy + shift_up_viz;\n    }\n\n    // will improve this !!\n    var zoom_y = fin_zoom;\n    var zoom_x;\n    if (fin_zoom <= params.viz.zoom_switch) {\n      zoom_x = 1;\n    } else {\n      zoom_x = fin_zoom / params.viz.zoom_switch;\n    }\n\n    // search duration - the duration of zooming and panning\n    var search_duration = 700;\n\n    // center_y\n    var center_y = -(zoom_y - 1) * half_height;\n\n    // transform clust group\n    ////////////////////////////\n    d3.select('.clust_group').transition().duration(search_duration)\n    // first apply the margin transformation\n    // then zoom, then apply the final transformation\n    .attr('transform', 'translate(' + [0, 0 + center_y] + ')' + ' scale(' + zoom_x + ',' + zoom_y + ')' + 'translate(' + [pan_dx, pan_dy] + ')');\n\n    // transform row labels\n    d3.select(params.root + ' .row_label_zoom_container').transition().duration(search_duration).attr('transform', 'translate(' + [0, center_y] + ')' + ' scale(' + zoom_y + ',' + zoom_y + ')' + 'translate(' + [0, pan_dy] + ')');\n\n    // transform row_zoom_container\n    // use the offset saved in params, only zoom in the y direction\n    d3.select(params.root + ' .row_zoom_container').transition().duration(search_duration).attr('transform', 'translate(' + [0, center_y] + ')' + ' scale(' + 1 + ',' + zoom_y + ')' + 'translate(' + [0, pan_dy] + ')');\n\n    // transform col labels\n    d3.select(params.root + ' .col_zoom_container').transition().duration(search_duration).attr('transform', ' scale(' + zoom_x + ',' + zoom_x + ')' + 'translate(' + [pan_dx, 0] + ')');\n\n    // transform col_class\n    d3.select(params.root + ' .col_viz_zoom_container').transition().duration(search_duration).attr('transform', ' scale(' + zoom_x + ',' + 1 + ')' + 'translate(' + [pan_dx, 0] + ')');\n\n    // // set y translate: center_y is positive, positive moves the visualization down\n    // // the translate vector has the initial margin, the first y centering, and pan_dy\n    // // times the scaling zoom_y\n    // var net_y_offset = params.viz.clust.margin.top + center_y + pan_dy * zoom_y;\n\n    // reset the zoom translate and zoom\n    params.zoom_behavior.scale(zoom_y);\n\n    var trans = true;\n    constrain_font_size(params, trans);\n\n    // re-size of the highlighting rects\n    /////////////////////////////////////////\n    d3.select(params.root + ' .row_label_zoom_container').each(function () {\n      // get the bounding box of the row label text\n      var bbox = d3.select(this).select('text')[0][0].getBBox();\n\n      // use the bounding box to set the size of the rect\n      d3.select(this).select('rect').attr('x', bbox.x * 0.5).attr('y', 0).attr('width', bbox.width * 0.5).attr('height', params.matrix.y_scale.rangeBand()).style('fill', 'yellow');\n    });\n\n    // column value bars\n    ///////////////////////\n    // reduce the height of the column value bars based on the zoom applied\n    // recalculate the height and divide by the zooming scale\n    // col_label_obj.select('rect')\n    if (utils.has(params.network_data.col_nodes[0], 'value')) {\n\n      d3.selectAll(params.root + ' .col_bars')\n      // .transition()\n      // .duration(search_duration)\n      .attr('width', function (d) {\n        var inst_value = 0;\n        if (d.value > 0) {\n          inst_value = params.labels.bar_scale_col(d.value) / zoom_x;\n        }\n        return inst_value;\n      });\n    }\n\n    if (utils.has(params.network_data.row_nodes[0], 'value')) {\n\n      d3.selectAll(params.root + ' .row_bars').transition().duration(search_duration).attr('width', function (d) {\n        var inst_value = 0;\n        inst_value = params.labels.bar_scale_row(Math.abs(d.value)) / zoom_y;\n        return inst_value;\n      }).attr('x', function (d) {\n        var inst_value = 0;\n        inst_value = -params.labels.bar_scale_row(Math.abs(d.value)) / zoom_y;\n        return inst_value;\n      });\n    }\n  }\n};//@ sourceMappingURL=data:application/json;base64,");

/***/ },
/* 31 */
/***/ function(module, exports, __webpack_require__) {

	eval("var parent_div_size = __webpack_require__(8);\nvar reset_visualization_size = __webpack_require__(32);\n\nmodule.exports = function (params) {\n\n  var exp_button;\n\n  d3.select(window).on('resize', null);\n\n  // resize window\n  if (params.viz.resize) {\n    d3.select(window).on('resize', function () {\n      d3.select(params.viz.viz_svg).style('opacity', 0.5);\n      var wait_time = 500;\n      if (params.viz.run_trans == true) {\n        wait_time = 2500;\n      }\n      setTimeout(reset_visualization_size, wait_time, params);\n    });\n  }\n\n  if (params.viz.expand_button) {\n\n    d3.select(params.root + ' .expand_button').on('click', null);\n    var expand_opacity = 0.4;\n\n    if (d3.select(params.root + ' .expand_button').empty()) {\n      exp_button = d3.select(params.viz.viz_svg).append('text').attr('class', 'expand_button');\n    } else {\n      exp_button = d3.select(params.root + ' .expand_button');\n    }\n\n    exp_button.attr('text-anchor', 'middle').attr('dominant-baseline', 'central').attr('font-family', 'FontAwesome').attr('font-size', '30px').text(function () {\n      if (params.viz.expand === false) {\n        // expand button\n        return '\\uf0b2';\n      } else {\n        // menu button\n        return '\\uf0c9';\n      }\n    }).attr('y', '25px').attr('x', '25px').style('cursor', 'pointer').style('opacity', expand_opacity).on('mouseover', function () {\n      d3.select(this).style('opacity', 0.75);\n    }).on('mouseout', function () {\n      d3.select(this).style('opacity', expand_opacity);\n    }).on('click', function () {\n\n      // expand view\n      if (params.viz.expand === false) {\n\n        d3.select(this).text(function () {\n          // menu button\n          return '\\uf0c9';\n        });\n        params.viz.expand = true;\n\n        d3.selectAll(params.root + ' .borders').style('fill', 'white');\n        d3.select(params.root + ' .footer_section').style('display', 'none');\n\n        d3.select(params.root + ' .sidebar_wrapper').style('display', 'none');\n\n        // contract view\n      } else {\n\n          d3.select(this).text(function () {\n            // expand button\n            return '\\uf0b2';\n          });\n\n          params.viz.expand = false;\n\n          d3.selectAll(params.root + ' .borders').style('fill', '#eee');\n          d3.select(params.root + ' .footer_section').style('display', 'block');\n          d3.select(params.root + ' .sidebar_wrapper').style('display', 'block');\n        }\n\n      // resize parent div\n      parent_div_size(params);\n\n      d3.select(params.viz.viz_svg).style('opacity', 0.5);\n      var wait_time = 500;\n      if (params.viz.run_trans == true) {\n        wait_time = 2500;\n      }\n      setTimeout(reset_visualization_size, wait_time, params);\n    });\n  }\n};//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzEuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vc3JjL2luaXRpYWxpemVfcmVzaXppbmcuanM/MDM5NCJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgcGFyZW50X2Rpdl9zaXplID0gcmVxdWlyZSgnLi9wYXJlbnRfZGl2X3NpemUnKTsgXG52YXIgcmVzZXRfdmlzdWFsaXphdGlvbl9zaXplID0gcmVxdWlyZSgnLi9yZXNldF9zaXplL3Jlc2V0X3Zpc3VhbGl6YXRpb25fc2l6ZScpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKHBhcmFtcykge1xuXG4gIHZhciBleHBfYnV0dG9uO1xuXG4gIGQzLnNlbGVjdCh3aW5kb3cpLm9uKCdyZXNpemUnLCBudWxsKTtcblxuICAvLyByZXNpemUgd2luZG93XG4gIGlmIChwYXJhbXMudml6LnJlc2l6ZSkge1xuICAgIGQzLnNlbGVjdCh3aW5kb3cpLm9uKCdyZXNpemUnLCBmdW5jdGlvbiAoKSB7XG4gICAgICBkMy5zZWxlY3QocGFyYW1zLnZpei52aXpfc3ZnKS5zdHlsZSgnb3BhY2l0eScsIDAuNSk7XG4gICAgICB2YXIgd2FpdF90aW1lID0gNTAwO1xuICAgICAgaWYgKHBhcmFtcy52aXoucnVuX3RyYW5zID09IHRydWUpIHtcbiAgICAgICAgd2FpdF90aW1lID0gMjUwMDtcbiAgICAgIH1cbiAgICAgIHNldFRpbWVvdXQocmVzZXRfdmlzdWFsaXphdGlvbl9zaXplLCB3YWl0X3RpbWUsIHBhcmFtcyk7XG4gICAgfSk7XG4gIH1cblxuICBpZiAocGFyYW1zLnZpei5leHBhbmRfYnV0dG9uKSB7XG5cbiAgICBkMy5zZWxlY3QocGFyYW1zLnJvb3QgKyAnIC5leHBhbmRfYnV0dG9uJykub24oJ2NsaWNrJywgbnVsbCk7XG4gICAgdmFyIGV4cGFuZF9vcGFjaXR5ID0gMC40O1xuXG4gICAgaWYgKGQzLnNlbGVjdChwYXJhbXMucm9vdCArICcgLmV4cGFuZF9idXR0b24nKS5lbXB0eSgpKSB7XG4gICAgICBleHBfYnV0dG9uID0gZDMuc2VsZWN0KHBhcmFtcy52aXoudml6X3N2ZylcbiAgICAgICAgLmFwcGVuZCgndGV4dCcpXG4gICAgICAgIC5hdHRyKCdjbGFzcycsICdleHBhbmRfYnV0dG9uJyk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGV4cF9idXR0b24gPSBkMy5zZWxlY3QocGFyYW1zLnJvb3QgKyAnIC5leHBhbmRfYnV0dG9uJyk7XG4gICAgfVxuXG4gICAgZXhwX2J1dHRvblxuICAgICAgLmF0dHIoJ3RleHQtYW5jaG9yJywgJ21pZGRsZScpXG4gICAgICAuYXR0cignZG9taW5hbnQtYmFzZWxpbmUnLCAnY2VudHJhbCcpXG4gICAgICAuYXR0cignZm9udC1mYW1pbHknLCAnRm9udEF3ZXNvbWUnKVxuICAgICAgLmF0dHIoJ2ZvbnQtc2l6ZScsICczMHB4JylcbiAgICAgIC50ZXh0KGZ1bmN0aW9uICgpIHtcbiAgICAgICAgaWYgKHBhcmFtcy52aXouZXhwYW5kID09PSBmYWxzZSkge1xuICAgICAgICAgIC8vIGV4cGFuZCBidXR0b25cbiAgICAgICAgICByZXR1cm4gJ1xcdWYwYjInO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIC8vIG1lbnUgYnV0dG9uXG4gICAgICAgICAgcmV0dXJuICdcXHVmMGM5JztcbiAgICAgICAgfVxuICAgICAgfSlcbiAgICAgIC5hdHRyKCd5JywgJzI1cHgnKVxuICAgICAgLmF0dHIoJ3gnLCAnMjVweCcpXG4gICAgICAuc3R5bGUoJ2N1cnNvcicsICdwb2ludGVyJylcbiAgICAgIC5zdHlsZSgnb3BhY2l0eScsIGV4cGFuZF9vcGFjaXR5KVxuICAgICAgLm9uKCdtb3VzZW92ZXInLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgIGQzLnNlbGVjdCh0aGlzKS5zdHlsZSgnb3BhY2l0eScsIDAuNzUpO1xuICAgICAgfSlcbiAgICAgIC5vbignbW91c2VvdXQnLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgIGQzLnNlbGVjdCh0aGlzKS5zdHlsZSgnb3BhY2l0eScsIGV4cGFuZF9vcGFjaXR5KTtcbiAgICAgIH0pXG4gICAgICAub24oJ2NsaWNrJywgZnVuY3Rpb24gKCkge1xuXG4gICAgICAgIC8vIGV4cGFuZCB2aWV3XG4gICAgICAgIGlmIChwYXJhbXMudml6LmV4cGFuZCA9PT0gZmFsc2UpIHtcblxuICAgICAgICAgIGQzLnNlbGVjdCh0aGlzKVxuICAgICAgICAgICAgLnRleHQoZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgIC8vIG1lbnUgYnV0dG9uXG4gICAgICAgICAgICAgIHJldHVybiAnXFx1ZjBjOSc7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICBwYXJhbXMudml6LmV4cGFuZCA9IHRydWU7XG5cbiAgICAgICAgICBkMy5zZWxlY3RBbGwocGFyYW1zLnJvb3QrJyAuYm9yZGVycycpLnN0eWxlKCdmaWxsJywgJ3doaXRlJyk7XG4gICAgICAgICAgZDMuc2VsZWN0KHBhcmFtcy5yb290KycgLmZvb3Rlcl9zZWN0aW9uJykuc3R5bGUoJ2Rpc3BsYXknLCAnbm9uZScpO1xuXG4gICAgICAgICAgZDMuc2VsZWN0KHBhcmFtcy5yb290KycgLnNpZGViYXJfd3JhcHBlcicpXG4gICAgICAgICAgICAuc3R5bGUoJ2Rpc3BsYXknLCdub25lJyk7XG5cbiAgICAgICAgLy8gY29udHJhY3Qgdmlld1xuICAgICAgICB9IGVsc2Uge1xuXG4gICAgICAgICAgZDMuc2VsZWN0KHRoaXMpXG4gICAgICAgICAgICAudGV4dChmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgIC8vIGV4cGFuZCBidXR0b25cbiAgICAgICAgICAgICAgcmV0dXJuICdcXHVmMGIyJztcbiAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgcGFyYW1zLnZpei5leHBhbmQgPSBmYWxzZTtcblxuICAgICAgICAgIGQzLnNlbGVjdEFsbChwYXJhbXMucm9vdCsnIC5ib3JkZXJzJykuc3R5bGUoJ2ZpbGwnLCAnI2VlZScpO1xuICAgICAgICAgIGQzLnNlbGVjdChwYXJhbXMucm9vdCsnIC5mb290ZXJfc2VjdGlvbicpLnN0eWxlKCdkaXNwbGF5JywgJ2Jsb2NrJyk7XG4gICAgICAgICAgZDMuc2VsZWN0KHBhcmFtcy5yb290KycgLnNpZGViYXJfd3JhcHBlcicpXG4gICAgICAgICAgICAuc3R5bGUoJ2Rpc3BsYXknLCdibG9jaycpO1xuICAgICAgICB9XG5cbiAgICAgICAgLy8gcmVzaXplIHBhcmVudCBkaXZcbiAgICAgICAgcGFyZW50X2Rpdl9zaXplKHBhcmFtcyk7XG5cbiAgICAgICAgZDMuc2VsZWN0KHBhcmFtcy52aXoudml6X3N2Zykuc3R5bGUoJ29wYWNpdHknLCAwLjUpO1xuICAgICAgICB2YXIgd2FpdF90aW1lID0gNTAwO1xuICAgICAgICBpZiAocGFyYW1zLnZpei5ydW5fdHJhbnMgPT0gdHJ1ZSkge1xuICAgICAgICAgIHdhaXRfdGltZSA9IDI1MDA7XG4gICAgICAgIH1cbiAgICAgICAgc2V0VGltZW91dChyZXNldF92aXN1YWxpemF0aW9uX3NpemUsIHdhaXRfdGltZSwgcGFyYW1zKTtcbiAgICAgIH0pO1xuICB9XG59O1xuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogc3JjL2luaXRpYWxpemVfcmVzaXppbmcuanNcbiAqKi8iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFMQTtBQVFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFEQTtBQUdBO0FBTkE7QUFEQTtBQUNBO0FBVUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFEQTtBQUtBO0FBTEE7QUFDQTtBQU9BO0FBTUE7O0FBRUE7QUFGQTs7QUFLQTtBQUxBO0FBREE7QUFjQTtBQURBO0FBSUE7QUFEQTtBQUNBOztBQUtBO0FBQ0E7QUFDQTs7QUFHQTtBQUZBO0FBSUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBYkE7QUFDQTtBQWlCQTs7QUFHQTtBQUZBO0FBQ0E7QUFJQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBNUJBO0FBQ0E7O0FBSkE7QUFDQTtBQXFDQTtBQUNBO0FBQ0E7QUFDQTtBQURBO0FBR0E7QUEzQ0E7QUFyQ0E7QUFsQkEiLCJzb3VyY2VSb290IjoiIn0=");

/***/ },
/* 32 */
/***/ function(module, exports, __webpack_require__) {

	eval("var run_reset_visualization_size = __webpack_require__(33);\n\nmodule.exports = function (params) {\n\n  // get outer_margins\n  var outer_margins = params.viz.expand ? params.viz.outer_margins_expand : params.viz.outer_margins;\n\n  // get the size of the window\n  var screen_width = window.innerWidth;\n  var screen_height = window.innerHeight;\n\n  // define width and height of clustergram container\n  var cont_dim = {};\n  cont_dim.width = screen_width - outer_margins.left - outer_margins.right;\n  cont_dim.height = screen_height - outer_margins.top - outer_margins.bottom;\n\n  run_reset_visualization_size(params, cont_dim.width, cont_dim.height, outer_margins.left, outer_margins.top);\n\n  // get dimensions of the viz_svg\n  var dim = {};\n  dim.viz_svg = {};\n  dim.viz_svg.w = d3.select(params.viz.viz_svg).style('width').replace('px', '');\n  dim.viz_svg.h = d3.select(params.viz.viz_svg).style('height').replace('px', '');\n\n  // reposition the play button\n  d3.select(params.root + ' .play_button').attr('transform', function () {\n    var pos_x = dim.viz_svg.w / 2;\n    var pos_y = dim.viz_svg.h / 2;\n    return 'translate(' + pos_x + ',' + pos_y + ')';\n  });\n};//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzIuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vc3JjL3Jlc2V0X3NpemUvcmVzZXRfdmlzdWFsaXphdGlvbl9zaXplLmpzP2E1YTQiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIHJ1bl9yZXNldF92aXN1YWxpemF0aW9uX3NpemUgPSByZXF1aXJlKCcuL3J1bl9yZXNldF92aXN1YWxpemF0aW9uX3NpemUnKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihwYXJhbXMpIHtcblxuICAvLyBnZXQgb3V0ZXJfbWFyZ2luc1xuICB2YXIgb3V0ZXJfbWFyZ2lucyA9IHBhcmFtcy52aXouZXhwYW5kID8gcGFyYW1zLnZpei5vdXRlcl9tYXJnaW5zX2V4cGFuZCA6IHBhcmFtcy52aXoub3V0ZXJfbWFyZ2lucztcblxuICAvLyBnZXQgdGhlIHNpemUgb2YgdGhlIHdpbmRvd1xuICB2YXIgc2NyZWVuX3dpZHRoICA9IHdpbmRvdy5pbm5lcldpZHRoO1xuICB2YXIgc2NyZWVuX2hlaWdodCA9IHdpbmRvdy5pbm5lckhlaWdodDtcblxuICAvLyBkZWZpbmUgd2lkdGggYW5kIGhlaWdodCBvZiBjbHVzdGVyZ3JhbSBjb250YWluZXJcbiAgdmFyIGNvbnRfZGltID0ge307XG4gIGNvbnRfZGltLndpZHRoICA9IHNjcmVlbl93aWR0aCAgLSBvdXRlcl9tYXJnaW5zLmxlZnQgLSBvdXRlcl9tYXJnaW5zLnJpZ2h0O1xuICBjb250X2RpbS5oZWlnaHQgPSBzY3JlZW5faGVpZ2h0IC0gb3V0ZXJfbWFyZ2lucy50b3AgLSBvdXRlcl9tYXJnaW5zLmJvdHRvbTtcblxuICBydW5fcmVzZXRfdmlzdWFsaXphdGlvbl9zaXplKHBhcmFtcywgY29udF9kaW0ud2lkdGgsIGNvbnRfZGltLmhlaWdodCwgb3V0ZXJfbWFyZ2lucy5sZWZ0LCBvdXRlcl9tYXJnaW5zLnRvcCk7XG5cbiAgLy8gZ2V0IGRpbWVuc2lvbnMgb2YgdGhlIHZpel9zdmdcbiAgdmFyIGRpbSA9IHt9O1xuICBkaW0udml6X3N2ZyA9IHt9O1xuICBkaW0udml6X3N2Zy53ID0gZDMuc2VsZWN0KHBhcmFtcy52aXoudml6X3N2Zykuc3R5bGUoJ3dpZHRoJykucmVwbGFjZSgncHgnLCcnKTtcbiAgZGltLnZpel9zdmcuaCA9IGQzLnNlbGVjdChwYXJhbXMudml6LnZpel9zdmcpLnN0eWxlKCdoZWlnaHQnKS5yZXBsYWNlKCdweCcsJycpO1xuXG4gIC8vIHJlcG9zaXRpb24gdGhlIHBsYXkgYnV0dG9uXG4gIGQzLnNlbGVjdChwYXJhbXMucm9vdCsnIC5wbGF5X2J1dHRvbicpXG4gICAgLmF0dHIoJ3RyYW5zZm9ybScsIGZ1bmN0aW9uKCl7XG4gICAgICB2YXIgcG9zX3ggPSBkaW0udml6X3N2Zy53LzI7XG4gICAgICB2YXIgcG9zX3kgPSBkaW0udml6X3N2Zy5oLzI7XG4gICAgICByZXR1cm4gJ3RyYW5zbGF0ZSgnK3Bvc194KycsJytwb3NfeSsnKSc7XG4gICAgfSk7XG5cbn07XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiBzcmMvcmVzZXRfc2l6ZS9yZXNldF92aXN1YWxpemF0aW9uX3NpemUuanNcbiAqKi8iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBSkE7QUFPQTtBQUNBOztBQVJBO0FBV0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFmQTtBQWtCQTtBQUNBO0FBQ0E7QUFDQTs7QUFyQkE7QUF5QkE7QUFDQTtBQUNBO0FBSEE7QUF4QkEiLCJzb3VyY2VSb290IjoiIn0=");

/***/ },
/* 33 */
/***/ function(module, exports, __webpack_require__) {

	eval("// var crossfilter = require('crossfilter');\nvar utils = __webpack_require__(2);\nvar zoomed = __webpack_require__(10);\nvar ini_doubleclick = __webpack_require__(34);\n\nmodule.exports = function (params, set_clust_width, set_clust_height, set_margin_left, set_margin_top) {\n\n  var row_nodes = params.network_data.row_nodes;\n  var col_nodes = params.network_data.col_nodes;\n  var row_nodes_names = _.pluck(row_nodes, 'name');\n  var col_nodes_names = _.pluck(col_nodes, 'name');\n\n  // reset zoom\n  //////////////////////////////\n  var zoom_y = 1;\n  // var zoom_x = 1;\n  var pan_dx = 0;\n  var pan_dy = 0;\n\n  var half_height = params.viz.clust.dim.height / 2;\n  var center_y = -(zoom_y - 1) * half_height;\n\n  d3.select(params.root + ' .clust_group').attr('transform', 'translate(' + [0, 0 + center_y] + ')' + ' scale(' + 1 + ',' + zoom_y + ')' + 'translate(' + [pan_dx, pan_dy] + ')');\n\n  d3.select(params.root + ' .row_label_zoom_container').attr('transform', 'translate(' + [0, center_y] + ')' + ' scale(' + zoom_y + ',' + zoom_y + ')' + 'translate(' + [0, pan_dy] + ')');\n\n  d3.select(params.root + ' .row_zoom_container').attr('transform', 'translate(' + [0, center_y] + ')' + ' scale(' + 1 + ',' + zoom_y + ')' + 'translate(' + [0, pan_dy] + ')');\n\n  d3.select(params.root + ' .col_zoom_container').attr('transform', ' scale(' + 1 + ',' + 1 + ')' + 'translate(' + [pan_dx, 0] + ')');\n\n  d3.select(params.root + ' .col_viz_zoom_container').attr('transform', ' scale(' + 1 + ',' + 1 + ')' + 'translate(' + [pan_dx, 0] + ')');\n\n  // // set y translate: center_y is positive, positive moves the visualization down\n  // // the translate vector has the initial margin, the first y centering, and pan_dy\n  // // times the scaling zoom_y\n  // var net_y_offset = params.viz.clust.margin.top + center_y + pan_dy * zoom_y;\n\n  // size the svg container div - svg_div\n  d3.select(params.viz.viz_wrapper).style('float', 'right').style('margin-top', set_margin_top + 'px').style('width', set_clust_width + 'px').style('height', set_clust_height + 'px');\n\n  // Resetting some visualization parameters\n  ///////////////////////////////////////////////\n\n  // get height and width from parent div\n  params.viz.svg_dim = {};\n  params.viz.svg_dim.width = Number(d3.select(params.viz.viz_wrapper).style('width').replace('px', ''));\n  params.viz.svg_dim.height = Number(d3.select(params.viz.viz_wrapper).style('height').replace('px', ''));\n\n  // reduce width by row/col labels and by grey_border width (reduce width by less since this is less aparent with slanted col labels)\n  var ini_clust_width = params.viz.svg_dim.width - (params.labels.super_label_width + params.norm_label.width.row + params.class_room.row) - params.viz.grey_border_width - params.viz.spillover_x_offset;\n\n  // there is space between the clustergram and the border\n  var ini_clust_height = params.viz.svg_dim.height - (params.labels.super_label_width + params.norm_label.width.col + params.class_room.col) - 5 * params.viz.grey_border_width;\n\n  // reduce clustergram width if triangles are taller than the normal width\n  // of the columns\n  var tmp_x_scale = d3.scale.ordinal().rangeBands([0, ini_clust_width]);\n  tmp_x_scale.domain(params.matrix.orders.ini_row);\n  var triangle_height = tmp_x_scale.rangeBand() / 2;\n  if (triangle_height > params.norm_label.width.col) {\n    ini_clust_width = ini_clust_width * (params.norm_label.width.col / triangle_height);\n  }\n  params.viz.clust.dim.width = ini_clust_width;\n\n  // clustergram height\n  ////////////////////////\n  // ensure that rects are never taller than they are wide\n  // force square tiles\n  if (ini_clust_width / params.viz.num_col_nodes < ini_clust_height / params.viz.num_row_nodes) {\n\n    // scale the height\n    params.viz.clust.dim.height = ini_clust_width * (params.viz.num_row_nodes / params.viz.num_col_nodes);\n\n    // keep track of whether or not a force square has occurred\n    // so that I can adjust the font accordingly\n    params.viz.force_square = 1;\n\n    // make sure that force_square does not cause the entire visualization\n    // to be taller than the svg, if it does, then undo\n    if (params.viz.clust.dim.height > ini_clust_height) {\n      // make the height equal to the width\n      params.viz.clust.dim.height = ini_clust_height;\n      // keep track of whether or not a force square has occurred\n      params.viz.force_square = 0;\n    }\n  }\n  // do not force square tiles\n  else {\n      // the height will be calculated normally - leading to wide tiles\n      params.viz.clust.dim.height = ini_clust_height;\n      // keep track of whether or not a force square has occurred\n      params.viz.force_square = 0;\n    }\n\n  // zoom_switch from 1 to 2d zoom\n  params.viz.zoom_switch = params.viz.clust.dim.width / params.viz.num_col_nodes / (params.viz.clust.dim.height / params.viz.num_row_nodes);\n\n  // zoom_switch can not be less than 1\n  if (params.viz.zoom_switch < 1) {\n    params.viz.zoom_switch = 1;\n  }\n\n  // Begin resizing the visualization\n\n  // resize the svg\n  ///////////////////////\n  var svg_group = d3.select(params.viz.viz_svg).attr('width', params.viz.svg_dim.width).attr('height', params.viz.svg_dim.height);\n\n  // redefine x_scale and y_scale rangeBands\n  params.matrix.x_scale.rangeBands([0, params.viz.clust.dim.width]);\n  params.matrix.y_scale.rangeBands([0, params.viz.clust.dim.height]);\n\n  // redefine x and y positions\n  _.each(params.network_data.links, function (d) {\n    d.x = params.matrix.x_scale(d.target);\n    d.y = params.matrix.y_scale(d.source);\n  });\n\n  // precalc rect_width and height\n  // params.matrix.rect_width = params.matrix.x_scale.rangeBand() - params.viz.border_width;\n  // params.matrix.rect_height = params.matrix.y_scale.rangeBand() - params.viz.border_width/params.viz.zoom_switch;\n  params.matrix.rect_width = params.matrix.x_scale.rangeBand();\n  params.matrix.rect_height = params.matrix.y_scale.rangeBand();\n\n  // // reset crossfilter\n  // params.cf = {};\n  // params.cf.links = crossfilter(params.network_data.links);\n  // params.cf.dim_x = params.cf.links.dimension(function(d){return d.x;});\n  // params.cf.dim_y = params.cf.links.dimension(function(d){return d.y;});\n\n  // // reset all crossfilter filters\n  // params.cf.dim_x.filterAll();\n  // params.cf.dim_y.filterAll();\n\n  // // redefine links - grab all links since filter is reset\n  // var inst_links = params.cf.dim_x.top(Infinity);\n\n  // redefine zoom extent\n  params.viz.real_zoom = params.norm_label.width.col / (params.matrix.rect_width / 2);\n\n  // disable zoom while transitioning\n  svg_group.on('.zoom', null);\n\n  params.zoom_behavior.scaleExtent([1, params.viz.real_zoom * params.viz.zoom_switch]).on('zoom', function () {\n    zoomed(params);\n  });\n\n  // reenable zoom after transition\n  if (params.viz.do_zoom) {\n    svg_group.call(params.zoom_behavior);\n  }\n\n  // prevent normal double click zoom etc\n  ini_doubleclick(params);\n\n  // redefine border width\n  params.viz.border_width = params.matrix.rect_width / 55;\n\n  // the default font sizes are set here\n  params.labels.default_fs_row = params.matrix.rect_height * 1.07;\n  params.labels.default_fs_col = params.matrix.rect_width * 0.87;\n\n  svg_group.select('.super_background').style('width', params.viz.svg_dim.width).style('height', params.viz.svg_dim.height);\n\n  svg_group.select('.grey_background').attr('width', params.viz.clust.dim.width).attr('height', params.viz.clust.dim.height);\n\n  // resize rows and tiles within rows\n\n  svg_group.selectAll('.row').attr('transform', function (d) {\n    var tmp_index = _.indexOf(row_nodes_names, d.name);\n    return 'translate(0,' + params.matrix.y_scale(tmp_index) + ')';\n  });\n\n  // reset tiles\n  svg_group.selectAll('.row').selectAll('.tile').attr('transform', function (d) {\n    var x_pos = params.matrix.x_scale(d.pos_x) + 0.5 * params.viz.border_width;\n    var y_pos = 0.5 * params.viz.border_width / params.viz.zoom_switch;\n    return 'translate(' + x_pos + ',' + y_pos + ')';\n  }).attr('width', params.matrix.rect_width).attr('height', params.matrix.rect_height);\n\n  // reset tile_up\n  svg_group.selectAll('.row').selectAll('.tile_up').attr('d', function () {\n    // up triangle\n    var start_x = 0;\n    var final_x = params.matrix.x_scale.rangeBand();\n    var start_y = 0;\n    var final_y = params.matrix.y_scale.rangeBand() - params.matrix.y_scale.rangeBand() / 60;\n\n    var output_string = 'M' + start_x + ',' + start_y + ', L' + start_x + ', ' + final_y + ', L' + final_x + ',0 Z';\n\n    return output_string;\n  }).attr('transform', function (d) {\n    var x_pos = params.matrix.x_scale(d.pos_x) + 0.5 * params.viz.border_width;\n    var y_pos = 0.5 * params.viz.border_width / params.viz.zoom_switch;\n    return 'translate(' + x_pos + ',' + y_pos + ')';\n  });\n\n  svg_group.selectAll('.row').selectAll('.tile_dn').attr('d', function () {\n    // dn triangle\n    var start_x = 0;\n    var final_x = params.matrix.x_scale.rangeBand();\n    var start_y = params.matrix.y_scale.rangeBand() - params.matrix.y_scale.rangeBand() / 60;\n    var final_y = params.matrix.y_scale.rangeBand() - params.matrix.y_scale.rangeBand() / 60;\n\n    var output_string = 'M' + start_x + ', ' + start_y + ' ,   L' + final_x + ', ' + final_y + ',  L' + final_x + ',0 Z';\n\n    return output_string;\n  }).attr('transform', function (d) {\n    var x_pos = params.matrix.x_scale(d.pos_x) + 0.5 * params.viz.border_width;\n    var y_pos = 0.5 * params.viz.border_width / params.viz.zoom_switch;\n    return 'translate(' + x_pos + ',' + y_pos + ')';\n  });\n\n  svg_group.selectAll('.highlighting_rect').attr('width', params.matrix.x_scale.rangeBand() * 0.80).attr('height', params.matrix.y_scale.rangeBand() * 0.80);\n\n  svg_group.selectAll('.tile_split_up').attr('d', function () {\n    var start_x = 0;\n    var final_x = params.matrix.x_scale.rangeBand();\n    var start_y = 0;\n    var final_y = params.matrix.y_scale.rangeBand() - params.matrix.y_scale.rangeBand() / 60;\n    var output_string = 'M' + start_x + ',' + start_y + ', L' + start_x + ', ' + final_y + ', L' + final_x + ',0 Z';\n    return output_string;\n  });\n\n  svg_group.selectAll('.tile_split_dn').attr('d', function () {\n    var start_x = 0;\n    var final_x = params.matrix.x_scale.rangeBand();\n    var start_y = params.matrix.y_scale.rangeBand() - params.matrix.y_scale.rangeBand() / 60;\n    var final_y = params.matrix.y_scale.rangeBand() - params.matrix.y_scale.rangeBand() / 60;\n    var output_string = 'M' + start_x + ', ' + start_y + ' ,   L' + final_x + ', ' + final_y + ',  L' + final_x + ',0 Z';\n    return output_string;\n  });\n\n  // reposition tile highlight\n  ////////////////////////////////\n\n  var rel_width_hlight = 6;\n  // var opacity_hlight = 0.85;\n  var hlight_width = rel_width_hlight * params.viz.border_width;\n  var hlight_height = rel_width_hlight * params.viz.border_width / params.viz.zoom_switch;\n\n  // top highlight\n  d3.select(params.root + ' .top_hlight').attr('width', params.matrix.rect_width).attr('height', hlight_height).attr('transform', function () {\n    return 'translate(' + params.matrix.x_scale(params.matrix.click_hlight_x) + ',0)';\n  });\n\n  // left highlight\n  d3.select(params.root + ' .left_hlight').attr('width', hlight_width).attr('height', params.matrix.rect_width - hlight_height * 0.99).attr('transform', function () {\n    return 'translate(' + params.matrix.x_scale(params.matrix.click_hlight_x) + ',' + hlight_height * 0.99 + ')';\n  });\n\n  // right highlight\n  d3.select(params.root + ' .right_hlight').attr('width', hlight_width).attr('height', params.matrix.rect_height - hlight_height * 0.99).attr('transform', function () {\n    var tmp_translate = params.matrix.x_scale(params.matrix.click_hlight_x) + params.matrix.rect_width - hlight_width;\n    return 'translate(' + tmp_translate + ',' + hlight_height * 0.99 + ')';\n  });\n\n  // bottom highlight\n  d3.select(params.root + ' .bottom_hlight').attr('width', function () {\n    return params.matrix.rect_width - 1.98 * hlight_width;\n  }).attr('height', hlight_height).attr('transform', function () {\n    var tmp_translate_x = params.matrix.x_scale(params.matrix.click_hlight_x) + hlight_width * 0.99;\n    var tmp_translate_y = params.matrix.rect_height - hlight_height;\n    return 'translate(' + tmp_translate_x + ',' + tmp_translate_y + ')';\n  });\n\n  // resize row highlight\n  /////////////////////////\n  d3.select(params.root + ' .row_top_hlight').attr('width', params.viz.svg_dim.width).attr('height', hlight_height);\n\n  d3.select(params.root + ' .row_bottom_hlight').attr('width', params.viz.svg_dim.width).attr('height', hlight_height).attr('transform', function () {\n    var tmp_translate_y = params.matrix.rect_height - hlight_height;\n    return 'translate(0,' + tmp_translate_y + ')';\n  });\n\n  // resize col highlight\n  /////////////////////////\n  d3.select(params.root + ' .col_top_hlight').attr('width', params.viz.clust.dim.height).attr('height', hlight_width).attr('transform', function () {\n    var tmp_translate_y = 0;\n    var tmp_translate_x = -(params.viz.clust.dim.height + params.class_room.col + params.viz.uni_margin);\n    return 'translate(' + tmp_translate_x + ',' + tmp_translate_y + ')';\n  });\n\n  d3.select(params.root + ' .col_bottom_hlight').attr('width', params.viz.clust.dim.height).attr('height', hlight_width).attr('transform', function () {\n    var tmp_translate_y = params.matrix.rect_width - hlight_width;\n    var tmp_translate_x = -(params.viz.clust.dim.height + params.class_room.col + params.viz.uni_margin);\n    return 'translate(' + tmp_translate_x + ',' + tmp_translate_y + ')';\n  });\n\n  // add text to row/col during resize\n  function normal_name(d) {\n    var inst_name = d.name.replace(/_/g, ' ').split('#')[0];\n    if (inst_name.length > params.labels.max_label_char) {\n      inst_name = inst_name.substring(0, params.labels.max_label_char) + '..';\n    }\n    return inst_name;\n  }\n\n  // resize row labels\n  ///////////////////////////\n\n  svg_group.select(params.root + ' row_container').attr('transform', 'translate(' + params.norm_label.margin.left + ',' + params.viz.clust.margin.top + ')');\n\n  svg_group.select(params.root + ' .row_container').select('.white_bars').attr('width', params.norm_label.background.row).attr('height', 30 * params.viz.clust.dim.height + 'px');\n\n  svg_group.select(params.root + ' .row_container').select('.row_label_container').attr('transform', 'translate(' + params.norm_label.width.row + ',0)');\n\n  svg_group.selectAll('.row_label_text').attr('transform', function (d) {\n    var inst_index = _.indexOf(row_nodes_names, d.name);\n    return 'translate(0,' + params.matrix.y_scale(inst_index) + ')';\n  });\n\n  svg_group.selectAll('.row_label_text').select('text').style('font-size', params.labels.default_fs_row + 'px').text(function (d) {\n    return normal_name(d);\n  });\n\n  // change the size of the highlighting rects\n  svg_group.selectAll('.row_label_text').each(function () {\n    var bbox = d3.select(this).select('text')[0][0].getBBox();\n    d3.select(this).select('rect').attr('x', bbox.x).attr('y', 0).attr('width', bbox.width).attr('height', params.matrix.rect_height).style('fill', 'yellow').style('opacity', function (d) {\n      var inst_opacity = 0;\n      // highlight target genes\n      if (d.target === 1) {\n        inst_opacity = 1;\n      }\n      return inst_opacity;\n    });\n  });\n\n  // label the widest row and col labels\n  params.bounding_width_max = {};\n  params.bounding_width_max.row = 0;\n  d3.selectAll(params.root + ' .row_label_text').each(function () {\n    var tmp_width = d3.select(this).select('text').node().getBBox().width;\n    if (tmp_width > params.bounding_width_max.row) {\n      params.bounding_width_max.row = tmp_width;\n    }\n  });\n\n  svg_group.select('.row_viz_container').attr('transform', 'translate(' + params.norm_label.width.row + ',0)');\n\n  svg_group.select('.row_viz_container').select('white_bars').attr('width', params.class_room.row + 'px').attr('height', function () {\n    var inst_height = params.viz.clust.dim.height;\n    return inst_height;\n  });\n\n  svg_group.selectAll('.row_viz_group').attr('transform', function (d) {\n    var inst_index = _.indexOf(row_nodes_names, d.name);\n    return 'translate(0, ' + params.matrix.y_scale(inst_index) + ')';\n  });\n\n  svg_group.selectAll('.row_viz_group').select('path').attr('d', function () {\n    var origin_x = params.class_room.symbol_width - 1;\n    var origin_y = 0;\n    var mid_x = 1;\n    var mid_y = params.matrix.rect_height / 2;\n    var final_x = params.class_room.symbol_width - 1;\n    var final_y = params.matrix.rect_height;\n    var output_string = 'M ' + origin_x + ',' + origin_y + ' L ' + mid_x + ',' + mid_y + ', L ' + final_x + ',' + final_y + ' Z';\n    return output_string;\n  });\n\n  if (utils.has(params.network_data.row_nodes[0], 'value')) {\n\n    // set bar scale\n    var enr_max = Math.abs(_.max(params.network_data.row_nodes, function (d) {\n      return Math.abs(d.value);\n    }).value);\n    params.labels.bar_scale_row = d3.scale.linear().domain([0, enr_max]).range([0, params.norm_label.width.row]);\n\n    svg_group.selectAll('.row_bars').attr('width', function (d) {\n      var inst_value = 0;\n      inst_value = params.labels.bar_scale_row(Math.abs(d.value));\n      return inst_value;\n    }).attr('x', function (d) {\n      var inst_value = 0;\n      inst_value = -params.labels.bar_scale_row(Math.abs(d.value));\n      return inst_value;\n    }).attr('height', params.matrix.rect_height);\n  }\n\n  // resize col labels\n  ///////////////////////\n  svg_group.select(params.root + ' .col_container').attr('transform', 'translate(' + params.viz.clust.margin.left + ',' + params.norm_label.margin.top + ')');\n\n  svg_group.select(params.root + ' .col_container').select('.white_bars').attr('width', 30 * params.viz.clust.dim.width + 'px').attr('height', params.norm_label.background.col);\n\n  svg_group.select(params.root + ' .col_container').select('.col_label_outer_container').attr('transform', 'translate(0,' + params.norm_label.width.col + ')');\n\n  // offset click group column label\n  var x_offset_click = params.matrix.rect_width / 2 + params.viz.border_width;\n  // reduce width of rotated rects\n  var reduce_rect_width = params.matrix.rect_width * 0.36;\n\n  svg_group.selectAll('.col_label_text').attr('transform', function (d) {\n    var inst_index = _.indexOf(col_nodes_names, d.name);\n    return 'translate(' + params.matrix.x_scale(inst_index) + ') rotate(-90)';\n  });\n\n  svg_group.selectAll('.col_label_click').attr('transform', 'translate(' + params.matrix.rect_width / 2 + ',' + x_offset_click + ') rotate(45)');\n\n  svg_group.selectAll('.col_label_click').select('text').attr('y', params.matrix.rect_width * 0.60).attr('dx', 2 * params.viz.border_width).style('font-size', params.labels.default_fs_col + 'px').text(function (d) {\n    return normal_name(d);\n  });\n\n  params.bounding_width_max.col = 0;\n  svg_group.selectAll('.col_label_click').each(function () {\n    var tmp_width = d3.select(this).select('text').node().getBBox().width;\n    if (tmp_width > params.bounding_width_max.col) {\n      params.bounding_width_max.col = tmp_width * 1.2;\n    }\n  });\n\n  // check if widest row or col are wider than the allowed label width\n  ////////////////////////////////////////////////////////////////////////\n  params.ini_scale_font = {};\n  params.ini_scale_font.row = 1;\n  params.ini_scale_font.col = 1;\n\n  if (params.bounding_width_max.row > params.norm_label.width.row) {\n\n    // calc reduction in font size\n    params.ini_scale_font.row = params.norm_label.width.row / params.bounding_width_max.row;\n    // redefine bounding_width_max.row\n    params.bounding_width_max.row = params.ini_scale_font.row * params.bounding_width_max.row;\n\n    // redefine default fs\n    params.labels.default_fs_row = params.labels.default_fs_row * params.ini_scale_font.row;\n    // reduce font size\n    d3.selectAll(params.root + ' .row_label_text').each(function () {\n      d3.select(this).select('text').style('font-size', params.labels.default_fs_row + 'px');\n    });\n  }\n\n  if (params.bounding_width_max.col > params.norm_label.width.col) {\n\n    // calc reduction in font size\n    params.ini_scale_font.col = params.norm_label.width.col / params.bounding_width_max.col;\n    // redefine bounding_width_max.col\n    params.bounding_width_max.col = params.ini_scale_font.col * params.bounding_width_max.col;\n    // redefine default fs\n    params.labels.default_fs_col = params.labels.default_fs_col * params.ini_scale_font.col;\n    // reduce font size\n    d3.selectAll(params.root + ' .col_label_click').each(function () {\n      d3.select(this).select('text').style('font-size', params.labels.default_fs_col + 'px');\n    });\n  }\n\n  svg_group.selectAll('.row_label_text').select('text').attr('y', params.matrix.rect_height * 0.5 + params.labels.default_fs_row * 0.35);\n\n  svg_group.selectAll('.col_label_click').each(function () {\n    d3.select(this).select('text')[0][0].getBBox();\n\n    // d3.select(this)\n    //   .select('rect')\n    //   .attr('x', bbox.x * 1.25)\n    //   .attr('y', 0)\n    //   .attr('width', bbox.width * 1.25)\n    //   .attr('height', params.matrix.rect_width * 0.6)\n    //   .style('fill', 'yellow')\n    //   .style('opacity', 0);\n  });\n\n  // resize column triangle\n  svg_group.selectAll('.col_label_click').select('path').attr('d', function () {\n    // x and y are flipped since its rotated\n    var origin_y = -params.viz.border_width;\n    var start_x = 0;\n    var final_x = params.matrix.rect_width - reduce_rect_width;\n    var start_y = -(params.matrix.rect_width - reduce_rect_width + params.viz.border_width);\n    var final_y = -params.viz.border_width;\n    var output_string = 'M ' + origin_y + ',0 L ' + start_y + ',' + start_x + ', L ' + final_y + ',' + final_x + ' Z';\n    return output_string;\n  }).attr('fill', function (d) {\n    var inst_color = '#eee';\n    if (params.labels.show_categories) {\n      inst_color = params.labels.class_colors.col[d.cl];\n    }\n    return inst_color;\n  });\n\n  // // append column value bars\n  // if (utils.has( params.network_data.col_nodes[0], 'value')) {\n\n  svg_group.selectAll('.col_bars').attr('width', function (d) {\n    var inst_value = 0;\n    if (d.value > 0) {\n      inst_value = params.labels.bar_scale_col(d.value);\n    }\n    return inst_value;\n  })\n  // rotate labels - reduce width if rotating\n  .attr('height', params.matrix.rect_width * 0.66);\n  // }\n\n  if (params.labels.show_categories) {\n    // change the size of the highlighting rects\n    d3.selectAll(params.root + ' .col_label_click').each(function () {\n      var bbox = d3.select(this).select('text')[0][0].getBBox();\n\n      d3.select(this).select('rect').attr('width', bbox.width * 1.1).attr('height', 0.67 * params.matrix.rect_width).style('fill', function (d) {\n        var inst_color = 'white';\n        if (params.labels.show_categories) {\n          inst_color = params.labels.class_colors.col[d.cl];\n        }\n        return inst_color;\n      }).style('opacity', 0.30);\n    });\n  }\n\n  // resize dendrogram\n  ///////////////////\n  svg_group.selectAll('.row_class_rect').attr('width', function () {\n    var inst_width = params.class_room.symbol_width - 1;\n    return inst_width + 'px';\n  }).attr('height', params.matrix.y_scale.rangeBand()).attr('x', function () {\n    var inst_offset = params.class_room.symbol_width + 1;\n    return inst_offset + 'px';\n  });\n\n  svg_group.selectAll('.col_class_rect').attr('width', params.matrix.x_scale.rangeBand()).attr('height', function () {\n    var inst_height = params.class_room.col - 1;\n    return inst_height;\n  });\n\n  svg_group.selectAll('.col_viz_group').attr('transform', function (d) {\n    var inst_index = _.indexOf(col_nodes_names, d.name);\n    return 'translate(' + params.matrix.x_scale(inst_index) + ',0)';\n  });\n\n  // reposition grid lines\n  ////////////////////////////\n  svg_group.selectAll('.horz_lines').attr('transform', function (d) {\n    var inst_index = _.indexOf(row_nodes_names, d.name);\n    return 'translate(0,' + params.matrix.y_scale(inst_index) + ') rotate(0)';\n  });\n\n  svg_group.selectAll('.horz_lines').select('line').attr('x2', params.viz.clust.dim.width).style('stroke-width', params.viz.border_width / params.viz.zoom_switch + 'px');\n\n  svg_group.selectAll('.vert_lines').attr('transform', function (d) {\n    var inst_index = _.indexOf(col_nodes_names, d.name);\n    return 'translate(' + params.matrix.x_scale(inst_index) + ') rotate(-90)';\n  });\n\n  svg_group.selectAll('.vert_lines').select('line').attr('x2', -params.viz.clust.dim.height).style('stroke-width', params.viz.border_width + 'px');\n\n  // var row_nodes = params.network_data.row_nodes;\n  // var col_nodes = params.network_data.col_nodes;\n\n  // draw_grid_lines(row_nodes, col_nodes);\n\n  // resize superlabels\n  /////////////////////////////////////\n  svg_group.select('.super_col_bkg').attr('height', params.labels.super_label_width + 'px').attr('transform', 'translate(0,' + params.viz.grey_border_width + ')');\n\n  // super col title\n  svg_group.select('.super_col').attr('transform', function () {\n    var inst_x = params.viz.clust.dim.width / 2 + params.norm_label.width.row;\n    var inst_y = params.labels.super_label_width - params.viz.uni_margin;\n    return 'translate(' + inst_x + ',' + inst_y + ')';\n  });\n\n  // super row title\n  svg_group.select('.super_row_bkg').attr('width', params.labels.super_label_width + 'px').attr('transform', 'translate(' + params.viz.grey_border_width + ',0)');\n\n  // append super title row group\n  svg_group.select('.super_row').attr('transform', function () {\n    var inst_x = params.labels.super_label_width - params.viz.uni_margin;\n    var inst_y = params.viz.clust.dim.height / 2 + params.norm_label.width.col;\n    return 'translate(' + inst_x + ',' + inst_y + ')';\n  });\n\n  // resize spillover\n  //////////////////////////\n  // hide spillover from slanted column labels on right side\n  svg_group.select('.right_slant_triangle').attr('transform', 'translate(' + params.viz.clust.dim.width + ',' + params.norm_label.width.col + ')');\n\n  svg_group.select('.left_slant_triangle').attr('transform', 'translate(-1,' + params.norm_label.width.col + ')');\n\n  svg_group.select('.top_left_white').attr('width', params.viz.clust.margin.left).attr('height', params.viz.clust.margin.top);\n\n  svg_group.select('.right_spillover').attr('transform', function () {\n    var tmp_left = params.viz.clust.margin.left + params.viz.clust.dim.width;\n    var tmp_top = params.norm_label.margin.top + params.norm_label.width.col;\n    return 'translate(' + tmp_left + ',' + tmp_top + ')';\n  });\n\n  // white border bottom - prevent clustergram from hitting border\n  svg_group.select('.bottom_spillover').attr('width', params.viz.svg_dim.width).attr('height', 2 * params.viz.grey_border_width).attr('transform', function () {\n    // shift up enough to show the entire border width\n    var inst_offset = params.viz.svg_dim.height - 3 * params.viz.grey_border_width;\n    return 'translate(0,' + inst_offset + ')';\n  });\n\n  // add border to svg in four separate lines - to not interfere with clicking anything\n  ///////////////////////////////////////////////////////////////////////////////////////\n  // left border\n  svg_group.select('.left_border').attr('width', params.viz.grey_border_width).attr('height', params.viz.svg_dim.height).attr('transform', 'translate(0,0)');\n\n  // right border\n  svg_group.select('.right_border').attr('width', params.viz.grey_border_width).attr('height', params.viz.svg_dim.height).attr('transform', function () {\n    var inst_offset = params.viz.svg_dim.width - params.viz.grey_border_width;\n    return 'translate(' + inst_offset + ',0)';\n  });\n\n  // top border\n  svg_group.select('.top_border').attr('width', params.viz.svg_dim.width).attr('height', params.viz.grey_border_width).attr('transform', function () {\n    var inst_offset = 0;\n    return 'translate(' + inst_offset + ',0)';\n  });\n\n  // bottom border\n  svg_group.select('.bottom_border').attr('width', params.viz.svg_dim.width).attr('height', params.viz.grey_border_width).attr('transform', function () {\n    var inst_offset = params.viz.svg_dim.height - params.viz.grey_border_width;\n    return 'translate(0,' + inst_offset + ')';\n  });\n\n  // reset zoom and translate\n  //////////////////////////////\n  params.zoom_behavior.scale(1).translate([params.viz.clust.margin.left, params.viz.clust.margin.top]);\n\n  d3.select(params.viz.viz_svg).style('opacity', 1);\n};//@ sourceMappingURL=data:application/json;base64,");

/***/ },
/* 34 */
/***/ function(module, exports, __webpack_require__) {

	eval("var two_translate_zoom = __webpack_require__(30);\n\nmodule.exports = function (params) {\n  // disable double-click zoom\n  d3.selectAll(params.viz.viz_svg).on('dblclick.zoom', null);\n\n  d3.select(params.viz.viz_svg).on('dblclick', function () {\n    two_translate_zoom(params, 0, 0, 1);\n  });\n};//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzQuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vc3JjL2luaV9kb3VibGVjbGljay5qcz9iOTAwIl0sInNvdXJjZXNDb250ZW50IjpbInZhciB0d29fdHJhbnNsYXRlX3pvb20gPSByZXF1aXJlKCcuL3R3b190cmFuc2xhdGVfem9vbScpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKHBhcmFtcykge1xuICAvLyBkaXNhYmxlIGRvdWJsZS1jbGljayB6b29tXG4gIGQzLnNlbGVjdEFsbChwYXJhbXMudml6LnZpel9zdmcpLm9uKCdkYmxjbGljay56b29tJywgbnVsbCk7XG5cbiAgZDMuc2VsZWN0KHBhcmFtcy52aXoudml6X3N2ZylcbiAgICAub24oJ2RibGNsaWNrJywgZnVuY3Rpb24oKSB7XG4gICAgICB0d29fdHJhbnNsYXRlX3pvb20ocGFyYW1zLCAwLCAwLCAxKTtcbiAgICB9KTtcbn07XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiBzcmMvaW5pX2RvdWJsZWNsaWNrLmpzXG4gKiovIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBRUE7QUFEQTtBQUxBIiwic291cmNlUm9vdCI6IiJ9");

/***/ },
/* 35 */
/***/ function(module, exports, __webpack_require__) {

	eval("var utils = __webpack_require__(2);\nvar get_inst_group = __webpack_require__(36);\nvar build_color_groups = __webpack_require__(37);\n\nmodule.exports = function (params, dom_class) {\n  var col_nodes = params.network_data.col_nodes;\n  var col_nodes_names = _.pluck(col_nodes, 'name');\n\n  // append groups - each will hold a classification rect\n  d3.select(params.root + ' .col_viz_zoom_container').selectAll('g').data(col_nodes, function (d) {\n    return d.name;\n  }).enter().append('g').attr('class', 'col_viz_group').attr('transform', function (d) {\n    var inst_index = _.indexOf(col_nodes_names, d.name);\n    return 'translate(' + params.matrix.x_scale(inst_index) + ',0)';\n  });\n\n  d3.selectAll(params.root + ' .col_viz_group').each(function () {\n\n    var inst_level = params.group_level.col;\n\n    var dendro_rect = d3.select(this).append('rect').attr('class', dom_class).attr('width', params.matrix.x_scale.rangeBand()).attr('height', function () {\n      var inst_height = params.class_room.col - 1;\n      return inst_height;\n    }).style('fill', function (d) {\n      if (utils.has(d, 'group')) {\n        var group_colors = build_color_groups(params);\n        var inst_color = group_colors[d.group[inst_level]];\n      } else {\n        inst_color = '#eee';\n      }\n      return inst_color;\n    });\n\n    if (typeof params.click_group === 'function') {\n      dendro_rect.on('click', function (d) {\n        var group_nodes_list = get_inst_group(params, 'col', d);\n        params.click_group('col', group_nodes_list);\n      });\n    }\n  });\n};//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzUuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vc3JjL2RlbmRyb2dyYW0vYnVpbGRfY29sX2RlbmRyby5qcz85Y2Y3Il0sInNvdXJjZXNDb250ZW50IjpbInZhciB1dGlscyA9IHJlcXVpcmUoJy4uL3V0aWxzJyk7XG52YXIgZ2V0X2luc3RfZ3JvdXAgPSByZXF1aXJlKCcuL2dldF9pbnN0X2dyb3VwJyk7XG52YXIgYnVpbGRfY29sb3JfZ3JvdXBzID0gcmVxdWlyZSgnLi9idWlsZF9jb2xvcl9ncm91cHMnKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAocGFyYW1zLCBkb21fY2xhc3MpIHtcbiAgdmFyIGNvbF9ub2RlcyA9IHBhcmFtcy5uZXR3b3JrX2RhdGEuY29sX25vZGVzO1xuICB2YXIgY29sX25vZGVzX25hbWVzID0gXy5wbHVjayhjb2xfbm9kZXMsICduYW1lJyk7XG5cbiAgLy8gYXBwZW5kIGdyb3VwcyAtIGVhY2ggd2lsbCBob2xkIGEgY2xhc3NpZmljYXRpb24gcmVjdFxuICBkMy5zZWxlY3QocGFyYW1zLnJvb3QrJyAuY29sX3Zpel96b29tX2NvbnRhaW5lcicpXG4gICAgLnNlbGVjdEFsbCgnZycpXG4gICAgLmRhdGEoY29sX25vZGVzLCBmdW5jdGlvbihkKXsgcmV0dXJuIGQubmFtZTsgfSlcbiAgICAuZW50ZXIoKVxuICAgIC5hcHBlbmQoJ2cnKVxuICAgIC5hdHRyKCdjbGFzcycsICdjb2xfdml6X2dyb3VwJylcbiAgICAuYXR0cigndHJhbnNmb3JtJywgZnVuY3Rpb24oZCkge1xuICAgICAgdmFyIGluc3RfaW5kZXggPSBfLmluZGV4T2YoY29sX25vZGVzX25hbWVzLCBkLm5hbWUpO1xuICAgICAgcmV0dXJuICd0cmFuc2xhdGUoJyArIHBhcmFtcy5tYXRyaXgueF9zY2FsZShpbnN0X2luZGV4KSArICcsMCknO1xuICAgIH0pO1xuXG4gIGQzLnNlbGVjdEFsbChwYXJhbXMucm9vdCsnIC5jb2xfdml6X2dyb3VwJylcbiAgICAuZWFjaChmdW5jdGlvbigpIHtcblxuICAgICAgdmFyIGluc3RfbGV2ZWwgPSBwYXJhbXMuZ3JvdXBfbGV2ZWwuY29sO1xuXG4gICAgICB2YXIgZGVuZHJvX3JlY3QgPSBkMy5zZWxlY3QodGhpcylcbiAgICAgICAgLmFwcGVuZCgncmVjdCcpXG4gICAgICAgIC5hdHRyKCdjbGFzcycsIGRvbV9jbGFzcylcbiAgICAgICAgLmF0dHIoJ3dpZHRoJywgcGFyYW1zLm1hdHJpeC54X3NjYWxlLnJhbmdlQmFuZCgpKVxuICAgICAgICAuYXR0cignaGVpZ2h0JywgZnVuY3Rpb24oKSB7XG4gICAgICAgICAgdmFyIGluc3RfaGVpZ2h0ID0gcGFyYW1zLmNsYXNzX3Jvb20uY29sIC0gMTtcbiAgICAgICAgICByZXR1cm4gaW5zdF9oZWlnaHQ7XG4gICAgICAgIH0pXG4gICAgICAgIC5zdHlsZSgnZmlsbCcsIGZ1bmN0aW9uKGQpIHtcbiAgICAgICAgICBpZiAodXRpbHMuaGFzKGQsJ2dyb3VwJykpe1xuICAgICAgICAgICAgdmFyIGdyb3VwX2NvbG9ycyA9IGJ1aWxkX2NvbG9yX2dyb3VwcyhwYXJhbXMpO1xuICAgICAgICAgICAgdmFyIGluc3RfY29sb3IgPSBncm91cF9jb2xvcnNbZC5ncm91cFtpbnN0X2xldmVsXV07XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGluc3RfY29sb3IgPSAnI2VlZSc7XG4gICAgICAgICAgfVxuICAgICAgICAgIHJldHVybiBpbnN0X2NvbG9yO1xuICAgICAgICB9KTtcblxuICAgICAgaWYgKHR5cGVvZiBwYXJhbXMuY2xpY2tfZ3JvdXAgPT09ICdmdW5jdGlvbicpe1xuICAgICAgICBkZW5kcm9fcmVjdFxuICAgICAgICAgIC5vbignY2xpY2snLGZ1bmN0aW9uKGQpe1xuICAgICAgICAgICAgdmFyIGdyb3VwX25vZGVzX2xpc3QgPSBnZXRfaW5zdF9ncm91cChwYXJhbXMsICdjb2wnLCBkKTtcbiAgICAgICAgICAgIHBhcmFtcy5jbGlja19ncm91cCgnY29sJywgZ3JvdXBfbm9kZXNfbGlzdCk7XG4gICAgICAgICAgfSk7XG4gICAgICB9XG5cbiAgfSk7XG59O1xuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogc3JjL2RlbmRyb2dyYW0vYnVpbGRfY29sX2RlbmRyby5qc1xuICoqLyJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFIQTtBQU9BO0FBQUE7QUFLQTtBQUNBO0FBRkE7QUFDQTtBQUlBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFLQTtBQUNBO0FBRkE7QUFLQTtBQUNBO0FBQ0E7QUFGQTtBQUlBO0FBSkE7QUFNQTtBQVBBO0FBQ0E7QUFTQTtBQUNBO0FBRUE7QUFDQTtBQUZBO0FBRkE7QUF0QkE7QUFqQkEiLCJzb3VyY2VSb290IjoiIn0=");

/***/ },
/* 36 */
/***/ function(module, exports) {

	eval("module.exports = function (params, inst_rc, d) {\n  var inst_level;\n  var inst_nodes;\n\n  if (inst_rc === 'col') {\n    inst_level = params.group_level.col;\n    inst_nodes = params.network_data.col_nodes;\n  } else if (inst_rc === 'row') {\n    inst_level = params.group_level.row;\n    inst_nodes = params.network_data.row_nodes;\n  }\n\n  var inst_group = d.group[inst_level];\n  var group_nodes_list = [];\n\n  inst_nodes.forEach(function (node) {\n    if (node.group[inst_level] === inst_group) {\n      group_nodes_list.push(node.name);\n    }\n  });\n\n  return group_nodes_list;\n};//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzYuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vc3JjL2RlbmRyb2dyYW0vZ2V0X2luc3RfZ3JvdXAuanM/NDM3YiJdLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKHBhcmFtcywgaW5zdF9yYywgZCkge1xuICB2YXIgaW5zdF9sZXZlbDtcbiAgdmFyIGluc3Rfbm9kZXM7XG5cbiAgaWYgKGluc3RfcmMgPT09ICdjb2wnKSB7XG4gICAgaW5zdF9sZXZlbCA9IHBhcmFtcy5ncm91cF9sZXZlbC5jb2w7XG4gICAgaW5zdF9ub2RlcyA9IHBhcmFtcy5uZXR3b3JrX2RhdGEuY29sX25vZGVzO1xuICB9IGVsc2UgaWYgKGluc3RfcmMgPT09ICdyb3cnKSB7XG4gICAgaW5zdF9sZXZlbCA9IHBhcmFtcy5ncm91cF9sZXZlbC5yb3c7XG4gICAgaW5zdF9ub2RlcyA9IHBhcmFtcy5uZXR3b3JrX2RhdGEucm93X25vZGVzO1xuICB9XG5cbiAgdmFyIGluc3RfZ3JvdXAgPSBkLmdyb3VwW2luc3RfbGV2ZWxdO1xuICB2YXIgZ3JvdXBfbm9kZXNfbGlzdCA9IFtdO1xuXG4gIGluc3Rfbm9kZXMuZm9yRWFjaChmdW5jdGlvbihub2RlKSB7XG4gICAgaWYgKG5vZGUuZ3JvdXBbaW5zdF9sZXZlbF0gPT09IGluc3RfZ3JvdXApe1xuICAgICAgZ3JvdXBfbm9kZXNfbGlzdC5wdXNoKG5vZGUubmFtZSk7XG4gICAgfVxuICB9KTtcblxuICByZXR1cm4gZ3JvdXBfbm9kZXNfbGlzdDtcbn07XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiBzcmMvZGVuZHJvZ3JhbS9nZXRfaW5zdF9ncm91cC5qc1xuICoqLyJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFGQTtBQUlBO0FBQ0E7QUFGQTtBQUNBO0FBSUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBREE7QUFEQTtBQUNBO0FBS0E7QUFyQkEiLCJzb3VyY2VSb290IjoiIn0=");

/***/ },
/* 37 */
/***/ function(module, exports, __webpack_require__) {

	eval("var colors = __webpack_require__(3);\n\nmodule.exports = function (params) {\n  var group_colors = [];\n  // var max_groups;\n  //\n  // if (params.network_data.row_nodes.length > params.network_data.col_nodes.length) {\n  //   max_groups = params.network_data.row_nodes;\n  // } else {\n  //   max_groups = params.network_data.col_nodes;\n  // }\n\n  for (var i = 0; i < params.network_data.row_nodes.length; i++) {\n    // grab colors from the list\n    if (i === 1) {\n      group_colors[i] = colors.get_default_color();\n    } else {\n      group_colors[i] = colors.get_random_color(i);\n    }\n  }\n\n  return group_colors;\n};//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzcuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vc3JjL2RlbmRyb2dyYW0vYnVpbGRfY29sb3JfZ3JvdXBzLmpzPzYyZTUiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIGNvbG9ycyA9IHJlcXVpcmUoJy4uL2NvbG9ycycpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKHBhcmFtcykge1xuICB2YXIgZ3JvdXBfY29sb3JzID0gW107XG4gIC8vIHZhciBtYXhfZ3JvdXBzO1xuICAvL1xuICAvLyBpZiAocGFyYW1zLm5ldHdvcmtfZGF0YS5yb3dfbm9kZXMubGVuZ3RoID4gcGFyYW1zLm5ldHdvcmtfZGF0YS5jb2xfbm9kZXMubGVuZ3RoKSB7XG4gIC8vICAgbWF4X2dyb3VwcyA9IHBhcmFtcy5uZXR3b3JrX2RhdGEucm93X25vZGVzO1xuICAvLyB9IGVsc2Uge1xuICAvLyAgIG1heF9ncm91cHMgPSBwYXJhbXMubmV0d29ya19kYXRhLmNvbF9ub2RlcztcbiAgLy8gfVxuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgcGFyYW1zLm5ldHdvcmtfZGF0YS5yb3dfbm9kZXMubGVuZ3RoOyBpKyspIHtcbiAgICAvLyBncmFiIGNvbG9ycyBmcm9tIHRoZSBsaXN0XG4gICAgaWYgKGkgPT09IDEpIHtcbiAgICAgIGdyb3VwX2NvbG9yc1tpXSA9IGNvbG9ycy5nZXRfZGVmYXVsdF9jb2xvcigpO1xuICAgIH0gZWxzZSB7XG4gICAgICBncm91cF9jb2xvcnNbaV0gPSBjb2xvcnMuZ2V0X3JhbmRvbV9jb2xvcihpKTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gZ3JvdXBfY29sb3JzO1xufTtcblxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIHNyYy9kZW5kcm9ncmFtL2J1aWxkX2NvbG9yX2dyb3Vwcy5qc1xuICoqLyJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7Ozs7Ozs7OztBQURBOztBQVlBO0FBQ0E7QUFEQTtBQUdBO0FBSEE7QUFGQTtBQUNBO0FBUUE7QUFuQkEiLCJzb3VyY2VSb290IjoiIn0=");

/***/ },
/* 38 */
/***/ function(module, exports, __webpack_require__) {

	eval("var utils = __webpack_require__(2);\nvar get_inst_group = __webpack_require__(36);\nvar build_color_groups = __webpack_require__(37);\n\nmodule.exports = function (params, dom_class) {\n\n  d3.selectAll(params.root + ' .row_viz_group').each(function () {\n\n    var inst_level = params.group_level.row;\n\n    var dendro_rect = d3.select(this).append('rect').attr('class', dom_class).attr('width', function () {\n      var inst_width = params.class_room.symbol_width - 1;\n      return inst_width + 'px';\n    }).attr('height', params.matrix.y_scale.rangeBand()).style('fill', function (d) {\n      if (utils.has(d, 'group')) {\n        var group_colors = build_color_groups(params);\n        var inst_color = group_colors[d.group[inst_level]];\n      } else {\n        inst_color = '#eee';\n      }\n\n      return inst_color;\n    }).attr('x', function () {\n      var inst_offset = params.class_room.symbol_width + 1;\n      return inst_offset + 'px';\n    });\n\n    // show group in modal\n    if (typeof params.click_group === 'function') {\n      dendro_rect.on('click', function (d) {\n        var group_nodes_list = get_inst_group(params, 'row', d);\n        params.click_group('row', group_nodes_list);\n      });\n    }\n  });\n};//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzguanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vc3JjL2RlbmRyb2dyYW0vYnVpbGRfcm93X2RlbmRyby5qcz9hZTQ4Il0sInNvdXJjZXNDb250ZW50IjpbInZhciB1dGlscyA9IHJlcXVpcmUoJy4uL3V0aWxzJyk7XG52YXIgZ2V0X2luc3RfZ3JvdXAgPSByZXF1aXJlKCcuL2dldF9pbnN0X2dyb3VwJyk7XG52YXIgYnVpbGRfY29sb3JfZ3JvdXBzID0gcmVxdWlyZSgnLi9idWlsZF9jb2xvcl9ncm91cHMnKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihwYXJhbXMsIGRvbV9jbGFzcykge1xuXG4gIGQzLnNlbGVjdEFsbChwYXJhbXMucm9vdCsnIC5yb3dfdml6X2dyb3VwJylcbiAgICAuZWFjaChmdW5jdGlvbigpIHtcblxuICAgICAgdmFyIGluc3RfbGV2ZWwgPSBwYXJhbXMuZ3JvdXBfbGV2ZWwucm93O1xuXG4gICAgICB2YXIgZGVuZHJvX3JlY3QgPSBkMy5zZWxlY3QodGhpcylcbiAgICAgICAgLmFwcGVuZCgncmVjdCcpXG4gICAgICAgIC5hdHRyKCdjbGFzcycsIGRvbV9jbGFzcylcbiAgICAgICAgLmF0dHIoJ3dpZHRoJywgZnVuY3Rpb24oKSB7XG4gICAgICAgICAgdmFyIGluc3Rfd2lkdGggPSBwYXJhbXMuY2xhc3Nfcm9vbS5zeW1ib2xfd2lkdGggLSAxO1xuICAgICAgICAgIHJldHVybiBpbnN0X3dpZHRoICsgJ3B4JztcbiAgICAgICAgfSlcbiAgICAgICAgLmF0dHIoJ2hlaWdodCcsIHBhcmFtcy5tYXRyaXgueV9zY2FsZS5yYW5nZUJhbmQoKSlcbiAgICAgICAgLnN0eWxlKCdmaWxsJywgZnVuY3Rpb24oZCkge1xuICAgICAgICAgIGlmICh1dGlscy5oYXMoZCwnZ3JvdXAnKSl7XG4gICAgICAgICAgICB2YXIgZ3JvdXBfY29sb3JzID0gYnVpbGRfY29sb3JfZ3JvdXBzKHBhcmFtcyk7XG4gICAgICAgICAgICB2YXIgaW5zdF9jb2xvciA9IGdyb3VwX2NvbG9yc1tkLmdyb3VwW2luc3RfbGV2ZWxdXTtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgaW5zdF9jb2xvciA9ICcjZWVlJztcbiAgICAgICAgICB9XG5cbiAgICAgICAgICByZXR1cm4gaW5zdF9jb2xvcjtcbiAgICAgICAgfSlcbiAgICAgICAgLmF0dHIoJ3gnLCBmdW5jdGlvbigpIHtcbiAgICAgICAgICB2YXIgaW5zdF9vZmZzZXQgPSBwYXJhbXMuY2xhc3Nfcm9vbS5zeW1ib2xfd2lkdGggKyAxO1xuICAgICAgICAgIHJldHVybiBpbnN0X29mZnNldCArICdweCc7XG4gICAgICAgIH0pO1xuXG4gICAgICAvLyBzaG93IGdyb3VwIGluIG1vZGFsXG4gICAgICBpZiAodHlwZW9mIHBhcmFtcy5jbGlja19ncm91cCA9PT0gJ2Z1bmN0aW9uJyl7XG4gICAgICAgIGRlbmRyb19yZWN0XG4gICAgICAgICAgLm9uKCdjbGljaycsIGZ1bmN0aW9uKGQpe1xuICAgICAgICAgICAgdmFyIGdyb3VwX25vZGVzX2xpc3QgPSBnZXRfaW5zdF9ncm91cChwYXJhbXMsICdyb3cnLCBkKTtcbiAgICAgICAgICAgIHBhcmFtcy5jbGlja19ncm91cCgncm93JywgZ3JvdXBfbm9kZXNfbGlzdCk7XG4gICAgICAgICAgfSk7XG4gICAgICB9XG5cbiAgICB9KTtcblxufTtcblxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIHNyYy9kZW5kcm9ncmFtL2J1aWxkX3Jvd19kZW5kcm8uanNcbiAqKi8iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFJQTtBQUNBO0FBRkE7QUFNQTtBQUNBO0FBQ0E7QUFGQTtBQUlBO0FBSkE7QUFDQTtBQU1BO0FBUkE7QUFXQTtBQUNBO0FBRkE7QUFDQTs7QUF2QkE7QUE2QkE7QUFFQTtBQUNBO0FBRkE7QUFGQTtBQTVCQTtBQUhBIiwic291cmNlUm9vdCI6IiJ9");

/***/ },
/* 39 */,
/* 40 */,
/* 41 */
/***/ function(module, exports, __webpack_require__) {

	eval("var build_color_groups = __webpack_require__(37);\n\n/* Changes the groupings (x- and y-axis color bars).\n */\nmodule.exports = function (params, inst_rc, inst_index) {\n\n  var dom_class;\n\n  var group_colors = build_color_groups(params);\n\n  if (inst_rc == 'row') {\n    dom_class = 'row_class_rect';\n  } else {\n    dom_class = 'col_class_rect';\n  }\n\n  d3.selectAll(params.root + ' .' + dom_class).style('fill', function (d) {\n    var inst_group = d.group[inst_index];\n    return group_colors[inst_group];\n  });\n\n  if (inst_rc === 'row') {\n    params.group_level.row = inst_index;\n  } else if (inst_rc === 'col') {\n    params.group_level.col = inst_index;\n  }\n};//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNDEuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vc3JjL2RlbmRyb2dyYW0vY2hhbmdlX2dyb3Vwcy5qcz9mYzk3Il0sInNvdXJjZXNDb250ZW50IjpbInZhciBidWlsZF9jb2xvcl9ncm91cHMgPSByZXF1aXJlKCcuL2J1aWxkX2NvbG9yX2dyb3VwcycpO1xuXG4vKiBDaGFuZ2VzIHRoZSBncm91cGluZ3MgKHgtIGFuZCB5LWF4aXMgY29sb3IgYmFycykuXG4gKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKHBhcmFtcywgaW5zdF9yYywgaW5zdF9pbmRleCkge1xuXG4gIHZhciBkb21fY2xhc3M7XG5cbiAgdmFyIGdyb3VwX2NvbG9ycyA9IGJ1aWxkX2NvbG9yX2dyb3VwcyhwYXJhbXMpO1xuXG4gIGlmIChpbnN0X3JjPT0ncm93Jyl7XG4gICAgZG9tX2NsYXNzID0gJ3Jvd19jbGFzc19yZWN0JztcbiAgfSBlbHNlIHtcbiAgICBkb21fY2xhc3MgPSAnY29sX2NsYXNzX3JlY3QnO1xuICB9XG5cbiAgZDMuc2VsZWN0QWxsKHBhcmFtcy5yb290KycgLicgKyBkb21fY2xhc3MpXG4gICAgLnN0eWxlKCdmaWxsJywgZnVuY3Rpb24oZCkge1xuICAgICAgdmFyIGluc3RfZ3JvdXAgPSBkLmdyb3VwW2luc3RfaW5kZXhdO1xuICAgICAgcmV0dXJuIGdyb3VwX2NvbG9yc1sgaW5zdF9ncm91cCBdO1xuICAgIH0pO1xuXG4gIGlmIChpbnN0X3JjPT09J3Jvdycpe1xuICAgIHBhcmFtcy5ncm91cF9sZXZlbC5yb3cgPSBpbnN0X2luZGV4O1xuICB9IGVsc2UgaWYgKGluc3RfcmM9PT0nY29sJyl7XG4gICAgcGFyYW1zLmdyb3VwX2xldmVsLmNvbCA9IGluc3RfaW5kZXg7XG4gIH1cbn07XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiBzcmMvZGVuZHJvZ3JhbS9jaGFuZ2VfZ3JvdXBzLmpzXG4gKiovIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBOzs7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBREE7QUFHQTtBQUhBO0FBQ0E7QUFLQTtBQUVBO0FBQ0E7QUFGQTtBQUNBO0FBSUE7QUFDQTtBQURBO0FBR0E7QUFEQTtBQXBCQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ },
/* 42 */
/***/ function(module, exports) {

	eval("\nmodule.exports = function (params, inst_order, row_col) {\n\n  params.viz.run_trans = true;\n\n  // save order state\n  if (row_col === 'row') {\n    params.viz.inst_order.row = inst_order;\n  } else if (row_col === 'col') {\n    params.viz.inst_order.col = inst_order;\n  }\n\n  var row_nodes_obj = params.network_data.row_nodes;\n  var row_nodes_names = _.pluck(row_nodes_obj, 'name');\n\n  var col_nodes_obj = params.network_data.col_nodes;\n  var col_nodes_names = _.pluck(col_nodes_obj, 'name');\n\n  if (row_col === 'row') {\n    // load orders\n    if (inst_order === 'ini') {\n      params.matrix.x_scale.domain(params.matrix.orders.ini_row);\n    } else if (inst_order === 'clust') {\n      params.matrix.x_scale.domain(params.matrix.orders.clust_row);\n    } else if (inst_order === 'rank') {\n      params.matrix.x_scale.domain(params.matrix.orders.rank_row);\n    } else if (inst_order === 'class') {\n      params.matrix.x_scale.domain(params.matrix.orders.class_row);\n    }\n  } else if (row_col == 'col') {\n    // load orders\n    if (inst_order === 'ini') {\n      params.matrix.y_scale.domain(params.matrix.orders.ini_col);\n    } else if (inst_order === 'clust') {\n      params.matrix.y_scale.domain(params.matrix.orders.clust_col);\n    } else if (inst_order === 'rank') {\n      params.matrix.y_scale.domain(params.matrix.orders.rank_col);\n    } else if (inst_order === 'class') {\n      // params.matrix.x_scale.domain(params.matrix.orders.class_row);\n      params.matrix.y_scale.domain(params.matrix.orders.class_col);\n    }\n  }\n\n  var t;\n\n  // only animate transition if there are a small number of tiles\n  if (d3.selectAll(params.root + ' .tile')[0].length < params.matrix.def_large_matrix) {\n\n    // define the t variable as the transition function\n    t = d3.select(params.root + ' .clust_group').transition().duration(2500);\n\n    t.selectAll('.row').attr('transform', function (d) {\n      var tmp_index = _.indexOf(row_nodes_names, d.name);\n      return 'translate(0,' + params.matrix.y_scale(tmp_index) + ')';\n    }).selectAll('.tile').attr('transform', function (d) {\n      return 'translate(' + params.matrix.x_scale(d.pos_x) + ' , 0)';\n    });\n\n    t.selectAll('.tile_up').attr('transform', function (d) {\n      return 'translate(' + params.matrix.x_scale(d.pos_x) + ' , 0)';\n    });\n\n    t.selectAll('.tile_dn').attr('transform', function (d) {\n      return 'translate(' + params.matrix.x_scale(d.pos_x) + ' , 0)';\n    });\n\n    // Move Row Labels\n    d3.select(params.root + ' .row_label_zoom_container').selectAll('.row_label_text').transition().duration(2500).attr('transform', function (d) {\n      var inst_index = _.indexOf(row_nodes_names, d.name);\n      return 'translate(0,' + params.matrix.y_scale(inst_index) + ')';\n    });\n\n    // t.selectAll('.column')\n    d3.select(params.root + ' .col_zoom_container').selectAll('.col_label_text').transition().duration(2500).attr('transform', function (d) {\n      var inst_index = _.indexOf(col_nodes_names, d.name);\n      return 'translate(' + params.matrix.x_scale(inst_index) + ') rotate(-90)';\n    });\n\n    // reorder row_label_triangle groups\n    d3.selectAll(params.root + ' .row_viz_group').transition().duration(2500).attr('transform', function (d) {\n      var inst_index = _.indexOf(row_nodes_names, d.name);\n      return 'translate(0,' + params.matrix.y_scale(inst_index) + ')';\n    });\n\n    // reorder col_class groups\n    d3.selectAll(params.root + ' .col_viz_group').transition().duration(2500).attr('transform', function (d) {\n      var inst_index = _.indexOf(col_nodes_names, d.name);\n      return 'translate(' + params.matrix.x_scale(inst_index) + ',0)';\n    });\n  } else {\n\n    // define the t variable as the transition function\n    t = d3.select(params.root + ' .clust_group');\n\n    // reorder matrix\n    t.selectAll('.row').attr('transform', function (d) {\n      var tmp_index = _.indexOf(row_nodes_names, d.name);\n      return 'translate(0,' + params.matrix.y_scale(tmp_index) + ')';\n    }).selectAll('.tile').attr('transform', function (d) {\n      return 'translate(' + params.matrix.x_scale(d.pos_x) + ' , 0)';\n    });\n\n    t.selectAll('.tile_up').attr('transform', function (d) {\n      return 'translate(' + params.matrix.x_scale(d.pos_x) + ' , 0)';\n    });\n\n    t.selectAll('.tile_dn').attr('transform', function (d) {\n      return 'translate(' + params.matrix.x_scale(d.pos_x) + ' , 0)';\n    });\n\n    // Move Row Labels\n    d3.select(params.root + ' .row_label_zoom_container').selectAll('.row_label_text').attr('transform', function (d) {\n      var inst_index = _.indexOf(row_nodes_names, d.name);\n      return 'translate(0,' + params.matrix.y_scale(inst_index) + ')';\n    });\n\n    // t.selectAll('.column')\n    d3.select(params.root + ' .col_zoom_container').selectAll('.col_label_text').attr('transform', function (d) {\n      var inst_index = _.indexOf(col_nodes_names, d.name);\n      return 'translate(' + params.matrix.x_scale(inst_index) + ') rotate(-90)';\n    });\n\n    // reorder row_label_triangle groups\n    d3.selectAll(params.root + ' .row_viz_group').attr('transform', function (d) {\n      var inst_index = _.indexOf(row_nodes_names, d.name);\n      return 'translate(0,' + params.matrix.y_scale(inst_index) + ')';\n    });\n\n    // reorder col_class groups\n    d3.selectAll(params.root + ' .col_viz_group').attr('transform', function (d) {\n      var inst_index = _.indexOf(col_nodes_names, d.name);\n      return 'translate(' + params.matrix.x_scale(inst_index) + ',0)';\n    });\n  }\n\n  // redefine x and y positions\n  params.network_data.links.forEach(function (d) {\n    d.x = params.matrix.x_scale(d.target);\n    d.y = params.matrix.y_scale(d.source);\n  });\n\n  setTimeout(function () {\n    params.viz.run_trans = false;\n  }, 2500);\n};//@ sourceMappingURL=data:application/json;base64,");

/***/ },
/* 43 */,
/* 44 */
/***/ function(module, exports, __webpack_require__) {

	eval("var make_params = __webpack_require__(5);\nvar change_network_view = __webpack_require__(6);\nvar initialize_resizing = __webpack_require__(31);\nvar ini_doubleclick = __webpack_require__(34);\nvar enter_exit_update = __webpack_require__(45);\nvar define_enter_exit_delays = __webpack_require__(48);\nvar build_col_dendro = __webpack_require__(35);\nvar build_row_dendro = __webpack_require__(38);\nvar ini_sidebar = __webpack_require__(55);\n\nmodule.exports = function (config, old_params, change_view) {\n\n  // make new_network_data by filtering the original network data\n  var config_copy = jQuery.extend(true, {}, config);\n\n  var new_network_data = change_network_view(old_params, config_copy.network_data, change_view);\n\n  // make tmp config to make new params\n  var tmp_config = jQuery.extend(true, {}, config);\n\n  tmp_config.network_data = new_network_data;\n  tmp_config.inst_order = old_params.viz.inst_order;\n  tmp_config.ini_expand = false;\n  tmp_config.ini_view = null;\n  tmp_config.current_col_cat = old_params.current_col_cat;\n\n  var params = make_params(tmp_config);\n  var delays = define_enter_exit_delays(old_params, params);\n\n  enter_exit_update(params, new_network_data, delays);\n\n  // redefine change_group function\n  if (params.viz.show_dendrogram) {\n    build_row_dendro(params, 'row_class_rect');\n    build_col_dendro(params, 'col_class_rect');\n  }\n\n  // initialize screen resizing - necessary for resizing with new params\n  initialize_resizing(params);\n\n  // necessary to have zoom behavior updated on updating clustergram\n  d3.select(params.viz.viz_svg).call(params.zoom_behavior);\n\n  // re-initialize the double click behavior\n  ini_doubleclick(params);\n\n  ini_sidebar(params);\n\n  params.viz.run_trans = true;\n\n  d3.selectAll(params.root + ' .d3-tip').remove();\n\n  // return updated params\n  return params;\n};//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNDQuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vc3JjL25ldHdvcmsvdXBkYXRlX25ldHdvcmsuanM/YmVmNSJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgbWFrZV9wYXJhbXMgPSByZXF1aXJlKCcuLi9wYXJhbXMnKTtcbnZhciBjaGFuZ2VfbmV0d29ya192aWV3ID0gcmVxdWlyZSgnLi9jaGFuZ2VfbmV0d29ya192aWV3Jyk7XG52YXIgaW5pdGlhbGl6ZV9yZXNpemluZyA9IHJlcXVpcmUoJy4uL2luaXRpYWxpemVfcmVzaXppbmcnKTtcbnZhciBpbmlfZG91YmxlY2xpY2sgPSByZXF1aXJlKCcuLi9pbmlfZG91YmxlY2xpY2snKTtcbnZhciBlbnRlcl9leGl0X3VwZGF0ZSA9IHJlcXVpcmUoJy4vZW50ZXJfZXhpdF91cGRhdGUnKTtcbnZhciBkZWZpbmVfZW50ZXJfZXhpdF9kZWxheXMgPSByZXF1aXJlKCcuL2RlZmluZV9lbnRlcl9leGl0X2RlbGF5cycpO1xudmFyIGJ1aWxkX2NvbF9kZW5kcm8gPSByZXF1aXJlKCcuLi9kZW5kcm9ncmFtL2J1aWxkX2NvbF9kZW5kcm8nKTtcbnZhciBidWlsZF9yb3dfZGVuZHJvID0gcmVxdWlyZSgnLi4vZGVuZHJvZ3JhbS9idWlsZF9yb3dfZGVuZHJvJyk7XG52YXIgaW5pX3NpZGViYXIgPSByZXF1aXJlKCcuLi9zaWRlYmFyL2luaV9zaWRlYmFyJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oY29uZmlnLCBvbGRfcGFyYW1zLCBjaGFuZ2Vfdmlldykge1xuXG4gIC8vIG1ha2UgbmV3X25ldHdvcmtfZGF0YSBieSBmaWx0ZXJpbmcgdGhlIG9yaWdpbmFsIG5ldHdvcmsgZGF0YVxuICB2YXIgY29uZmlnX2NvcHkgPSBqUXVlcnkuZXh0ZW5kKHRydWUsIHt9LCBjb25maWcpO1xuXG4gIHZhciBuZXdfbmV0d29ya19kYXRhID0gY2hhbmdlX25ldHdvcmtfdmlldyhvbGRfcGFyYW1zLCBjb25maWdfY29weS5uZXR3b3JrX2RhdGEsIGNoYW5nZV92aWV3KTtcblxuICAvLyBtYWtlIHRtcCBjb25maWcgdG8gbWFrZSBuZXcgcGFyYW1zIFxuICB2YXIgdG1wX2NvbmZpZyA9IGpRdWVyeS5leHRlbmQodHJ1ZSwge30sIGNvbmZpZyk7XG5cbiAgdG1wX2NvbmZpZy5uZXR3b3JrX2RhdGEgPSBuZXdfbmV0d29ya19kYXRhO1xuICB0bXBfY29uZmlnLmluc3Rfb3JkZXIgPSBvbGRfcGFyYW1zLnZpei5pbnN0X29yZGVyO1xuICB0bXBfY29uZmlnLmluaV9leHBhbmQgPSBmYWxzZTtcbiAgdG1wX2NvbmZpZy5pbmlfdmlldyA9IG51bGw7XG4gIHRtcF9jb25maWcuY3VycmVudF9jb2xfY2F0ID0gb2xkX3BhcmFtcy5jdXJyZW50X2NvbF9jYXQ7XG5cbiAgdmFyIHBhcmFtcyA9IG1ha2VfcGFyYW1zKHRtcF9jb25maWcpO1xuICB2YXIgZGVsYXlzID0gZGVmaW5lX2VudGVyX2V4aXRfZGVsYXlzKG9sZF9wYXJhbXMsIHBhcmFtcyk7XG5cbiAgZW50ZXJfZXhpdF91cGRhdGUocGFyYW1zLCBuZXdfbmV0d29ya19kYXRhLCBkZWxheXMpO1xuXG4gIC8vIHJlZGVmaW5lIGNoYW5nZV9ncm91cCBmdW5jdGlvblxuICBpZiAocGFyYW1zLnZpei5zaG93X2RlbmRyb2dyYW0pe1xuICAgIGJ1aWxkX3Jvd19kZW5kcm8ocGFyYW1zLCAncm93X2NsYXNzX3JlY3QnKTtcbiAgICBidWlsZF9jb2xfZGVuZHJvKHBhcmFtcywgJ2NvbF9jbGFzc19yZWN0Jyk7XG4gIH1cblxuICAvLyBpbml0aWFsaXplIHNjcmVlbiByZXNpemluZyAtIG5lY2Vzc2FyeSBmb3IgcmVzaXppbmcgd2l0aCBuZXcgcGFyYW1zXG4gIGluaXRpYWxpemVfcmVzaXppbmcocGFyYW1zKTtcblxuICAvLyBuZWNlc3NhcnkgdG8gaGF2ZSB6b29tIGJlaGF2aW9yIHVwZGF0ZWQgb24gdXBkYXRpbmcgY2x1c3RlcmdyYW1cbiAgZDMuc2VsZWN0KHBhcmFtcy52aXoudml6X3N2ZykuY2FsbChwYXJhbXMuem9vbV9iZWhhdmlvcik7XG5cbiAgLy8gcmUtaW5pdGlhbGl6ZSB0aGUgZG91YmxlIGNsaWNrIGJlaGF2aW9yXG4gIGluaV9kb3VibGVjbGljayhwYXJhbXMpO1xuXG4gIGluaV9zaWRlYmFyKHBhcmFtcyk7XG5cbiAgcGFyYW1zLnZpei5ydW5fdHJhbnMgPSB0cnVlO1xuICBcbiAgZDMuc2VsZWN0QWxsKHBhcmFtcy5yb290KycgLmQzLXRpcCcpXG4gICAgLnJlbW92ZSgpO1xuXG4gIC8vIHJldHVybiB1cGRhdGVkIHBhcmFtcyBcbiAgcmV0dXJuIHBhcmFtcztcblxufTtcblxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIHNyYy9uZXR3b3JrL3VwZGF0ZV9uZXR3b3JrLmpzXG4gKiovIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBTkE7QUFDQTtBQVNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBcEJBO0FBdUJBO0FBQ0E7QUFGQTtBQUNBOztBQXZCQTtBQUNBOztBQURBO0FBQ0E7O0FBREE7QUFDQTtBQW1DQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBekNBO0FBQUEiLCJzb3VyY2VSb290IjoiIn0=");

/***/ },
/* 45 */
/***/ function(module, exports, __webpack_require__) {

	eval("var resize_after_update = __webpack_require__(46);\nvar make_rows = __webpack_require__(19);\nvar make_cols = __webpack_require__(24);\nvar eeu_existing_row = __webpack_require__(47);\n\nmodule.exports = function (params, network_data, delays) {\n\n  // remove old tooltips\n  d3.selectAll(params.root + ' .d3-tip').remove();\n\n  if (params.matrix.show_tile_tooltips) {\n    // d3-tooltip - for tiles\n    var tip = d3.tip().attr('class', 'd3-tip').direction('n').offset([0, 0]).html(params.matrix.make_tile_tooltip);\n\n    d3.select(params.root + '.clust_group').call(tip);\n  }\n\n  // reposition matrix\n  d3.select(params.root + ' .clust_container').attr('transform', 'translate(' + params.viz.clust.margin.left + ',' + params.viz.clust.margin.top + ')');\n\n  // reposition row container\n  d3.select(params.root + ' .row_viz_container').attr('transform', 'translate(' + params.norm_label.width.row + ',0)');\n\n  // reposition col container\n  d3.select(params.root + ' .col_label_outer_container').attr('transform', 'translate(0,' + params.norm_label.width.col + ')');\n\n  // reposition col_viz container\n  d3.select(params.root + ' .col_viz_outer_container').attr('transform', function () {\n    var inst_offset = params.norm_label.width.col + 2;\n    return 'translate(0,' + inst_offset + ')';\n  });\n\n  // get row and col names\n  var row_nodes_names = params.network_data.row_nodes_names;\n  var col_nodes_names = params.network_data.col_nodes_names;\n\n  var duration = 1000;\n\n  // make global so that names can be accessed\n  var row_nodes = network_data.row_nodes;\n  var col_nodes = network_data.col_nodes;\n  var links = network_data.links;\n\n  //\n  var tile_data = links;\n\n  // add name to links for object constancy\n  for (var i = 0; i < tile_data.length; i++) {\n    var d = tile_data[i];\n    tile_data[i].name = row_nodes[d.source].name + '_' + col_nodes[d.target].name;\n  }\n\n  // exit\n  ////////////\n\n  // remove entire rows\n  var exiting_rows = d3.select(params.root + ' .clust_group').selectAll('.row').data(params.matrix.matrix, function (d) {\n    return d.name;\n  }).exit();\n\n  if (delays.run_transition) {\n    exiting_rows.transition().duration(duration).style('opacity', 0).remove();\n  } else {\n    exiting_rows.style('opacity', 0).remove();\n  }\n\n  // move rows\n  var move_rows = d3.select(params.root + ' .clust_group').selectAll('.row').data(params.matrix.matrix, function (d) {\n    return d.name;\n  });\n\n  if (delays.run_transition) {\n    move_rows.transition().delay(delays.update).duration(duration).attr('transform', function (d) {\n      var tmp_index = _.indexOf(row_nodes_names, d.name);\n      return 'translate(0,' + params.matrix.y_scale(tmp_index) + ')';\n    });\n  } else {\n    move_rows.attr('transform', function (d) {\n      var tmp_index = _.indexOf(row_nodes_names, d.name);\n      return 'translate(0,' + params.matrix.y_scale(tmp_index) + ')';\n    });\n  }\n\n  // update existing rows - enter, exit, update tiles in existing row\n  d3.select(params.root + ' .clust_group').selectAll('.row').each(function (d) {\n    // TODO add tip back to arguments\n    var tmp = this;\n    eeu_existing_row(params, d, delays, duration, tmp);\n  });\n\n  d3.selectAll(params.root + ' .horz_lines').remove();\n  d3.selectAll(params.root + ' .vert_lines').remove();\n\n  // remove row labels\n  d3.selectAll(params.root + ' .row_label_text').data(row_nodes, function (d) {\n    return d.name;\n  }).exit().transition().duration(duration).style('opacity', 0).remove();\n\n  // remove column labels\n  d3.selectAll(params.root + ' .col_label_click').data(col_nodes, function (d) {\n    return d.name;\n  }).exit().transition().duration(duration).style('opacity', 0).remove();\n\n  // remove row triangles and colorbars\n  d3.selectAll(params.root + ' .row_viz_group').data(row_nodes, function (d) {\n    return d.name;\n  }).exit().transition().duration(duration).style('opacity', 0).remove();\n\n  d3.selectAll(params.root + ' .col_label_text').data(col_nodes, function (d) {\n    return d.name;\n  }).exit().transition().duration(duration).style('opacity', 0).remove();\n\n  d3.selectAll(params.root + ' .horz_lines').data(row_nodes, function (d) {\n    return d.name;\n  }).exit().transition().duration(duration).style('opacity', 0).remove();\n\n  d3.selectAll(params.root + ' .vert_lines').data(col_nodes, function (d) {\n    return d.name;\n  }).exit().transition().duration(duration).style('opacity', 0).remove();\n\n  // remove dendrogram\n  d3.selectAll(params.root + ' .col_viz_group').data(col_nodes, function (d) {\n    return d.name;\n  }).exit().transition().duration(duration).style('opacity', 0).remove();\n\n  // resize clust components using appropriate delays\n  resize_after_update(params, row_nodes, col_nodes, links, duration, delays);\n\n  // enter new elements\n  //////////////////////////\n\n  // enter new rows\n  var new_row_groups = d3.select(params.root + ' .clust_group').selectAll('.row').data(params.matrix.matrix, function (d) {\n    return d.name;\n  }).enter().append('g').attr('class', 'row').attr('transform', function (d) {\n    var tmp_index = _.indexOf(row_nodes_names, d.name);\n    return 'translate(0,' + params.matrix.y_scale(tmp_index) + ')';\n  });\n\n  new_row_groups.each(enter_new_rows);\n\n  // make each row in the clustergrao\n  function enter_new_rows(ini_inp_row_data) {\n\n    var inp_row_data = ini_inp_row_data.row_data;\n\n    // remove zero values to make visualization faster\n    var row_data = _.filter(inp_row_data, function (num) {\n      return num.value !== 0;\n    });\n\n    // update tiles\n    ////////////////////////////////////////////\n    var tile = d3.select(this).selectAll('rect').data(row_data, function (d) {\n      return d.col_name;\n    }).enter().append('rect').attr('class', 'tile row_tile').attr('width', params.matrix.rect_width).attr('height', params.matrix.rect_height)\n    // switch the color based on up/dn value\n    .style('fill', function (d) {\n      return d.value > 0 ? params.matrix.tile_colors[0] : params.matrix.tile_colors[1];\n    }).on('mouseover', function (p) {\n      // highlight row - set text to active if\n      d3.selectAll(params.root + ' .row_label_text text').classed('active', function (d) {\n        return p.row_name === d.name;\n      });\n\n      d3.selectAll(params.root + ' .col_label_text text').classed('active', function (d) {\n        return p.col_name === d.name;\n      });\n    }).on('mouseout', function mouseout() {\n      d3.selectAll(params.root + ' text').classed('active', false);\n    });\n\n    tile.style('fill-opacity', 0).transition().delay(delays.enter).duration(duration).style('fill-opacity', function (d) {\n      // calculate output opacity using the opacity scale\n      var output_opacity = params.matrix.opacity_scale(Math.abs(d.value));\n      return output_opacity;\n    });\n\n    tile.attr('transform', function (d) {\n      var x_pos = params.matrix.x_scale(d.pos_x) + 0.5 * params.viz.border_width;\n      var y_pos = 0.5 * params.viz.border_width / params.viz.zoom_switch;\n      return 'translate(' + x_pos + ',' + y_pos + ')';\n    });\n\n    if (params.matrix.tile_type == 'updn') {\n\n      // value split\n      var row_split_data = _.filter(inp_row_data, function (num) {\n        return num.value_up != 0 || num.value_dn != 0;\n      });\n\n      // tile_up\n      var new_tiles_up = d3.select(this).selectAll('.tile_up').data(row_split_data, function (d) {\n        return d.col_name;\n      }).enter().append('path').attr('class', 'tile_up').attr('d', function () {\n\n        // up triangle\n        var start_x = 0;\n        var final_x = params.matrix.x_scale.rangeBand();\n        var start_y = 0;\n        var final_y = params.matrix.y_scale.rangeBand() - params.matrix.y_scale.rangeBand() / 60;\n\n        var output_string = 'M' + start_x + ',' + start_y + ', L' + start_x + ', ' + final_y + ', L' + final_x + ',0 Z';\n\n        return output_string;\n      }).attr('transform', function (d) {\n        var x_pos = params.matrix.x_scale(d.pos_x) + 0.5 * params.viz.border_width;\n        var y_pos = 0.5 * params.viz.border_width / params.viz.zoom_switch;\n        return 'translate(' + x_pos + ',' + y_pos + ')';\n      }).style('fill', function () {\n        return params.matrix.tile_colors[0];\n      }).on('mouseover', function (p) {\n        // highlight row - set text to active if\n        d3.selectAll(params.root + ' .row_label_text text').classed('active', function (d) {\n          return p.row_name === d.name;\n        });\n\n        d3.selectAll(params.root + ' .col_label_text text').classed('active', function (d) {\n          return p.col_name === d.name;\n        });\n        if (params.matrix.show_tile_tooltips) {\n          tip.show(p);\n        }\n      }).on('mouseout', function () {\n        d3.selectAll(params.root + ' text').classed('active', false);\n        if (params.matrix.show_tile_tooltips) {\n          tip.hide();\n        }\n      });\n\n      new_tiles_up.style('fill-opacity', 0).transition().delay(delays.enter).duration(duration).style('fill-opacity', function (d) {\n        var inst_opacity = 0;\n        if (Math.abs(d.value_dn) > 0) {\n          inst_opacity = params.matrix.opacity_scale(Math.abs(d.value_up));\n        }\n        return inst_opacity;\n      });\n\n      // tile_dn\n      var new_tiles_dn = d3.select(this).selectAll('.tile_dn').data(row_split_data, function (d) {\n        return d.col_name;\n      }).enter().append('path').attr('class', 'tile_dn').attr('d', function () {\n\n        // dn triangle\n        var start_x = 0;\n        var final_x = params.matrix.x_scale.rangeBand();\n        var start_y = params.matrix.y_scale.rangeBand() - params.matrix.y_scale.rangeBand() / 60;\n        var final_y = params.matrix.y_scale.rangeBand() - params.matrix.y_scale.rangeBand() / 60;\n\n        var output_string = 'M' + start_x + ', ' + start_y + ' ,   L' + final_x + ', ' + final_y + ',  L' + final_x + ',0 Z';\n\n        return output_string;\n      }).attr('transform', function (d) {\n        var x_pos = params.matrix.x_scale(d.pos_x) + 0.5 * params.viz.border_width;\n        var y_pos = 0.5 * params.viz.border_width / params.viz.zoom_switch;\n        return 'translate(' + x_pos + ',' + y_pos + ')';\n      }).style('fill', function () {\n        return params.matrix.tile_colors[1];\n      }).on('mouseover', function (p) {\n        // highlight row - set text to active if\n        d3.selectAll(params.root + ' .row_label_text text').classed('active', function (d) {\n          return p.row_name === d.name;\n        });\n\n        d3.selectAll(params.root + ' .col_label_text text').classed('active', function (d) {\n          return p.col_name === d.name;\n        });\n        if (params.matrix.show_tile_tooltips) {\n          tip.show(p);\n        }\n      }).on('mouseout', function () {\n        d3.selectAll(params.root + ' text').classed('active', false);\n        if (params.matrix.show_tile_tooltips) {\n          tip.hide();\n        }\n      });\n\n      new_tiles_dn.style('fill-opacity', 0).transition().delay(delays.enter).duration(duration).style('fill-opacity', function (d) {\n        var inst_opacity = 0;\n        if (Math.abs(d.value_up) > 0) {\n          inst_opacity = params.matrix.opacity_scale(Math.abs(d.value_dn));\n        }\n        return inst_opacity;\n      });\n\n      // remove tiles when splitting is done\n      tile.each(function (d) {\n        if (Math.abs(d.value_up) > 0 && Math.abs(d.value_dn) > 0) {\n          d3.select(this).remove();\n        }\n      });\n    }\n  }\n\n  // var labels = Labels(params);\n\n  make_rows(params, duration);\n  make_cols(params, duration);\n\n  // Fade in new gridlines\n  ///////////////////////////\n\n  // append horizontal lines\n  d3.select(params.root + ' .clust_group').selectAll('.horz_lines').data(row_nodes, function (d) {\n    return d.name;\n  }).enter().append('g').attr('class', 'horz_lines').attr('transform', function (d) {\n    var inst_index = _.indexOf(row_nodes_names, d.name);\n    return 'translate(0,' + params.matrix.y_scale(inst_index) + ') rotate(0)';\n  }).append('line').attr('x1', 0).attr('x2', params.viz.clust.dim.width).style('stroke-width', params.viz.border_width / params.viz.zoom_switch + 'px').style('stroke', 'white').attr('opacity', 0).transition().delay(delays.enter).duration(2 * duration).attr('opacity', 1);\n\n  // append vertical line groups\n  d3.select(params.root + ' .clust_group').selectAll('.vert_lines').data(col_nodes).enter().append('g').attr('class', 'vert_lines').attr('transform', function (d) {\n    var inst_index = _.indexOf(col_nodes_names, d.name);\n    return 'translate(' + params.matrix.x_scale(inst_index) + ') rotate(-90)';\n  }).append('line').attr('x1', 0).attr('x2', -params.viz.clust.dim.height).style('stroke-width', params.viz.border_width + 'px').style('stroke', 'white').attr('opacity', 0).transition().delay(delays.enter).duration(2 * duration).attr('opacity', 1);\n};//@ sourceMappingURL=data:application/json;base64,");

/***/ },
/* 46 */
/***/ function(module, exports, __webpack_require__) {

	eval("var utils = __webpack_require__(2);\n\nmodule.exports = function (params, row_nodes, col_nodes, links, duration, delays) {\n\n  var row_nodes_names = params.network_data.row_nodes_names;\n  var col_nodes_names = params.network_data.col_nodes_names;\n\n  // reset zoom\n  //////////////////////////////\n  var zoom_y = 1;\n  // var zoom_x = 1;\n  var pan_dx = 0;\n  var pan_dy = 0;\n\n  var half_height = params.viz.clust.dim.height / 2;\n  var center_y = -(zoom_y - 1) * half_height;\n\n  d3.select(params.root + ' .clust_group').attr('transform', 'translate(' + [0, 0 + center_y] + ')' + ' scale(' + 1 + ',' + zoom_y + ')' + 'translate(' + [pan_dx, pan_dy] + ')');\n\n  d3.select(params.root + ' .row_label_zoom_container').attr('transform', 'translate(' + [0, center_y] + ')' + ' scale(' + zoom_y + ',' + zoom_y + ')' + 'translate(' + [0, pan_dy] + ')');\n\n  d3.select(params.root + ' .row_zoom_container').attr('transform', 'translate(' + [0, center_y] + ')' + ' scale(' + 1 + ',' + zoom_y + ')' + 'translate(' + [0, pan_dy] + ')');\n\n  d3.select(params.root + ' .col_zoom_container').attr('transform', ' scale(' + 1 + ',' + 1 + ')' + 'translate(' + [pan_dx, 0] + ')');\n\n  d3.select(params.root + ' .col_viz_zoom_container').attr('transform', ' scale(' + 1 + ',' + 1 + ')' + 'translate(' + [pan_dx, 0] + ')');\n\n  // // set y translate: center_y is positive, positive moves the visualization down\n  // // the translate vector has the initial margin, the first y centering, and pan_dy\n  // // times the scaling zoom_y\n  // var net_y_offset = params.viz.clust.margin.top + center_y + pan_dy * zoom_y;\n\n  // Resetting some visualization parameters\n  ///////////////////////////////////////////////\n\n  // get height and width from parent div\n  params.viz.svg_dim = {};\n  params.viz.svg_dim.width = Number(d3.select(params.viz.viz_wrapper).style('width').replace('px', ''));\n  params.viz.svg_dim.height = Number(d3.select(params.viz.viz_wrapper).style('height').replace('px', ''));\n\n  // reduce width by row/col labels and by grey_border width (reduce width by less since this is less aparent with slanted col labels)\n  var ini_clust_width = params.viz.svg_dim.width - (params.labels.super_label_width + params.norm_label.width.row + params.class_room.row) - params.viz.grey_border_width - params.viz.spillover_x_offset;\n\n  // there is space between the clustergram and the border\n  var ini_clust_height = params.viz.svg_dim.height - (params.labels.super_label_width + params.norm_label.width.col + params.class_room.col) - 5 * params.viz.grey_border_width;\n\n  // reduce clustergram width if triangles are taller than the normal width\n  // of the columns\n  var tmp_x_scale = d3.scale.ordinal().rangeBands([0, ini_clust_width]);\n  tmp_x_scale.domain(params.matrix.orders.ini_row);\n  var triangle_height = tmp_x_scale.rangeBand() / 2;\n  if (triangle_height > params.norm_label.width.col) {\n    ini_clust_width = ini_clust_width * (params.norm_label.width.col / triangle_height);\n  }\n  params.viz.clust.dim.width = ini_clust_width;\n\n  // clustergram height\n  ////////////////////////\n  // ensure that rects are never taller than they are wide\n  // force square tiles\n  if (ini_clust_width / params.viz.num_col_nodes < ini_clust_height / params.viz.num_row_nodes) {\n\n    // scale the height\n    params.viz.clust.dim.height = ini_clust_width * (params.viz.num_row_nodes / params.viz.num_col_nodes);\n\n    // keep track of whether or not a force square has occurred\n    // so that I can adjust the font accordingly\n    params.viz.force_square = 1;\n\n    // make sure that force_square does not cause the entire visualization\n    // to be taller than the svg, if it does, then undo\n    if (params.viz.clust.dim.height > ini_clust_height) {\n      // make the height equal to the width\n      params.viz.clust.dim.height = ini_clust_height;\n      // keep track of whether or not a force square has occurred\n      params.viz.force_square = 0;\n    }\n  }\n  // do not force square tiles\n  else {\n      // the height will be calculated normally - leading to wide tiles\n      params.viz.clust.dim.height = ini_clust_height;\n      // keep track of whether or not a force square has occurred\n      params.viz.force_square = 0;\n    }\n\n  // zoom_switch from 1 to 2d zoom\n  params.viz.zoom_switch = params.viz.clust.dim.width / params.viz.num_col_nodes / (params.viz.clust.dim.height / params.viz.num_row_nodes);\n\n  // zoom_switch can not be less than 1\n  if (params.viz.zoom_switch < 1) {\n    params.viz.zoom_switch = 1;\n  }\n\n  // redefine x_scale and y_scale rangeBands\n  params.matrix.x_scale.rangeBands([0, params.viz.clust.dim.width]);\n  params.matrix.y_scale.rangeBands([0, params.viz.clust.dim.height]);\n\n  // redefine zoom extent\n  params.viz.real_zoom = params.norm_label.width.col / (params.matrix.x_scale.rangeBand() / 2);\n  params.zoom_behavior.scaleExtent([1, params.viz.real_zoom * params.viz.zoom_switch]);\n\n  // redefine border width\n  params.viz.border_width = params.matrix.x_scale.rangeBand() / 40;\n\n  // the default font sizes are set here\n  params.labels.default_fs_row = params.matrix.y_scale.rangeBand() * 1.01;\n  params.labels.default_fs_col = params.matrix.x_scale.rangeBand() * 0.85;\n\n  // Begin resizing the visualization\n  /////////////////////////////////////////\n  /////////////////////////////////////////\n\n  // resize the svg\n  ///////////////////////\n  var svg_group = d3.select(params.viz.viz_wrapper).select('svg');\n\n  svg_group.select(params.root + ' .grey_background').transition().delay(delays.update).duration(duration).attr('width', params.viz.clust.dim.width).attr('height', params.viz.clust.dim.height);\n\n  //////////////////////\n  // set up later\n  //////////////////////\n  // svg_group.selectAll('.highlighting_rect')\n  //   // .transition().delay(delays.update).duration(duration)\n  //   .attr('width', params.matrix.x_scale.rangeBand() * 0.80)\n  //   .attr('height', params.matrix.y_scale.rangeBand() * 0.80);\n  // svg_group.selectAll('.tile_split_up')\n  //   // .transition().delay(delays.update).duration(duration)\n  //   .attr('d', function() {\n  //     var start_x = 0;\n  //     var final_x = params.matrix.x_scale.rangeBand();\n  //     var start_y = 0;\n  //     var final_y = params.matrix.y_scale.rangeBand() - params.matrix.y_scale.rangeBand()/60;\n  //     var output_string = 'M' + start_x + ',' + start_y + ', L' +\n  //       start_x + ', ' + final_y + ', L' + final_x + ',0 Z';\n  //     return output_string;\n  //   })\n  // svg_group.selectAll('.tile_split_dn')\n  //   // .transition().delay(delays.update).duration(duration)\n  //   .attr('d', function() {\n  //     var start_x = 0;\n  //     var final_x = params.matrix.x_scale.rangeBand();\n  //     var start_y = params.matrix.y_scale.rangeBand() - params.matrix.y_scale.rangeBand()/60;\n  //     var final_y = params.matrix.y_scale.rangeBand() - params.matrix.y_scale.rangeBand()/60;\n  //     var output_string = 'M' + start_x + ', ' + start_y + ' ,   L' +\n  //       final_x + ', ' + final_y + ',  L' + final_x + ',0 Z';\n  //     return output_string;\n  //   })\n\n  // add text to row/col during resize\n  function normal_name(d) {\n    var inst_name = d.name.replace(/_/g, ' ').split('#')[0];\n    if (inst_name.length > params.labels.max_label_char) {\n      inst_name = inst_name.substring(0, params.labels.max_label_char) + '..';\n    }\n    return inst_name;\n  }\n\n  // resize row labels\n  ///////////////////////////\n\n  if (delays.run_transition) {\n\n    svg_group.select(params.root + ' .row_container').transition().delay(delays.update).duration(duration).attr('transform', 'translate(' + params.norm_label.margin.left + ',' + params.viz.clust.margin.top + ')');\n\n    svg_group.select(params.root + ' .row_container').select('.white_bars').transition().delay(delays.update).duration(duration).attr('width', params.norm_label.background.row).attr('height', 30 * params.viz.clust.dim.height + 'px');\n\n    svg_group.select(params.root + ' .row_container').select('.row_label_container').transition().delay(delays.update).duration(duration).attr('transform', 'translate(' + params.norm_label.width.row + ',0)');\n\n    svg_group.selectAll('.row_label_text').data(row_nodes, function (d) {\n      return d.name;\n    }).transition().delay(delays.update).duration(duration).attr('transform', function (d) {\n      var inst_index = _.indexOf(row_nodes_names, d.name);\n      return 'translate(0,' + params.matrix.y_scale(inst_index) + ')';\n    }).attr('y', params.matrix.rect_height * 0.5 + params.labels.default_fs_row * 0.35);\n  } else {\n    svg_group.select(params.root + ' .row_container').attr('transform', 'translate(' + params.norm_label.margin.left + ',' + params.viz.clust.margin.top + ')');\n\n    svg_group.select(params.root + ' .row_container').select('.white_bars').attr('width', params.norm_label.background.row).attr('height', 30 * params.viz.clust.dim.height + 'px');\n\n    svg_group.select(params.root + ' .row_container').select('.row_label_container').attr('transform', 'translate(' + params.norm_label.width.row + ',0)');\n\n    svg_group.selectAll('.row_label_text').data(row_nodes, function (d) {\n      return d.name;\n    }).attr('transform', function (d) {\n      var inst_index = _.indexOf(row_nodes_names, d.name);\n      return 'translate(0,' + params.matrix.y_scale(inst_index) + ')';\n    }).attr('y', params.matrix.rect_height * 0.5 + params.labels.default_fs_row * 0.35);\n  }\n\n  // do not delay the font size change since this will break the bounding box calc\n  svg_group.selectAll('.row_label_text').select('text').style('font-size', params.labels.default_fs_row + 'px').text(function (d) {\n    return normal_name(d);\n  });\n\n  // change the size of the highlighting rects\n  svg_group.selectAll('.row_label_text').each(function () {\n    var bbox = d3.select(this).select('text')[0][0].getBBox();\n    d3.select(this).select('rect').attr('x', bbox.x).attr('y', 0).attr('width', bbox.width).attr('height', params.matrix.y_scale.rangeBand()).style('fill', 'yellow').style('opacity', function (d) {\n      var inst_opacity = 0;\n      // highlight target genes\n      if (d.target === 1) {\n        inst_opacity = 1;\n      }\n      return inst_opacity;\n    });\n  });\n\n  // label the widest row and col labels\n  params.bounding_width_max = {};\n  params.bounding_width_max.row = 0;\n  d3.selectAll(params.root + ' .row_label_text').each(function () {\n    var tmp_width = d3.select(this).select('text').node().getBBox().width;\n    if (tmp_width > params.bounding_width_max.row) {\n      params.bounding_width_max.row = tmp_width;\n    }\n  });\n\n  // check if widest row or col are wider than the allowed label width\n  ////////////////////////////////////////////////////////////////////////\n  params.ini_scale_font = {};\n  params.ini_scale_font.row = 1;\n  params.ini_scale_font.col = 1;\n\n  if (params.bounding_width_max.row > params.norm_label.width.row) {\n\n    // calc reduction in font size\n    params.ini_scale_font.row = params.norm_label.width.row / params.bounding_width_max.row;\n    // redefine bounding_width_max.row\n    params.bounding_width_max.row = params.ini_scale_font.row * params.bounding_width_max.row;\n\n    // redefine default fs\n    params.labels.default_fs_row = params.labels.default_fs_row * params.ini_scale_font.row;\n    // reduce font size\n    d3.selectAll(params.root + ' .row_label_text').each(function () {\n      d3.select(this).select('text').style('font-size', params.labels.default_fs_row + 'px');\n    });\n  }\n\n  if (delays.run_transition) {\n\n    // positioning row text after row text size may have been reduced\n    svg_group.selectAll('.row_label_text').select('text').transition().delay(delays.update).duration(duration).attr('y', params.matrix.rect_height * 0.5 + params.labels.default_fs_row * 0.35);\n\n    svg_group.select('.row_viz_container').transition().delay(delays.update).duration(duration).attr('transform', 'translate(' + params.norm_label.width.row + ',0)');\n\n    svg_group.select('.row_viz_container').transition().delay(delays.update).duration(duration).select('white_bars').attr('width', params.class_room.row + 'px').attr('height', function () {\n      var inst_height = params.viz.clust.dim.height;\n      return inst_height;\n    });\n\n    svg_group.selectAll('.row_viz_group').data(row_nodes, function (d) {\n      return d.name;\n    }).transition().delay(delays.update).duration(duration).attr('transform', function (d) {\n      var inst_index = _.indexOf(row_nodes_names, d.name);\n      return 'translate(0, ' + params.matrix.y_scale(inst_index) + ')';\n    });\n\n    svg_group.selectAll('.row_viz_group').select('path').transition().delay(delays.update).duration(duration).attr('d', function () {\n      var origin_x = params.class_room.symbol_width - 1;\n      var origin_y = 0;\n      var mid_x = 1;\n      var mid_y = params.matrix.y_scale.rangeBand() / 2;\n      var final_x = params.class_room.symbol_width - 1;\n      var final_y = params.matrix.y_scale.rangeBand();\n      var output_string = 'M ' + origin_x + ',' + origin_y + ' L ' + mid_x + ',' + mid_y + ', L ' + final_x + ',' + final_y + ' Z';\n      return output_string;\n    });\n  } else {\n\n    // positioning row text after row text size may have been reduced\n    svg_group.selectAll('.row_label_text').select('text').attr('y', params.matrix.rect_height * 0.5 + params.labels.default_fs_row * 0.35);\n\n    svg_group.select('.row_viz_container').attr('transform', 'translate(' + params.norm_label.width.row + ',0)');\n\n    svg_group.select('.row_viz_container').select('white_bars').attr('width', params.class_room.row + 'px').attr('height', function () {\n      var inst_height = params.viz.clust.dim.height;\n      return inst_height;\n    });\n\n    svg_group.selectAll('.row_viz_group').data(row_nodes, function (d) {\n      return d.name;\n    }).attr('transform', function (d) {\n      var inst_index = _.indexOf(row_nodes_names, d.name);\n      return 'translate(0, ' + params.matrix.y_scale(inst_index) + ')';\n    });\n\n    svg_group.selectAll('.row_viz_group').select('path').attr('d', function () {\n      var origin_x = params.class_room.symbol_width - 1;\n      var origin_y = 0;\n      var mid_x = 1;\n      var mid_y = params.matrix.y_scale.rangeBand() / 2;\n      var final_x = params.class_room.symbol_width - 1;\n      var final_y = params.matrix.y_scale.rangeBand();\n      var output_string = 'M ' + origin_x + ',' + origin_y + ' L ' + mid_x + ',' + mid_y + ', L ' + final_x + ',' + final_y + ' Z';\n      return output_string;\n    });\n  }\n\n  if (utils.has(params.network_data.row_nodes[0], 'value')) {\n\n    // set bar scale\n    var enr_max = Math.abs(_.max(params.network_data.row_nodes, function (d) {\n      return Math.abs(d.value);\n    }).value);\n    params.labels.bar_scale_row = d3.scale.linear().domain([0, enr_max]).range([0, params.norm_label.width.row]);\n\n    svg_group.selectAll('.row_bars')\n    // .transition().delay(delays.update).duration(duration)\n    .attr('width', function (d) {\n      var inst_value = 0;\n      inst_value = params.labels.bar_scale_row(Math.abs(d.value));\n      return inst_value;\n    }).attr('x', function (d) {\n      var inst_value = 0;\n      inst_value = -params.labels.bar_scale_row(Math.abs(d.value));\n      return inst_value;\n    }).attr('height', params.matrix.y_scale.rangeBand());\n  }\n\n  // resize col labels\n  ///////////////////////\n  var x_offset_click;\n  var reduce_rect_width;\n\n  if (delays.run_transition) {\n\n    svg_group.select(params.root + ' .col_container').transition().delay(delays.update).duration(duration).attr('transform', 'translate(' + params.viz.clust.margin.left + ',' + params.norm_label.margin.top + ')');\n\n    svg_group.select(params.root + ' .col_container').transition().delay(delays.update).duration(duration).select('.white_bars').attr('width', 30 * params.viz.clust.dim.width + 'px').attr('height', params.norm_label.background.col);\n\n    svg_group.select(params.root + ' .col_container').transition().delay(delays.update).duration(duration).select('.col_label_outer_container').attr('transform', 'translate(0,' + params.norm_label.width.col + ')');\n\n    // offset click group column label\n    x_offset_click = params.matrix.x_scale.rangeBand() / 2 + params.viz.border_width;\n    // reduce width of rotated rects\n    reduce_rect_width = params.matrix.x_scale.rangeBand() * 0.36;\n\n    svg_group.selectAll('.col_label_text').data(col_nodes, function (d) {\n      return d.name;\n    }).transition().delay(delays.update).duration(duration).attr('transform', function (d) {\n      var inst_index = _.indexOf(col_nodes_names, d.name);\n      return 'translate(' + params.matrix.x_scale(inst_index) + ') rotate(-90)';\n    });\n\n    svg_group.selectAll('.col_label_click').transition().delay(delays.update).duration(duration).attr('transform', 'translate(' + params.matrix.x_scale.rangeBand() / 2 + ',' + x_offset_click + ') rotate(45)');\n\n    svg_group.selectAll('.col_label_click').select('text').style('font-size', params.labels.default_fs_col + 'px').text(function (d) {\n      return normal_name(d);\n    });\n\n    svg_group.selectAll('.col_label_click').select('text').transition().delay(delays.update).duration(duration).attr('y', params.matrix.x_scale.rangeBand() * 0.60).attr('dx', 2 * params.viz.border_width);\n  } else {\n\n    svg_group.select(params.root + ' .col_container').attr('transform', 'translate(' + params.viz.clust.margin.left + ',' + params.norm_label.margin.top + ')');\n\n    svg_group.select(params.root + ' .col_container').select('.white_bars').attr('width', 30 * params.viz.clust.dim.width + 'px').attr('height', params.norm_label.background.col);\n\n    svg_group.select(params.root + ' .col_container').select('.col_label_outer_container').attr('transform', 'translate(0,' + params.norm_label.width.col + ')');\n\n    // offset click group column label\n    x_offset_click = params.matrix.x_scale.rangeBand() / 2 + params.viz.border_width;\n    // reduce width of rotated rects\n    reduce_rect_width = params.matrix.x_scale.rangeBand() * 0.36;\n\n    svg_group.selectAll('.col_label_text').data(col_nodes, function (d) {\n      return d.name;\n    }).attr('transform', function (d) {\n      var inst_index = _.indexOf(col_nodes_names, d.name);\n      return 'translate(' + params.matrix.x_scale(inst_index) + ') rotate(-90)';\n    });\n\n    svg_group.selectAll('.col_label_click').attr('transform', 'translate(' + params.matrix.x_scale.rangeBand() / 2 + ',' + x_offset_click + ') rotate(45)');\n\n    svg_group.selectAll('.col_label_click').select('text').style('font-size', params.labels.default_fs_col + 'px').text(function (d) {\n      return normal_name(d);\n    });\n\n    svg_group.selectAll('.col_label_click').select('text').attr('y', params.matrix.x_scale.rangeBand() * 0.60).attr('dx', 2 * params.viz.border_width);\n  }\n\n  params.bounding_width_max.col = 0;\n  svg_group.selectAll('.col_label_click').each(function () {\n    var tmp_width = d3.select(this).select('text').node().getBBox().width;\n    if (tmp_width > params.bounding_width_max.col) {\n      params.bounding_width_max.col = tmp_width;\n    }\n  });\n\n  if (params.bounding_width_max.col > params.norm_label.width.col) {\n\n    // calc reduction in font size\n    params.ini_scale_font.col = params.norm_label.width.col / params.bounding_width_max.col;\n    // redefine bounding_width_max.col\n    params.bounding_width_max.col = params.ini_scale_font.col * params.bounding_width_max.col;\n    // redefine default fs\n    params.labels.default_fs_col = params.labels.default_fs_col * params.ini_scale_font.col;\n    // reduce font size\n    d3.selectAll(params.root + ' .col_label_click').each(function () {\n      d3.select(this).select('text').style('font-size', params.labels.default_fs_col + 'px');\n    });\n    // .attr('y', params.matrix.rect_width * 0.5 + params.labels.default_fs_col*0.25 )\n  }\n\n  svg_group.selectAll('.col_label_click').each(function () {\n    d3.select(this).select('text')[0][0].getBBox();\n    // d3.select(this)\n    //   .select('rect')\n    //   .attr('x', bbox.x * 1.25)\n    //   .attr('y', 0)\n    //   .attr('width', bbox.width * 1.25)\n    //   .attr('height', params.matrix.x_scale.rangeBand() * 0.6)\n    //   .style('fill', 'yellow')\n    //   .style('opacity', 0);\n  });\n\n  if (delays.run_transition) {\n\n    // resize column triangle\n    svg_group.selectAll('.col_label_click').select('path').transition().delay(delays.update).duration(duration).attr('d', function () {\n      // x and y are flipped since its rotated\n      var origin_y = -params.viz.border_width;\n      var start_x = 0;\n      var final_x = params.matrix.x_scale.rangeBand() - reduce_rect_width;\n      var start_y = -(params.matrix.x_scale.rangeBand() - reduce_rect_width + params.viz.border_width);\n      var final_y = -params.viz.border_width;\n      var output_string = 'M ' + origin_y + ',0 L ' + start_y + ',' + start_x + ', L ' + final_y + ',' + final_x + ' Z';\n      return output_string;\n    }).attr('fill', function (d) {\n      var inst_color = '#eee';\n      if (params.labels.show_categories) {\n        inst_color = params.labels.class_colors.col[d.cl];\n      }\n      return inst_color;\n    });\n  } else {\n    // resize column triangle\n    svg_group.selectAll('.col_label_click').select('path').attr('d', function () {\n      // x and y are flipped since its rotated\n      var origin_y = -params.viz.border_width;\n      var start_x = 0;\n      var final_x = params.matrix.x_scale.rangeBand() - reduce_rect_width;\n      var start_y = -(params.matrix.x_scale.rangeBand() - reduce_rect_width + params.viz.border_width);\n      var final_y = -params.viz.border_width;\n      var output_string = 'M ' + origin_y + ',0 L ' + start_y + ',' + start_x + ', L ' + final_y + ',' + final_x + ' Z';\n      return output_string;\n    }).attr('fill', function (d) {\n      var inst_color = '#eee';\n      if (params.labels.show_categories) {\n        inst_color = params.labels.class_colors.col[d.cl];\n      }\n      return inst_color;\n    });\n  }\n\n  // append column value bars\n  if (utils.has(params.network_data.col_nodes[0], 'value')) {\n\n    svg_group.selectAll('.col_bars').data(col_nodes, function (d) {\n      return d.name;\n    }).transition().delay(delays.update).duration(duration).attr('width', function (d) {\n      var inst_value = 0;\n      if (d.value > 0) {\n\n        inst_value = params.labels.bar_scale_col(d.value);\n      }\n      return inst_value;\n    })\n    // rotate labels - reduce width if rotating\n    .attr('height', params.matrix.x_scale.rangeBand() * 0.66);\n  }\n\n  if (params.labels.show_categories) {\n    // change the size of the highlighting rects\n    d3.selectAll(params.root + ' .col_label_click').each(function () {\n      var bbox = d3.select(this).select('text')[0][0].getBBox();\n\n      d3.select(this).select('rect').transition().delay(delays.update).duration(duration).attr('width', bbox.width * 1.1).attr('height', 0.67 * params.matrix.rect_width).style('fill', function (d) {\n        var inst_color = 'white';\n        if (params.labels.show_categories) {\n          inst_color = params.labels.class_colors.col[d.cl];\n        }\n        return inst_color;\n      }).style('opacity', 0.30);\n    });\n  }\n\n  // resize dendrogram\n  ///////////////////\n\n  if (delays.run_transition) {\n\n    svg_group.selectAll('.row_class_rect').transition().delay(delays.update).duration(duration).attr('width', function () {\n      var inst_width = params.class_room.symbol_width - 1;\n      return inst_width + 'px';\n    }).attr('height', params.matrix.y_scale.rangeBand()).attr('x', function () {\n      var inst_offset = params.class_room.symbol_width + 1;\n      return inst_offset + 'px';\n    });\n\n    svg_group.selectAll('.col_class_rect').transition().delay(delays.update).duration(duration).attr('width', params.matrix.x_scale.rangeBand()).attr('height', function () {\n      var inst_height = params.class_room.col - 1;\n      return inst_height;\n    });\n\n    svg_group.selectAll('.col_viz_group').data(col_nodes, function (d) {\n      return d.name;\n    }).transition().delay(delays.update).duration(duration).attr('transform', function (d) {\n      var inst_index = _.indexOf(col_nodes_names, d.name);\n      return 'translate(' + params.matrix.x_scale(inst_index) + ',0)';\n    });\n  } else {\n\n    svg_group.selectAll('.row_class_rect').attr('width', function () {\n      var inst_width = params.class_room.symbol_width - 1;\n      return inst_width + 'px';\n    }).attr('height', params.matrix.y_scale.rangeBand()).attr('x', function () {\n      var inst_offset = params.class_room.symbol_width + 1;\n      return inst_offset + 'px';\n    });\n\n    svg_group.selectAll('.col_class_rect').attr('width', params.matrix.x_scale.rangeBand()).attr('height', function () {\n      var inst_height = params.class_room.col - 1;\n      return inst_height;\n    });\n\n    svg_group.selectAll('.col_viz_group').data(col_nodes, function (d) {\n      return d.name;\n    }).attr('transform', function (d) {\n      var inst_index = _.indexOf(col_nodes_names, d.name);\n      return 'translate(' + params.matrix.x_scale(inst_index) + ',0)';\n    });\n  }\n\n  // reposition grid lines\n  ////////////////////////////\n  svg_group.selectAll('.horz_lines').data(row_nodes, function (d) {\n    return d.name;\n  })\n  // .transition().delay(delays.update).duration(duration)\n  .attr('transform', function (d) {\n    var inst_index = _.indexOf(row_nodes_names, d.name);\n    return 'translate(0,' + params.matrix.y_scale(inst_index) + ') rotate(0)';\n  });\n\n  svg_group.selectAll('.horz_lines').select('line')\n  // .transition().delay(delays.update).duration(duration)\n  .attr('x2', params.viz.clust.dim.width).style('stroke-width', params.viz.border_width / params.viz.zoom_switch + 'px');\n\n  svg_group.selectAll('.vert_lines').data(col_nodes, function (d) {\n    return d.name;\n  })\n  // .transition().delay(delays.update).duration(duration)\n  .attr('transform', function (d) {\n    var inst_index = _.indexOf(col_nodes_names, d.name);\n    return 'translate(' + params.matrix.x_scale(inst_index) + ') rotate(-90)';\n  });\n\n  svg_group.selectAll('.vert_lines').select('line')\n  // .transition().delay(delays.update).duration(duration)\n  .attr('x2', -params.viz.clust.dim.height).style('stroke-width', params.viz.border_width + 'px');\n\n  // resize superlabels\n  /////////////////////////////////////\n  svg_group.select('.super_col_bk g')\n  // .transition().delay(delays.update).duration(duration)\n  .attr('height', params.labels.super_label_width + 'px').attr('transform', 'translate(0,' + params.viz.grey_border_width + ')');\n\n  // super col title\n  svg_group.select('.super_col')\n  // .transition().delay(delays.update).duration(duration)\n  .attr('transform', function () {\n    var inst_x = params.viz.clust.dim.width / 2 + params.norm_label.width.row;\n    var inst_y = params.labels.super_label_width - params.viz.uni_margin;\n    return 'translate(' + inst_x + ',' + inst_y + ')';\n  });\n\n  // super row title\n  svg_group.select('.super_row_bkg')\n  // .transition().delay(delays.update).duration(duration)\n  .attr('width', params.labels.super_label_width + 'px').attr('transform', 'translate(' + params.viz.grey_border_width + ',0)');\n\n  // append super title row group\n  svg_group.select('.super_row')\n  // .transition().delay(delays.update).duration(duration)\n  .attr('transform', function () {\n    var inst_x = params.labels.super_label_width - params.viz.uni_margin;\n    var inst_y = params.viz.clust.dim.height / 2 + params.norm_label.width.col;\n    return 'translate(' + inst_x + ',' + inst_y + ')';\n  });\n\n  // resize spillover\n  //////////////////////////\n  // hide spillover from slanted column labels on right side\n  svg_group.select('.right_slant_triangle').transition().delay(delays.update).duration(duration).attr('transform', 'translate(' + params.viz.clust.dim.width + ',' + params.norm_label.width.col + ')');\n\n  svg_group.select('.left_slant_triangle').transition().delay(delays.update).duration(duration).attr('transform', 'translate(-1,' + params.norm_label.width.col + ')');\n\n  svg_group.select('.top_left_white').transition().delay(delays.update).duration(duration).attr('width', params.viz.clust.margin.left).attr('height', params.viz.clust.margin.top);\n\n  svg_group.select('.right_spillover').transition().delay(delays.update).duration(duration).attr('transform', function () {\n    var tmp_left = params.viz.clust.margin.left + params.viz.clust.dim.width;\n    var tmp_top = params.norm_label.margin.top + params.norm_label.width.col;\n    return 'translate(' + tmp_left + ',' + tmp_top + ')';\n  });\n\n  // white border bottom - prevent clustergram from hitting border\n  svg_group.select('.bottom_spillover').transition().delay(delays.update).duration(duration).attr('width', params.viz.svg_dim.width).attr('height', 2 * params.viz.grey_border_width).attr('transform', function () {\n    // shift up enough to show the entire border width\n    var inst_offset = params.viz.svg_dim.height - 3 * params.viz.grey_border_width;\n    return 'translate(0,' + inst_offset + ')';\n  });\n\n  // reset zoom and translate\n  //////////////////////////////\n  params.zoom_behavior.scale(1).translate([params.viz.clust.margin.left, params.viz.clust.margin.top]);\n};//@ sourceMappingURL=data:application/json;base64,");

/***/ },
/* 47 */
/***/ function(module, exports) {

	eval("// TODO add tip back to arguments\nmodule.exports = function (params, ini_inp_row_data, delays, duration, row_selection) {\n\n  var inp_row_data = ini_inp_row_data.row_data;\n\n  // remove zero values from\n  var row_values = _.filter(inp_row_data, function (num) {\n    return num.value != 0;\n  });\n\n  // bind data to tiles\n  var cur_row_tiles = d3.select(row_selection).selectAll('.tile').data(row_values, function (d) {\n    return d.col_name;\n  });\n\n  ///////////////////////////\n  // Exit\n  ///////////////////////////\n  if (delays.run_transition) {\n    cur_row_tiles.exit().transition().duration(300).attr('fill-opacity', 0).remove();\n  } else {\n    cur_row_tiles.exit().attr('fill-opacity', 0).remove();\n  }\n\n  if (params.matrix.tile_type == 'updn') {\n\n    // value split\n    var row_split_data = _.filter(inp_row_data, function (num) {\n      return num.value_up != 0 || num.value_dn != 0;\n    });\n\n    // tile_up\n    var cur_tiles_up = d3.select(row_selection).selectAll('.tile_up').data(row_split_data, function (d) {\n      return d.col_name;\n    });\n\n    if (delays.run_transition) {\n      cur_tiles_up.exit().transition().duration(300).attr('fill', '0').remove();\n    } else {\n      cur_tiles_up.exit().attr('fill', 0).remove();\n    }\n\n    // tile_dn\n    var cur_tiles_dn = d3.select(row_selection).selectAll('.tile_dn').data(row_split_data, function (d) {\n      return d.col_name;\n    });\n\n    if (delays.run_transition) {\n      cur_tiles_dn.exit().transition().duration(300).attr('fill', 0).remove();\n    } else {\n      cur_tiles_dn.exit().attr('fill', 0).remove();\n    }\n  }\n\n  ///////////////////////////\n  // Update\n  ///////////////////////////\n\n  // update tiles in x direction\n  var update_row_tiles = cur_row_tiles.on('mouseover', function (p) {\n    // highlight row - set text to active if\n    d3.selectAll(params.root + ' .row_label_text text').classed('active', function (d) {\n      return p.row_name === d.name;\n    });\n\n    d3.selectAll(params.root + ' .col_label_text text').classed('active', function (d) {\n      return p.col_name === d.name;\n    });\n    // if (params.matrix.show_tile_tooltips){\n    //   tip.show(p);\n    // }\n  }).on('mouseout', function mouseout() {\n    d3.selectAll(params.root + ' text').classed('active', false);\n    // if (params.matrix.show_tile_tooltips){\n    //   tip.hide();\n    // }\n  });\n\n  var col_nodes_names = params.network_data.col_nodes_names;\n\n  if (delays.run_transition) {\n    update_row_tiles.transition().delay(delays.update).duration(duration).attr('width', params.matrix.rect_width).attr('height', params.matrix.rect_height).attr('transform', function (d) {\n      if (_.contains(col_nodes_names, d.col_name)) {\n        var inst_col_index = _.indexOf(col_nodes_names, d.col_name);\n        var x_pos = params.matrix.x_scale(inst_col_index) + 0.5 * params.viz.border_width;\n        return 'translate(' + x_pos + ',0)';\n      }\n    });\n  } else {\n    update_row_tiles.attr('width', params.matrix.rect_width).attr('height', params.matrix.rect_height).attr('transform', function (d) {\n      if (_.contains(col_nodes_names, d.col_name)) {\n        var inst_col_index = _.indexOf(col_nodes_names, d.col_name);\n        var x_pos = params.matrix.x_scale(inst_col_index) + 0.5 * params.viz.border_width;\n        return 'translate(' + x_pos + ',0)';\n      }\n    });\n  }\n\n  if (params.matrix.tile_type == 'updn') {\n\n    // update split tiles_up\n    var update_tiles_up = cur_tiles_up.on('mouseover', function (p) {\n      // highlight row - set text to active if\n      d3.selectAll(params.root + ' .row_label_text text').classed('active', function (d) {\n        return p.row_name === d.name;\n      });\n\n      d3.selectAll(params.root + ' .col_label_text text').classed('active', function (d) {\n        return p.col_name === d.name;\n      });\n      // if (params.matrix.show_tile_tooltips){\n      //   tip.show(p);\n      // }\n    }).on('mouseout', function mouseout() {\n      d3.selectAll(params.root + ' text').classed('active', false);\n      // if (params.matrix.show_tile_tooltips){\n      //   tip.hide();\n      // }\n    });\n\n    if (delays.run_transition) {\n      update_tiles_up.transition().delay(delays.update).duration(duration).attr('d', function () {\n        // up triangle\n        var start_x = 0;\n        var final_x = params.matrix.x_scale.rangeBand();\n        var start_y = 0;\n        var final_y = params.matrix.y_scale.rangeBand() - params.matrix.y_scale.rangeBand() / 60;\n        var output_string = 'M' + start_x + ',' + start_y + ', L' + start_x + ', ' + final_y + ', L' + final_x + ',0 Z';\n        return output_string;\n      }).attr('transform', function (d) {\n        var x_pos = params.matrix.x_scale(d.pos_x) + 0.5 * params.viz.border_width;\n        var y_pos = 0.5 * params.viz.border_width / params.viz.zoom_switch;\n        return 'translate(' + x_pos + ',' + y_pos + ')';\n      });\n    } else {\n      update_tiles_up.attr('d', function () {\n        // up triangle\n        var start_x = 0;\n        var final_x = params.matrix.x_scale.rangeBand();\n        var start_y = 0;\n        var final_y = params.matrix.y_scale.rangeBand() - params.matrix.y_scale.rangeBand() / 60;\n        var output_string = 'M' + start_x + ',' + start_y + ', L' + start_x + ', ' + final_y + ', L' + final_x + ',0 Z';\n        return output_string;\n      }).attr('transform', function (d) {\n        var x_pos = params.matrix.x_scale(d.pos_x) + 0.5 * params.viz.border_width;\n        var y_pos = 0.5 * params.viz.border_width / params.viz.zoom_switch;\n        return 'translate(' + x_pos + ',' + y_pos + ')';\n      });\n    }\n\n    // update split tiles_dn\n    var update_tiles_dn = cur_tiles_dn.on('mouseover', function (p) {\n      // highlight row - set text to active if\n      d3.selectAll(params.root + ' .row_label_text text').classed('active', function (d) {\n        return p.row_name === d.name;\n      });\n\n      d3.selectAll(params.root + ' .col_label_text text').classed('active', function (d) {\n        return p.col_name === d.name;\n      });\n      // if (params.matrix.show_tile_tooltips){\n      //   tip.show(p);\n      // }\n    }).on('mouseout', function mouseout() {\n      d3.selectAll(params.root + ' text').classed('active', false);\n      // if (params.matrix.show_tile_tooltips){\n      //   tip.hide();\n      // }\n    });\n\n    if (delays.run_transition) {\n      update_tiles_dn.transition().delay(delays.update).duration(duration).attr('d', function () {\n        // dn triangle\n        var start_x = 0;\n        var final_x = params.matrix.x_scale.rangeBand();\n        var start_y = params.matrix.y_scale.rangeBand() - params.matrix.y_scale.rangeBand() / 60;\n        var final_y = params.matrix.y_scale.rangeBand() - params.matrix.y_scale.rangeBand() / 60;\n        var output_string = 'M' + start_x + ', ' + start_y + ' ,   L' + final_x + ', ' + final_y + ',  L' + final_x + ',0 Z';\n        return output_string;\n      }).attr('transform', function (d) {\n        var x_pos = params.matrix.x_scale(d.pos_x) + 0.5 * params.viz.border_width;\n        var y_pos = 0.5 * params.viz.border_width / params.viz.zoom_switch;\n        return 'translate(' + x_pos + ',' + y_pos + ')';\n      });\n    } else {\n      update_tiles_dn.attr('d', function () {\n        // dn triangle\n        var start_x = 0;\n        var final_x = params.matrix.x_scale.rangeBand();\n        var start_y = params.matrix.y_scale.rangeBand() - params.matrix.y_scale.rangeBand() / 60;\n        var final_y = params.matrix.y_scale.rangeBand() - params.matrix.y_scale.rangeBand() / 60;\n        var output_string = 'M' + start_x + ', ' + start_y + ' ,   L' + final_x + ', ' + final_y + ',  L' + final_x + ',0 Z';\n        return output_string;\n      }).attr('transform', function (d) {\n        var x_pos = params.matrix.x_scale(d.pos_x) + 0.5 * params.viz.border_width;\n        var y_pos = 0.5 * params.viz.border_width / params.viz.zoom_switch;\n        return 'translate(' + x_pos + ',' + y_pos + ')';\n      });\n    }\n\n    // remove tiles when splitting is done\n    cur_row_tiles.selectAll('.tile').each(function (d) {\n      if (Math.abs(d.value_up) > 0 && Math.abs(d.value_dn) > 0) {\n        d3.select(row_selection).remove();\n      }\n    });\n  }\n\n  ///////////////////////////\n  // Enter\n  ///////////////////////////\n  // enter new tiles\n  var new_tiles = cur_row_tiles.enter().append('rect').attr('class', 'tile row_tile').attr('width', params.matrix.rect_width).attr('height', params.matrix.rect_height).on('mouseover', function (p) {\n    // highlight row - set text to active if\n    d3.selectAll(params.root + ' .row_label_text text').classed('active', function (d) {\n      return p.row_name === d.name;\n    });\n\n    d3.selectAll(params.root + ' .col_label_text text').classed('active', function (d) {\n      return p.col_name === d.name;\n    });\n    // if (params.matrix.show_tile_tooltips){\n    //   tip.show(p);\n    // }\n  }).on('mouseout', function mouseout() {\n    d3.selectAll(params.root + ' text').classed('active', false);\n    // if (params.matrix.show_tile_tooltips){\n    //   tip.hide();\n    // }\n  }).attr('fill-opacity', 0).attr('transform', function (d) {\n    var x_pos = params.matrix.x_scale(d.pos_x) + 0.5 * params.viz.border_width;\n    var y_pos = 0.5 * params.viz.border_width / params.viz.zoom_switch;\n    return 'translate(' + x_pos + ',' + y_pos + ')';\n  });\n\n  if (delays.run_transition) {\n    new_tiles.transition().delay(delays.enter).duration(duration).style('fill', function (d) {\n      return d.value > 0 ? params.matrix.tile_colors[0] : params.matrix.tile_colors[1];\n    }).attr('fill-opacity', function (d) {\n      var output_opacity = params.matrix.opacity_scale(Math.abs(d.value));\n      return output_opacity;\n    });\n  } else {\n    new_tiles.style('fill', function (d) {\n      return d.value > 0 ? params.matrix.tile_colors[0] : params.matrix.tile_colors[1];\n    }).attr('fill-opacity', function (d) {\n      var output_opacity = params.matrix.opacity_scale(Math.abs(d.value));\n      return output_opacity;\n    });\n  }\n\n  // remove new tiles if necessary\n  new_tiles.each(function (d) {\n    if (Math.abs(d.value_up) > 0 && Math.abs(d.value_dn) > 0) {\n      d3.select(row_selection).remove();\n    }\n  });\n\n  ////////////////////////////////////////////////////\n  // need to add split tiles to existing rows\n  ////////////////////////////////////////////////////\n};undefined\n//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNDcuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vc3JjL25ldHdvcmsvZWV1X2V4aXN0aW5nX3Jvdy5qcz85M2MxIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIFRPRE8gYWRkIHRpcCBiYWNrIHRvIGFyZ3VtZW50c1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihwYXJhbXMsIGluaV9pbnBfcm93X2RhdGEsIGRlbGF5cywgZHVyYXRpb24sIHJvd19zZWxlY3Rpb24pIHtcblxuICB2YXIgaW5wX3Jvd19kYXRhID0gaW5pX2lucF9yb3dfZGF0YS5yb3dfZGF0YTtcblxuICAvLyByZW1vdmUgemVybyB2YWx1ZXMgZnJvbVxuICB2YXIgcm93X3ZhbHVlcyA9IF8uZmlsdGVyKGlucF9yb3dfZGF0YSwgZnVuY3Rpb24obnVtKXtcbiAgICByZXR1cm4gbnVtLnZhbHVlICE9MDtcbiAgfSk7XG5cbiAgLy8gYmluZCBkYXRhIHRvIHRpbGVzXG4gIHZhciBjdXJfcm93X3RpbGVzID0gZDMuc2VsZWN0KHJvd19zZWxlY3Rpb24pXG4gICAgLnNlbGVjdEFsbCgnLnRpbGUnKVxuICAgIC5kYXRhKHJvd192YWx1ZXMsIGZ1bmN0aW9uKGQpe1xuICAgICAgcmV0dXJuIGQuY29sX25hbWU7XG4gICAgfSk7XG5cbiAgLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vXG4gIC8vIEV4aXRcbiAgLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vXG4gIGlmIChkZWxheXMucnVuX3RyYW5zaXRpb24pe1xuICAgIGN1cl9yb3dfdGlsZXNcbiAgICAgIC5leGl0KClcbiAgICAgIC50cmFuc2l0aW9uKCkuZHVyYXRpb24oMzAwKVxuICAgICAgLmF0dHIoJ2ZpbGwtb3BhY2l0eScsMClcbiAgICAgIC5yZW1vdmUoKTtcbiAgfSBlbHNlIHtcbiAgICBjdXJfcm93X3RpbGVzXG4gICAgICAuZXhpdCgpXG4gICAgICAuYXR0cignZmlsbC1vcGFjaXR5JywwKVxuICAgICAgLnJlbW92ZSgpO1xuICB9XG5cbiAgaWYgKHBhcmFtcy5tYXRyaXgudGlsZV90eXBlID09ICd1cGRuJyl7XG5cbiAgICAvLyB2YWx1ZSBzcGxpdFxuICAgIHZhciByb3dfc3BsaXRfZGF0YSA9IF8uZmlsdGVyKGlucF9yb3dfZGF0YSwgZnVuY3Rpb24obnVtKXtcbiAgICAgIHJldHVybiBudW0udmFsdWVfdXAgIT0gMCB8fCBudW0udmFsdWVfZG4gIT0wIDtcbiAgICB9KTtcblxuICAgIC8vIHRpbGVfdXBcbiAgICB2YXIgY3VyX3RpbGVzX3VwID0gZDMuc2VsZWN0KHJvd19zZWxlY3Rpb24pXG4gICAgICAuc2VsZWN0QWxsKCcudGlsZV91cCcpXG4gICAgICAuZGF0YShyb3dfc3BsaXRfZGF0YSwgZnVuY3Rpb24oZCl7cmV0dXJuIGQuY29sX25hbWU7fSk7XG5cbiAgICBpZiAoZGVsYXlzLnJ1bl90cmFuc2l0aW9uKXtcbiAgICAgIGN1cl90aWxlc191cFxuICAgICAgICAuZXhpdCgpXG4gICAgICAgIC50cmFuc2l0aW9uKCkuZHVyYXRpb24oMzAwKVxuICAgICAgICAuYXR0cignZmlsbCcsJzAnKVxuICAgICAgICAucmVtb3ZlKCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGN1cl90aWxlc191cFxuICAgICAgICAuZXhpdCgpXG4gICAgICAgIC5hdHRyKCdmaWxsJywwKVxuICAgICAgICAucmVtb3ZlKCk7XG4gICAgfVxuXG4gICAgLy8gdGlsZV9kblxuICAgIHZhciBjdXJfdGlsZXNfZG4gPSBkMy5zZWxlY3Qocm93X3NlbGVjdGlvbilcbiAgICAgIC5zZWxlY3RBbGwoJy50aWxlX2RuJylcbiAgICAgIC5kYXRhKHJvd19zcGxpdF9kYXRhLCBmdW5jdGlvbihkKXtyZXR1cm4gZC5jb2xfbmFtZTt9KTtcblxuICAgIGlmIChkZWxheXMucnVuX3RyYW5zaXRpb24pe1xuICAgICAgY3VyX3RpbGVzX2RuXG4gICAgICAgIC5leGl0KClcbiAgICAgICAgLnRyYW5zaXRpb24oKS5kdXJhdGlvbigzMDApXG4gICAgICAgIC5hdHRyKCdmaWxsJywwKVxuICAgICAgICAucmVtb3ZlKCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGN1cl90aWxlc19kblxuICAgICAgICAuZXhpdCgpXG4gICAgICAgIC5hdHRyKCdmaWxsJywwKVxuICAgICAgICAucmVtb3ZlKCk7XG4gICAgfVxuXG4gIH1cblxuICAvLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cbiAgLy8gVXBkYXRlXG4gIC8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xuXG4gIC8vIHVwZGF0ZSB0aWxlcyBpbiB4IGRpcmVjdGlvblxuICB2YXIgdXBkYXRlX3Jvd190aWxlcyA9IGN1cl9yb3dfdGlsZXNcbiAgICAub24oJ21vdXNlb3ZlcicsIGZ1bmN0aW9uKHApIHtcbiAgICAgIC8vIGhpZ2hsaWdodCByb3cgLSBzZXQgdGV4dCB0byBhY3RpdmUgaWZcbiAgICAgIGQzLnNlbGVjdEFsbChwYXJhbXMucm9vdCsnIC5yb3dfbGFiZWxfdGV4dCB0ZXh0JylcbiAgICAgICAgLmNsYXNzZWQoJ2FjdGl2ZScsIGZ1bmN0aW9uKGQpIHtcbiAgICAgICAgICByZXR1cm4gcC5yb3dfbmFtZSA9PT0gZC5uYW1lO1xuICAgICAgICB9KTtcblxuICAgICAgZDMuc2VsZWN0QWxsKHBhcmFtcy5yb290KycgLmNvbF9sYWJlbF90ZXh0IHRleHQnKVxuICAgICAgICAuY2xhc3NlZCgnYWN0aXZlJywgZnVuY3Rpb24oZCkge1xuICAgICAgICAgIHJldHVybiBwLmNvbF9uYW1lID09PSBkLm5hbWU7XG4gICAgICAgIH0pO1xuICAgICAgLy8gaWYgKHBhcmFtcy5tYXRyaXguc2hvd190aWxlX3Rvb2x0aXBzKXtcbiAgICAgIC8vICAgdGlwLnNob3cocCk7XG4gICAgICAvLyB9XG4gICAgfSlcbiAgICAub24oJ21vdXNlb3V0JywgZnVuY3Rpb24gbW91c2VvdXQoKSB7XG4gICAgICBkMy5zZWxlY3RBbGwocGFyYW1zLnJvb3QrJyB0ZXh0JykuY2xhc3NlZCgnYWN0aXZlJywgZmFsc2UpO1xuICAgICAgLy8gaWYgKHBhcmFtcy5tYXRyaXguc2hvd190aWxlX3Rvb2x0aXBzKXtcbiAgICAgIC8vICAgdGlwLmhpZGUoKTtcbiAgICAgIC8vIH1cbiAgICB9KTtcblxuICB2YXIgY29sX25vZGVzX25hbWVzID0gcGFyYW1zLm5ldHdvcmtfZGF0YS5jb2xfbm9kZXNfbmFtZXM7XG5cbiAgaWYgKGRlbGF5cy5ydW5fdHJhbnNpdGlvbil7XG4gICAgdXBkYXRlX3Jvd190aWxlc1xuICAgICAgLnRyYW5zaXRpb24oKS5kZWxheShkZWxheXMudXBkYXRlKS5kdXJhdGlvbihkdXJhdGlvbilcbiAgICAgIC5hdHRyKCd3aWR0aCcsIHBhcmFtcy5tYXRyaXgucmVjdF93aWR0aClcbiAgICAgIC5hdHRyKCdoZWlnaHQnLCBwYXJhbXMubWF0cml4LnJlY3RfaGVpZ2h0KVxuICAgICAgLmF0dHIoJ3RyYW5zZm9ybScsIGZ1bmN0aW9uKGQpIHtcbiAgICAgICAgaWYgKF8uY29udGFpbnMoY29sX25vZGVzX25hbWVzLCBkLmNvbF9uYW1lKSl7XG4gICAgICAgICAgdmFyIGluc3RfY29sX2luZGV4ID0gXy5pbmRleE9mKGNvbF9ub2Rlc19uYW1lcywgZC5jb2xfbmFtZSk7XG4gICAgICAgICAgdmFyIHhfcG9zID0gcGFyYW1zLm1hdHJpeC54X3NjYWxlKGluc3RfY29sX2luZGV4KSArIDAuNSpwYXJhbXMudml6LmJvcmRlcl93aWR0aDtcbiAgICAgICAgICByZXR1cm4gJ3RyYW5zbGF0ZSgnICsgeF9wb3MgKyAnLDApJztcbiAgICAgICAgfVxuICAgICAgfSk7XG4gIH0gZWxzZSB7XG4gICAgdXBkYXRlX3Jvd190aWxlc1xuICAgICAgLmF0dHIoJ3dpZHRoJywgcGFyYW1zLm1hdHJpeC5yZWN0X3dpZHRoKVxuICAgICAgLmF0dHIoJ2hlaWdodCcsIHBhcmFtcy5tYXRyaXgucmVjdF9oZWlnaHQpXG4gICAgICAuYXR0cigndHJhbnNmb3JtJywgZnVuY3Rpb24oZCkge1xuICAgICAgICBpZiAoXy5jb250YWlucyhjb2xfbm9kZXNfbmFtZXMsIGQuY29sX25hbWUpKXtcbiAgICAgICAgICB2YXIgaW5zdF9jb2xfaW5kZXggPSBfLmluZGV4T2YoY29sX25vZGVzX25hbWVzLCBkLmNvbF9uYW1lKTtcbiAgICAgICAgICB2YXIgeF9wb3MgPSBwYXJhbXMubWF0cml4Lnhfc2NhbGUoaW5zdF9jb2xfaW5kZXgpICsgMC41KnBhcmFtcy52aXouYm9yZGVyX3dpZHRoO1xuICAgICAgICAgIHJldHVybiAndHJhbnNsYXRlKCcgKyB4X3BvcyArICcsMCknO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgfVxuXG4gIGlmIChwYXJhbXMubWF0cml4LnRpbGVfdHlwZSA9PSAndXBkbicpe1xuXG4gICAgLy8gdXBkYXRlIHNwbGl0IHRpbGVzX3VwXG4gICAgdmFyIHVwZGF0ZV90aWxlc191cCA9IGN1cl90aWxlc191cFxuICAgICAgLm9uKCdtb3VzZW92ZXInLCBmdW5jdGlvbihwKSB7XG4gICAgICAgIC8vIGhpZ2hsaWdodCByb3cgLSBzZXQgdGV4dCB0byBhY3RpdmUgaWZcbiAgICAgICAgZDMuc2VsZWN0QWxsKHBhcmFtcy5yb290KycgLnJvd19sYWJlbF90ZXh0IHRleHQnKVxuICAgICAgICAgIC5jbGFzc2VkKCdhY3RpdmUnLCBmdW5jdGlvbihkKSB7XG4gICAgICAgICAgICByZXR1cm4gcC5yb3dfbmFtZSA9PT0gZC5uYW1lO1xuICAgICAgICAgIH0pO1xuXG4gICAgICAgIGQzLnNlbGVjdEFsbChwYXJhbXMucm9vdCsnIC5jb2xfbGFiZWxfdGV4dCB0ZXh0JylcbiAgICAgICAgICAuY2xhc3NlZCgnYWN0aXZlJywgZnVuY3Rpb24oZCkge1xuICAgICAgICAgICAgcmV0dXJuIHAuY29sX25hbWUgPT09IGQubmFtZTtcbiAgICAgICAgICB9KTtcbiAgICAgICAgLy8gaWYgKHBhcmFtcy5tYXRyaXguc2hvd190aWxlX3Rvb2x0aXBzKXtcbiAgICAgICAgLy8gICB0aXAuc2hvdyhwKTtcbiAgICAgICAgLy8gfVxuICAgICAgfSlcbiAgICAgIC5vbignbW91c2VvdXQnLCBmdW5jdGlvbiBtb3VzZW91dCgpIHtcbiAgICAgICAgZDMuc2VsZWN0QWxsKHBhcmFtcy5yb290KycgdGV4dCcpLmNsYXNzZWQoJ2FjdGl2ZScsIGZhbHNlKTtcbiAgICAgICAgLy8gaWYgKHBhcmFtcy5tYXRyaXguc2hvd190aWxlX3Rvb2x0aXBzKXtcbiAgICAgICAgLy8gICB0aXAuaGlkZSgpO1xuICAgICAgICAvLyB9XG4gICAgICB9KTtcblxuICAgIGlmIChkZWxheXMucnVuX3RyYW5zaXRpb24pe1xuICAgICAgdXBkYXRlX3RpbGVzX3VwXG4gICAgICAgIC50cmFuc2l0aW9uKCkuZGVsYXkoZGVsYXlzLnVwZGF0ZSkuZHVyYXRpb24oZHVyYXRpb24pXG4gICAgICAgIC5hdHRyKCdkJywgZnVuY3Rpb24oKSB7XG4gICAgICAgICAgLy8gdXAgdHJpYW5nbGVcbiAgICAgICAgICB2YXIgc3RhcnRfeCA9IDA7XG4gICAgICAgICAgdmFyIGZpbmFsX3ggPSBwYXJhbXMubWF0cml4Lnhfc2NhbGUucmFuZ2VCYW5kKCk7XG4gICAgICAgICAgdmFyIHN0YXJ0X3kgPSAwO1xuICAgICAgICAgIHZhciBmaW5hbF95ID0gcGFyYW1zLm1hdHJpeC55X3NjYWxlLnJhbmdlQmFuZCgpIC0gcGFyYW1zLm1hdHJpeC55X3NjYWxlLnJhbmdlQmFuZCgpIC82MDtcbiAgICAgICAgICB2YXIgb3V0cHV0X3N0cmluZyA9ICdNJyArIHN0YXJ0X3ggKyAnLCcgKyBzdGFydF95ICsgJywgTCcgK1xuICAgICAgICAgIHN0YXJ0X3ggKyAnLCAnICsgZmluYWxfeSArICcsIEwnICsgZmluYWxfeCArICcsMCBaJztcbiAgICAgICAgICByZXR1cm4gb3V0cHV0X3N0cmluZztcbiAgICAgICAgfSlcbiAgICAgICAgLmF0dHIoJ3RyYW5zZm9ybScsIGZ1bmN0aW9uKGQpIHtcbiAgICAgICAgICB2YXIgeF9wb3MgPSBwYXJhbXMubWF0cml4Lnhfc2NhbGUoZC5wb3NfeCkgKyAwLjUqcGFyYW1zLnZpei5ib3JkZXJfd2lkdGg7XG4gICAgICAgICAgdmFyIHlfcG9zID0gMC41KnBhcmFtcy52aXouYm9yZGVyX3dpZHRoL3BhcmFtcy52aXouem9vbV9zd2l0Y2g7XG4gICAgICAgICAgcmV0dXJuICd0cmFuc2xhdGUoJyArIHhfcG9zICsgJywnK3lfcG9zKycpJztcbiAgICAgICAgfSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHVwZGF0ZV90aWxlc191cFxuICAgICAgICAuYXR0cignZCcsIGZ1bmN0aW9uKCkge1xuICAgICAgICAgIC8vIHVwIHRyaWFuZ2xlXG4gICAgICAgICAgdmFyIHN0YXJ0X3ggPSAwO1xuICAgICAgICAgIHZhciBmaW5hbF94ID0gcGFyYW1zLm1hdHJpeC54X3NjYWxlLnJhbmdlQmFuZCgpO1xuICAgICAgICAgIHZhciBzdGFydF95ID0gMDtcbiAgICAgICAgICB2YXIgZmluYWxfeSA9IHBhcmFtcy5tYXRyaXgueV9zY2FsZS5yYW5nZUJhbmQoKSAtIHBhcmFtcy5tYXRyaXgueV9zY2FsZS5yYW5nZUJhbmQoKSAvNjA7XG4gICAgICAgICAgdmFyIG91dHB1dF9zdHJpbmcgPSAnTScgKyBzdGFydF94ICsgJywnICsgc3RhcnRfeSArICcsIEwnICtcbiAgICAgICAgICBzdGFydF94ICsgJywgJyArIGZpbmFsX3kgKyAnLCBMJyArIGZpbmFsX3ggKyAnLDAgWic7XG4gICAgICAgICAgcmV0dXJuIG91dHB1dF9zdHJpbmc7XG4gICAgICAgIH0pXG4gICAgICAgIC5hdHRyKCd0cmFuc2Zvcm0nLCBmdW5jdGlvbihkKSB7XG4gICAgICAgICAgdmFyIHhfcG9zID0gcGFyYW1zLm1hdHJpeC54X3NjYWxlKGQucG9zX3gpICsgMC41KnBhcmFtcy52aXouYm9yZGVyX3dpZHRoO1xuICAgICAgICAgIHZhciB5X3BvcyA9IDAuNSpwYXJhbXMudml6LmJvcmRlcl93aWR0aC9wYXJhbXMudml6Lnpvb21fc3dpdGNoO1xuICAgICAgICAgIHJldHVybiAndHJhbnNsYXRlKCcgKyB4X3BvcyArICcsJyt5X3BvcysnKSc7XG4gICAgICAgIH0pO1xuICAgIH1cblxuICAgIC8vIHVwZGF0ZSBzcGxpdCB0aWxlc19kblxuICAgIHZhciB1cGRhdGVfdGlsZXNfZG4gPSBjdXJfdGlsZXNfZG5cbiAgICAgIC5vbignbW91c2VvdmVyJywgZnVuY3Rpb24ocCkge1xuICAgICAgICAvLyBoaWdobGlnaHQgcm93IC0gc2V0IHRleHQgdG8gYWN0aXZlIGlmXG4gICAgICAgIGQzLnNlbGVjdEFsbChwYXJhbXMucm9vdCsnIC5yb3dfbGFiZWxfdGV4dCB0ZXh0JylcbiAgICAgICAgICAuY2xhc3NlZCgnYWN0aXZlJywgZnVuY3Rpb24oZCkge1xuICAgICAgICAgICAgcmV0dXJuIHAucm93X25hbWUgPT09IGQubmFtZTtcbiAgICAgICAgICB9KTtcblxuICAgICAgICBkMy5zZWxlY3RBbGwocGFyYW1zLnJvb3QrJyAuY29sX2xhYmVsX3RleHQgdGV4dCcpXG4gICAgICAgICAgLmNsYXNzZWQoJ2FjdGl2ZScsIGZ1bmN0aW9uKGQpIHtcbiAgICAgICAgICAgIHJldHVybiBwLmNvbF9uYW1lID09PSBkLm5hbWU7XG4gICAgICAgICAgfSk7XG4gICAgICAgIC8vIGlmIChwYXJhbXMubWF0cml4LnNob3dfdGlsZV90b29sdGlwcyl7XG4gICAgICAgIC8vICAgdGlwLnNob3cocCk7XG4gICAgICAgIC8vIH1cbiAgICAgIH0pXG4gICAgICAub24oJ21vdXNlb3V0JywgZnVuY3Rpb24gbW91c2VvdXQoKSB7XG4gICAgICAgIGQzLnNlbGVjdEFsbChwYXJhbXMucm9vdCsnIHRleHQnKS5jbGFzc2VkKCdhY3RpdmUnLCBmYWxzZSk7XG4gICAgICAgIC8vIGlmIChwYXJhbXMubWF0cml4LnNob3dfdGlsZV90b29sdGlwcyl7XG4gICAgICAgIC8vICAgdGlwLmhpZGUoKTtcbiAgICAgICAgLy8gfVxuICAgICAgfSk7XG5cbiAgICBpZiAoZGVsYXlzLnJ1bl90cmFuc2l0aW9uKXtcbiAgICAgIHVwZGF0ZV90aWxlc19kblxuICAgICAgICAudHJhbnNpdGlvbigpLmRlbGF5KGRlbGF5cy51cGRhdGUpLmR1cmF0aW9uKGR1cmF0aW9uKVxuICAgICAgICAuYXR0cignZCcsIGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgLy8gZG4gdHJpYW5nbGVcbiAgICAgICAgICAgIHZhciBzdGFydF94ID0gMDtcbiAgICAgICAgICAgIHZhciBmaW5hbF94ID0gcGFyYW1zLm1hdHJpeC54X3NjYWxlLnJhbmdlQmFuZCgpO1xuICAgICAgICAgICAgdmFyIHN0YXJ0X3kgPSBwYXJhbXMubWF0cml4Lnlfc2NhbGUucmFuZ2VCYW5kKCkgLSBwYXJhbXMubWF0cml4Lnlfc2NhbGUucmFuZ2VCYW5kKCkgLzYwO1xuICAgICAgICAgICAgdmFyIGZpbmFsX3kgPSBwYXJhbXMubWF0cml4Lnlfc2NhbGUucmFuZ2VCYW5kKCkgLSBwYXJhbXMubWF0cml4Lnlfc2NhbGUucmFuZ2VCYW5kKCkgLzYwO1xuICAgICAgICAgICAgdmFyIG91dHB1dF9zdHJpbmcgPSAnTScgKyBzdGFydF94ICsgJywgJyArIHN0YXJ0X3kgKyAnICwgICBMJyArXG4gICAgICAgICAgICBmaW5hbF94ICsgJywgJyArIGZpbmFsX3kgKyAnLCAgTCcgKyBmaW5hbF94ICsgJywwIFonO1xuICAgICAgICAgICAgcmV0dXJuIG91dHB1dF9zdHJpbmc7XG4gICAgICAgICAgfSlcbiAgICAgICAgICAuYXR0cigndHJhbnNmb3JtJywgZnVuY3Rpb24oZCkge1xuICAgICAgICAgICAgdmFyIHhfcG9zID0gcGFyYW1zLm1hdHJpeC54X3NjYWxlKGQucG9zX3gpICsgMC41KnBhcmFtcy52aXouYm9yZGVyX3dpZHRoO1xuICAgICAgICAgICAgdmFyIHlfcG9zID0gMC41KnBhcmFtcy52aXouYm9yZGVyX3dpZHRoL3BhcmFtcy52aXouem9vbV9zd2l0Y2g7XG4gICAgICAgICAgICByZXR1cm4gJ3RyYW5zbGF0ZSgnICsgeF9wb3MgKyAnLCcreV9wb3MrJyknO1xuICAgICAgICAgIH0pO1xuICAgIH0gZWxzZSB7XG4gICAgICB1cGRhdGVfdGlsZXNfZG5cbiAgICAgICAgLmF0dHIoJ2QnLCBmdW5jdGlvbigpIHtcbiAgICAgICAgICAvLyBkbiB0cmlhbmdsZVxuICAgICAgICAgIHZhciBzdGFydF94ID0gMDtcbiAgICAgICAgICB2YXIgZmluYWxfeCA9IHBhcmFtcy5tYXRyaXgueF9zY2FsZS5yYW5nZUJhbmQoKTtcbiAgICAgICAgICB2YXIgc3RhcnRfeSA9IHBhcmFtcy5tYXRyaXgueV9zY2FsZS5yYW5nZUJhbmQoKSAtIHBhcmFtcy5tYXRyaXgueV9zY2FsZS5yYW5nZUJhbmQoKSAvNjA7XG4gICAgICAgICAgdmFyIGZpbmFsX3kgPSBwYXJhbXMubWF0cml4Lnlfc2NhbGUucmFuZ2VCYW5kKCkgLSBwYXJhbXMubWF0cml4Lnlfc2NhbGUucmFuZ2VCYW5kKCkgLzYwO1xuICAgICAgICAgIHZhciBvdXRwdXRfc3RyaW5nID0gJ00nICsgc3RhcnRfeCArICcsICcgKyBzdGFydF95ICsgJyAsICAgTCcgK1xuICAgICAgICAgIGZpbmFsX3ggKyAnLCAnICsgZmluYWxfeSArICcsICBMJyArIGZpbmFsX3ggKyAnLDAgWic7XG4gICAgICAgICAgcmV0dXJuIG91dHB1dF9zdHJpbmc7XG4gICAgICAgIH0pXG4gICAgICAgIC5hdHRyKCd0cmFuc2Zvcm0nLCBmdW5jdGlvbihkKSB7XG4gICAgICAgICAgdmFyIHhfcG9zID0gcGFyYW1zLm1hdHJpeC54X3NjYWxlKGQucG9zX3gpICsgMC41KnBhcmFtcy52aXouYm9yZGVyX3dpZHRoO1xuICAgICAgICAgIHZhciB5X3BvcyA9IDAuNSpwYXJhbXMudml6LmJvcmRlcl93aWR0aC9wYXJhbXMudml6Lnpvb21fc3dpdGNoO1xuICAgICAgICAgIHJldHVybiAndHJhbnNsYXRlKCcgKyB4X3BvcyArICcsJyt5X3BvcysnKSc7XG4gICAgICAgIH0pO1xuICAgIH1cblxuICAgIC8vIHJlbW92ZSB0aWxlcyB3aGVuIHNwbGl0dGluZyBpcyBkb25lXG4gICAgY3VyX3Jvd190aWxlc1xuICAgICAgLnNlbGVjdEFsbCgnLnRpbGUnKVxuICAgICAgLmVhY2goZnVuY3Rpb24oZCl7XG4gICAgICAgIGlmICggTWF0aC5hYnMoZC52YWx1ZV91cCk+MCAmJiBNYXRoLmFicyhkLnZhbHVlX2RuKT4wICl7XG4gICAgICAgICAgZDMuc2VsZWN0KHJvd19zZWxlY3Rpb24pLnJlbW92ZSgpO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgfVxuXG5cbiAgLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vXG4gIC8vIEVudGVyXG4gIC8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xuICAvLyBlbnRlciBuZXcgdGlsZXNcbiAgdmFyIG5ld190aWxlcyA9IGN1cl9yb3dfdGlsZXNcbiAgICAuZW50ZXIoKVxuICAgIC5hcHBlbmQoJ3JlY3QnKVxuICAgIC5hdHRyKCdjbGFzcycsICd0aWxlIHJvd190aWxlJylcbiAgICAuYXR0cignd2lkdGgnLCBwYXJhbXMubWF0cml4LnJlY3Rfd2lkdGgpXG4gICAgLmF0dHIoJ2hlaWdodCcsIHBhcmFtcy5tYXRyaXgucmVjdF9oZWlnaHQpXG4gICAgLm9uKCdtb3VzZW92ZXInLCBmdW5jdGlvbihwKSB7XG4gICAgICAvLyBoaWdobGlnaHQgcm93IC0gc2V0IHRleHQgdG8gYWN0aXZlIGlmXG4gICAgICBkMy5zZWxlY3RBbGwocGFyYW1zLnJvb3QrJyAucm93X2xhYmVsX3RleHQgdGV4dCcpXG4gICAgICAgIC5jbGFzc2VkKCdhY3RpdmUnLCBmdW5jdGlvbihkKSB7XG4gICAgICAgICAgcmV0dXJuIHAucm93X25hbWUgPT09IGQubmFtZTtcbiAgICAgICAgfSk7XG5cbiAgICAgIGQzLnNlbGVjdEFsbChwYXJhbXMucm9vdCsnIC5jb2xfbGFiZWxfdGV4dCB0ZXh0JylcbiAgICAgICAgLmNsYXNzZWQoJ2FjdGl2ZScsIGZ1bmN0aW9uKGQpIHtcbiAgICAgICAgICByZXR1cm4gcC5jb2xfbmFtZSA9PT0gZC5uYW1lO1xuICAgICAgICB9KTtcbiAgICAgIC8vIGlmIChwYXJhbXMubWF0cml4LnNob3dfdGlsZV90b29sdGlwcyl7XG4gICAgICAvLyAgIHRpcC5zaG93KHApO1xuICAgICAgLy8gfVxuICAgIH0pXG4gICAgLm9uKCdtb3VzZW91dCcsIGZ1bmN0aW9uIG1vdXNlb3V0KCkge1xuICAgICAgZDMuc2VsZWN0QWxsKHBhcmFtcy5yb290KycgdGV4dCcpLmNsYXNzZWQoJ2FjdGl2ZScsIGZhbHNlKTtcbiAgICAgIC8vIGlmIChwYXJhbXMubWF0cml4LnNob3dfdGlsZV90b29sdGlwcyl7XG4gICAgICAvLyAgIHRpcC5oaWRlKCk7XG4gICAgICAvLyB9XG4gICAgfSlcbiAgICAuYXR0cignZmlsbC1vcGFjaXR5JywwKVxuICAgIC5hdHRyKCd0cmFuc2Zvcm0nLCBmdW5jdGlvbihkKXtcbiAgICAgIHZhciB4X3BvcyA9IHBhcmFtcy5tYXRyaXgueF9zY2FsZShkLnBvc194KSArIDAuNSpwYXJhbXMudml6LmJvcmRlcl93aWR0aDtcbiAgICAgIHZhciB5X3BvcyA9IDAuNSpwYXJhbXMudml6LmJvcmRlcl93aWR0aC9wYXJhbXMudml6Lnpvb21fc3dpdGNoO1xuICAgICAgcmV0dXJuICd0cmFuc2xhdGUoJyt4X3BvcysnLCcreV9wb3MrJyknO1xuICAgIH0pO1xuXG5cbiAgaWYgKGRlbGF5cy5ydW5fdHJhbnNpdGlvbil7XG4gICAgbmV3X3RpbGVzXG4gICAgICAudHJhbnNpdGlvbigpLmRlbGF5KGRlbGF5cy5lbnRlcikuZHVyYXRpb24oZHVyYXRpb24pXG4gICAgICAuc3R5bGUoJ2ZpbGwnLCBmdW5jdGlvbihkKSB7XG4gICAgICAgIHJldHVybiBkLnZhbHVlID4gMCA/IHBhcmFtcy5tYXRyaXgudGlsZV9jb2xvcnNbMF0gOiBwYXJhbXMubWF0cml4LnRpbGVfY29sb3JzWzFdO1xuICAgICAgfSlcbiAgICAgIC5hdHRyKCdmaWxsLW9wYWNpdHknLGZ1bmN0aW9uKGQpe1xuICAgICAgICB2YXIgb3V0cHV0X29wYWNpdHkgPSBwYXJhbXMubWF0cml4Lm9wYWNpdHlfc2NhbGUoTWF0aC5hYnMoZC52YWx1ZSkpO1xuICAgICAgICByZXR1cm4gb3V0cHV0X29wYWNpdHk7XG4gICAgICB9KTtcbiAgfSBlbHNlIHtcbiAgICBuZXdfdGlsZXNcbiAgICAgIC5zdHlsZSgnZmlsbCcsIGZ1bmN0aW9uKGQpIHtcbiAgICAgICAgcmV0dXJuIGQudmFsdWUgPiAwID8gcGFyYW1zLm1hdHJpeC50aWxlX2NvbG9yc1swXSA6IHBhcmFtcy5tYXRyaXgudGlsZV9jb2xvcnNbMV07XG4gICAgICB9KVxuICAgICAgLmF0dHIoJ2ZpbGwtb3BhY2l0eScsZnVuY3Rpb24oZCl7XG4gICAgICAgIHZhciBvdXRwdXRfb3BhY2l0eSA9IHBhcmFtcy5tYXRyaXgub3BhY2l0eV9zY2FsZShNYXRoLmFicyhkLnZhbHVlKSk7XG4gICAgICAgIHJldHVybiBvdXRwdXRfb3BhY2l0eTtcbiAgICAgIH0pO1xuICB9XG5cbiAgLy8gcmVtb3ZlIG5ldyB0aWxlcyBpZiBuZWNlc3NhcnlcbiAgbmV3X3RpbGVzXG4gICAgLmVhY2goZnVuY3Rpb24oZCl7XG4gICAgICBpZiAoTWF0aC5hYnMoZC52YWx1ZV91cCkgPiAwICYmIE1hdGguYWJzKGQudmFsdWVfZG4pID4gMCkge1xuICAgICAgICBkMy5zZWxlY3Qocm93X3NlbGVjdGlvbikucmVtb3ZlKCk7XG4gICAgICB9XG4gICAgfSk7XG5cbiAgLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xuICAvLyBuZWVkIHRvIGFkZCBzcGxpdCB0aWxlcyB0byBleGlzdGluZyByb3dzXG4gIC8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cblxufTtcblxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIHNyYy9uZXR3b3JrL2VldV9leGlzdGluZ19yb3cuanNcbiAqKi8iXSwibWFwcGluZ3MiOiI7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFIQTtBQU1BO0FBREE7QUFDQTs7QUFOQTtBQWFBO0FBREE7QUFDQTs7OztBQWJBO0FBb0JBO0FBREE7QUFPQTtBQVBBO0FBQ0E7QUFZQTtBQUNBOztBQUVBO0FBQ0E7QUFEQTtBQUNBOztBQUpBO0FBVUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQURBO0FBT0E7QUFQQTtBQUNBOztBQWJBO0FBNEJBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFEQTtBQU9BO0FBUEE7QUE5QkE7QUFDQTs7Ozs7O0FBakNBOztBQXFGQTtBQUVBO0FBREE7QUFDQTtBQUdBO0FBRUE7QUFEQTs7OztBQVJBO0FBZ0JBOzs7O0FBREE7QUFDQTtBQU1BO0FBQ0E7QUFDQTtBQUNBO0FBS0E7QUFDQTtBQUNBO0FBQ0E7QUFIQTtBQURBO0FBTEE7QUFhQTtBQUlBO0FBQ0E7QUFDQTtBQUNBO0FBSEE7QUFEQTtBQWhCQTtBQUNBO0FBd0JBO0FBQ0E7O0FBRUE7O0FBR0E7QUFFQTtBQURBO0FBQ0E7QUFHQTtBQUVBO0FBREE7Ozs7QUFSQTtBQWdCQTs7OztBQURBO0FBQ0E7QUFNQTtBQUNBOztBQUlBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQVJBO0FBV0E7QUFDQTtBQUNBO0FBSEE7QUFiQTtBQW1CQTs7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFSQTtBQVdBO0FBQ0E7QUFDQTtBQUhBO0FBOUJBO0FBQ0E7O0FBM0JBOztBQW1FQTtBQUVBO0FBREE7QUFDQTtBQUdBO0FBRUE7QUFEQTs7OztBQVJBO0FBZ0JBOzs7O0FBREE7QUFDQTtBQU1BO0FBQ0E7O0FBSUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBUkE7QUFXQTtBQUNBO0FBQ0E7QUFIQTtBQWJBO0FBbUJBOztBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQVJBO0FBV0E7QUFDQTtBQUNBO0FBSEE7QUE5QkE7QUFDQTs7QUF4RkE7QUFnSUE7QUFDQTtBQURBO0FBREE7QUEvSEE7QUFDQTs7Ozs7QUFySUE7O0FBdVJBO0FBRUE7QUFEQTtBQUNBO0FBR0E7QUFFQTtBQURBOzs7O0FBUkE7QUFnQkE7Ozs7QUFEQTtBQVFBO0FBQ0E7QUFDQTtBQUhBO0FBQ0E7QUFNQTtBQUNBO0FBR0E7QUFEQTtBQUlBO0FBQ0E7QUFGQTtBQU5BO0FBV0E7QUFFQTtBQURBO0FBSUE7QUFDQTtBQUZBO0FBZkE7QUFDQTs7QUFuVEE7QUEwVUE7QUFDQTtBQURBO0FBREE7QUFDQTs7OztBQTFVQUFBQUE7Iiwic291cmNlUm9vdCI6IiJ9");

/***/ },
/* 48 */
/***/ function(module, exports) {

	eval("module.exports = function (old_params, params) {\n\n  // exit, update, enter\n\n  // check if exit or enter or both are required\n  var old_row_nodes = old_params.network_data.row_nodes;\n  var old_col_nodes = old_params.network_data.col_nodes;\n  var old_row = _.map(old_row_nodes, function (d) {\n    return d.name;\n  });\n  var old_col = _.map(old_col_nodes, function (d) {\n    return d.name;\n  });\n  var all_old_nodes = old_row.concat(old_col);\n\n  var row_nodes = params.network_data.row_nodes;\n  var col_nodes = params.network_data.col_nodes;\n  var row = _.map(row_nodes, function (d) {\n    return d.name;\n  });\n  var col = _.map(col_nodes, function (d) {\n    return d.name;\n  });\n  var all_nodes = row.concat(col);\n\n  var exit_nodes = _.difference(all_old_nodes, all_nodes).length;\n  var enter_nodes = _.difference(all_nodes, all_old_nodes).length;\n\n  var delays = {};\n\n  if (exit_nodes > 0) {\n    delays.update = 1000;\n  } else {\n    delays.update = 0;\n  }\n\n  if (enter_nodes > 0) {\n    delays.enter = 1000;\n  } else {\n    delays.enter = 0;\n  }\n\n  delays.enter = delays.enter + delays.update;\n\n  delays.run_transition = true;\n\n  var old_num_links = old_params.network_data.links.length;\n  var new_num_links = params.network_data.links.length;\n  var cutoff_num_links = 0.35 * params.matrix.def_large_matrix;\n\n  if (old_num_links > cutoff_num_links || new_num_links > cutoff_num_links) {\n    delays.run_transition = false;\n    delays.update = 0;\n    delays.enter = 0;\n  }\n\n  // reduce opacity during update\n  d3.select(params.viz.viz_svg).style('opacity', 0.70);\n\n  function finish_update() {\n    d3.select(params.viz.viz_svg).transition().duration(250).style('opacity', 1.0);\n  }\n  setTimeout(finish_update, delays.enter);\n\n  return delays;\n};//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNDguanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vc3JjL25ldHdvcmsvZGVmaW5lX2VudGVyX2V4aXRfZGVsYXlzLmpzPzU4M2EiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihvbGRfcGFyYW1zLCBwYXJhbXMpIHtcblxuICAvLyBleGl0LCB1cGRhdGUsIGVudGVyXG5cbiAgLy8gY2hlY2sgaWYgZXhpdCBvciBlbnRlciBvciBib3RoIGFyZSByZXF1aXJlZFxuICB2YXIgb2xkX3Jvd19ub2RlcyA9IG9sZF9wYXJhbXMubmV0d29ya19kYXRhLnJvd19ub2RlcztcbiAgdmFyIG9sZF9jb2xfbm9kZXMgPSBvbGRfcGFyYW1zLm5ldHdvcmtfZGF0YS5jb2xfbm9kZXM7XG4gIHZhciBvbGRfcm93ID0gXy5tYXAob2xkX3Jvd19ub2RlcywgZnVuY3Rpb24oZCl7cmV0dXJuIGQubmFtZTt9KTtcbiAgdmFyIG9sZF9jb2wgPSBfLm1hcChvbGRfY29sX25vZGVzLCBmdW5jdGlvbihkKXtyZXR1cm4gZC5uYW1lO30pO1xuICB2YXIgYWxsX29sZF9ub2RlcyA9IG9sZF9yb3cuY29uY2F0KG9sZF9jb2wpO1xuXG4gIHZhciByb3dfbm9kZXMgPSBwYXJhbXMubmV0d29ya19kYXRhLnJvd19ub2RlcztcbiAgdmFyIGNvbF9ub2RlcyA9IHBhcmFtcy5uZXR3b3JrX2RhdGEuY29sX25vZGVzO1xuICB2YXIgcm93ID0gXy5tYXAocm93X25vZGVzLCBmdW5jdGlvbihkKXtyZXR1cm4gZC5uYW1lO30pO1xuICB2YXIgY29sID0gXy5tYXAoY29sX25vZGVzLCBmdW5jdGlvbihkKXtyZXR1cm4gZC5uYW1lO30pO1xuICB2YXIgYWxsX25vZGVzID0gcm93LmNvbmNhdChjb2wpO1xuXG4gIHZhciBleGl0X25vZGVzICA9IF8uZGlmZmVyZW5jZSggYWxsX29sZF9ub2RlcywgYWxsX25vZGVzICkubGVuZ3RoO1xuICB2YXIgZW50ZXJfbm9kZXMgPSBfLmRpZmZlcmVuY2UoIGFsbF9ub2RlcywgYWxsX29sZF9ub2RlcyApLmxlbmd0aDtcblxuICB2YXIgZGVsYXlzID0ge307XG5cbiAgaWYgKGV4aXRfbm9kZXMgPiAwKXtcbiAgICBkZWxheXMudXBkYXRlID0gMTAwMDtcbiAgfSBlbHNlIHtcbiAgICBkZWxheXMudXBkYXRlID0gMDtcbiAgfVxuXG4gIGlmIChlbnRlcl9ub2RlcyA+IDApe1xuICAgIGRlbGF5cy5lbnRlciA9IDEwMDA7XG4gIH0gZWxzZSB7XG4gICAgZGVsYXlzLmVudGVyID0gMDtcbiAgfVxuXG4gIGRlbGF5cy5lbnRlciAgPSBkZWxheXMuZW50ZXIgKyBkZWxheXMudXBkYXRlIDtcblxuICBkZWxheXMucnVuX3RyYW5zaXRpb24gPSB0cnVlO1xuXG4gIHZhciBvbGRfbnVtX2xpbmtzID0gb2xkX3BhcmFtcy5uZXR3b3JrX2RhdGEubGlua3MubGVuZ3RoO1xuICB2YXIgbmV3X251bV9saW5rcyA9IHBhcmFtcy5uZXR3b3JrX2RhdGEubGlua3MubGVuZ3RoO1xuICB2YXIgY3V0b2ZmX251bV9saW5rcyA9IDAuMzUqcGFyYW1zLm1hdHJpeC5kZWZfbGFyZ2VfbWF0cml4O1xuXG4gIGlmICggb2xkX251bV9saW5rcyA+IGN1dG9mZl9udW1fbGlua3MgfHwgbmV3X251bV9saW5rcyA+IGN1dG9mZl9udW1fbGlua3MgKXtcbiAgICBkZWxheXMucnVuX3RyYW5zaXRpb24gPSBmYWxzZTtcbiAgICBkZWxheXMudXBkYXRlID0gMDtcbiAgICBkZWxheXMuZW50ZXIgPSAwO1xuICB9XG5cbiAgLy8gcmVkdWNlIG9wYWNpdHkgZHVyaW5nIHVwZGF0ZVxuICBkMy5zZWxlY3QocGFyYW1zLnZpei52aXpfc3ZnKVxuICAgIC5zdHlsZSgnb3BhY2l0eScsMC43MCk7XG5cbiAgZnVuY3Rpb24gZmluaXNoX3VwZGF0ZSgpe1xuICAgIGQzLnNlbGVjdChwYXJhbXMudml6LnZpel9zdmcpXG4gICAgICAudHJhbnNpdGlvbigpLmR1cmF0aW9uKDI1MClcbiAgICAgIC5zdHlsZSgnb3BhY2l0eScsMS4wKTtcbiAgfVxuICBzZXRUaW1lb3V0KGZpbmlzaF91cGRhdGUsIGRlbGF5cy5lbnRlcik7XG5cbiAgcmV0dXJuIGRlbGF5cztcbn07XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiBzcmMvbmV0d29yay9kZWZpbmVfZW50ZXJfZXhpdF9kZWxheXMuanNcbiAqKi8iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7Ozs7QUFJQTtBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBQ0E7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQUE7QUFDQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFEQTtBQUdBO0FBSEE7QUFDQTtBQUtBO0FBQ0E7QUFEQTtBQUdBO0FBSEE7QUFDQTtBQUtBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUhBO0FBQ0E7O0FBM0NBO0FBQ0E7QUFtREE7QUFDQTtBQURBO0FBS0E7QUFDQTtBQUNBO0FBM0RBIiwic291cmNlUm9vdCI6IiJ9");

/***/ },
/* 49 */
/***/ function(module, exports) {

	eval("\nmodule.exports = function (params, inst_cat) {\n  // change the category\n  params.current_col_cat = inst_cat;\n};//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNDkuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vc3JjL25ldHdvcmsvY2hhbmdlX2NhdGVnb3J5LmpzP2E2NTgiXSwic291cmNlc0NvbnRlbnQiOlsiXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKHBhcmFtcywgaW5zdF9jYXQpIHtcbiAgLy8gY2hhbmdlIHRoZSBjYXRlZ29yeVxuICBwYXJhbXMuY3VycmVudF9jb2xfY2F0ID0gaW5zdF9jYXQ7XG59O1xuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogc3JjL25ldHdvcmsvY2hhbmdlX2NhdGVnb3J5LmpzXG4gKiovIl0sIm1hcHBpbmdzIjoiO0FBQ0E7O0FBRUE7QUFGQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ },
/* 50 */
/***/ function(module, exports, __webpack_require__) {

	eval("\nvar ini_sidebar = __webpack_require__(55);\nvar set_up_filters = __webpack_require__(53);\n\n/* Represents sidebar with controls.\n */\nmodule.exports = function sidebar(config, params) {\n  var is_active;\n\n  var button_data = [{ 'name': 'Cluster',\n    'short_name': 'clust' }, { 'name': 'Rank by Sum',\n    'short_name': 'rank' }];\n\n  var sidebar = d3.select(params.root).append('div').attr('class', params.sidebar.sidebar_class).style('margin-left', '10px').style('float', 'left').style('width', '180px');\n\n  sidebar.append('div').html('Row Order');\n\n  var row_reorder = sidebar.append('div').classed('viz_medium_text', true).append('div').classed('btn-group-vertical', true).classed('toggle_col_order', true).attr('role', 'group');\n  // .style('margin','auto')\n  // .style('width','100%');\n\n  row_reorder.selectAll('.button').data(button_data).enter().append('button').attr('type', 'button').classed('btn', true).classed('btn-primary', true).classed('active', function (d) {\n    is_active = false;\n    if (d.name == 'Cluster') {\n      is_active = true;\n    }\n    return is_active;\n  }).attr('name', function (d) {\n    return d.short_name;\n  }).html(function (d) {\n    return d.name;\n  });\n\n  sidebar.append('div').html('Column Order');\n\n  var col_reorder = sidebar.append('div').classed('viz_medium_text', true).append('div').classed('btn-group-vertical', true).classed('toggle_row_order', true).attr('role', 'group');\n\n  col_reorder.selectAll('.button').data(button_data).enter().append('button').attr('type', 'button').classed('btn', true).classed('btn-primary', true).classed('active', function (d) {\n    is_active = false;\n    if (d.name == 'Cluster') {\n      is_active = true;\n    }\n    return is_active;\n  }).attr('name', function (d) {\n    return d.short_name;\n  }).html(function (d) {\n    return d.name;\n  });\n\n  var search_container = sidebar.append('div').classed('row', true).classed('gene_search_container', true);\n\n  search_container.append('input').classed('form-control', true).classed('gene_search_box', true).attr('type', 'text').attr('placeholder', 'Input Gene');\n\n  search_container.append('div').classed('btn-group', true).classed('gene_search_button', true).attr('data-toggle', 'buttons').append('div').append('button').html('Search').attr('type', 'button').classed('btn', true).classed('btn-primary', true).classed('submit_gene_button', true);\n\n  var colorbar_sliders = sidebar.append('div').classed('colorbar_sliders', true);\n\n  colorbar_sliders.append('p').classed('viz_medium_text', true).text('Row Group Size');\n\n  colorbar_sliders.append('div').classed('slider_row', true).classed('slider', true);\n\n  colorbar_sliders.append('p').classed('viz_medium_text', true).text('Column Group Size');\n\n  colorbar_sliders.append('div').classed('slider_col', true).classed('slider', true);\n\n  var filter_type = 'N_row_sum';\n  var initial_text = 'Top rows: all rows';\n  set_up_filters(config, params, filter_type, initial_text);\n\n  var filter_type = 'pct_row_sum';\n  var initial_text = 'Top rows: all rows';\n  set_up_filters(config, params, filter_type, initial_text);\n\n  ini_sidebar(params);\n\n  // 1. Recreate sidebar in JavaScript from HTML.\n  // 2. Rename all IDs to classes.\n  //    Don't forget load_clustergram.js\n  // 3. Move behavior in load_clustergram.js to sidebar.js\n  //    Example of advanced behavior:\n  //\n  //    if (params.use_controls) {\n  //       sidebar.select(params.root).append('div').....\n};undefined\n//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTAuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vc3JjL3NpZGViYXIvaW5kZXguanM/MWZlMSJdLCJzb3VyY2VzQ29udGVudCI6WyJcbnZhciBpbmlfc2lkZWJhciA9IHJlcXVpcmUoJy4uL3NpZGViYXIvaW5pX3NpZGViYXInKTtcbnZhciBzZXRfdXBfZmlsdGVycyA9IHJlcXVpcmUoJy4uL2ZpbHRlcnMvc2V0X3VwX2ZpbHRlcnMnKTtcblxuLyogUmVwcmVzZW50cyBzaWRlYmFyIHdpdGggY29udHJvbHMuXG4gKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gc2lkZWJhcihjb25maWcsIHBhcmFtcykge1xuICB2YXIgaXNfYWN0aXZlO1xuXG4gIHZhciBidXR0b25fZGF0YSA9IFtcbiAgICAgIHsnbmFtZSc6J0NsdXN0ZXInLFxuICAgICAgICdzaG9ydF9uYW1lJzonY2x1c3QnfSxcbiAgICAgIHsnbmFtZSc6J1JhbmsgYnkgU3VtJyxcbiAgICAgICdzaG9ydF9uYW1lJzoncmFuayd9XG4gICAgXTtcblxuICB2YXIgc2lkZWJhciA9IGQzXG4gICAgLnNlbGVjdChwYXJhbXMucm9vdClcbiAgICAuYXBwZW5kKCdkaXYnKVxuICAgIC5hdHRyKCdjbGFzcycsIHBhcmFtcy5zaWRlYmFyLnNpZGViYXJfY2xhc3MgKVxuICAgIC5zdHlsZSgnbWFyZ2luLWxlZnQnLCcxMHB4JylcbiAgICAuc3R5bGUoJ2Zsb2F0JywgJ2xlZnQnKVxuICAgIC5zdHlsZSgnd2lkdGgnLCcxODBweCcpO1xuXG4gIHNpZGViYXJcbiAgICAuYXBwZW5kKCdkaXYnKVxuICAgIC5odG1sKCdSb3cgT3JkZXInKTtcblxuICB2YXIgcm93X3Jlb3JkZXIgPSBzaWRlYmFyXG4gICAgLmFwcGVuZCgnZGl2JylcbiAgICAuY2xhc3NlZCgndml6X21lZGl1bV90ZXh0Jyx0cnVlKVxuICAgIC5hcHBlbmQoJ2RpdicpXG4gICAgLmNsYXNzZWQoJ2J0bi1ncm91cC12ZXJ0aWNhbCcsdHJ1ZSlcbiAgICAuY2xhc3NlZCgndG9nZ2xlX2NvbF9vcmRlcicsdHJ1ZSlcbiAgICAuYXR0cigncm9sZScsJ2dyb3VwJyk7XG4gICAgLy8gLnN0eWxlKCdtYXJnaW4nLCdhdXRvJylcbiAgICAvLyAuc3R5bGUoJ3dpZHRoJywnMTAwJScpO1xuXG4gIHJvd19yZW9yZGVyXG4gICAgLnNlbGVjdEFsbCgnLmJ1dHRvbicpXG4gICAgLmRhdGEoYnV0dG9uX2RhdGEpXG4gICAgLmVudGVyKClcbiAgICAuYXBwZW5kKCdidXR0b24nKVxuICAgIC5hdHRyKCd0eXBlJywnYnV0dG9uJylcbiAgICAuY2xhc3NlZCgnYnRuJyx0cnVlKVxuICAgIC5jbGFzc2VkKCdidG4tcHJpbWFyeScsdHJ1ZSlcbiAgICAuY2xhc3NlZCgnYWN0aXZlJywgZnVuY3Rpb24oZCl7XG4gICAgICBpc19hY3RpdmUgPSBmYWxzZTtcbiAgICAgIGlmIChkLm5hbWUgPT0gJ0NsdXN0ZXInKXtcbiAgICAgICAgaXNfYWN0aXZlID0gdHJ1ZTtcbiAgICAgIH1cbiAgICAgIHJldHVybiBpc19hY3RpdmU7XG4gICAgfSlcbiAgICAuYXR0cignbmFtZScsIGZ1bmN0aW9uKGQpe1xuICAgICAgcmV0dXJuIGQuc2hvcnRfbmFtZTtcbiAgICB9KVxuICAgIC5odG1sKGZ1bmN0aW9uKGQpe3JldHVybiBkLm5hbWU7fSk7XG5cbiAgc2lkZWJhclxuICAgIC5hcHBlbmQoJ2RpdicpXG4gICAgLmh0bWwoJ0NvbHVtbiBPcmRlcicpO1xuXG4gIHZhciBjb2xfcmVvcmRlciA9IHNpZGViYXJcbiAgICAuYXBwZW5kKCdkaXYnKVxuICAgIC5jbGFzc2VkKCd2aXpfbWVkaXVtX3RleHQnLHRydWUpXG4gICAgLmFwcGVuZCgnZGl2JylcbiAgICAuY2xhc3NlZCgnYnRuLWdyb3VwLXZlcnRpY2FsJyx0cnVlKVxuICAgIC5jbGFzc2VkKCd0b2dnbGVfcm93X29yZGVyJyx0cnVlKVxuICAgIC5hdHRyKCdyb2xlJywnZ3JvdXAnKTtcblxuICBjb2xfcmVvcmRlclxuICAgIC5zZWxlY3RBbGwoJy5idXR0b24nKVxuICAgIC5kYXRhKGJ1dHRvbl9kYXRhKVxuICAgIC5lbnRlcigpXG4gICAgLmFwcGVuZCgnYnV0dG9uJylcbiAgICAuYXR0cigndHlwZScsJ2J1dHRvbicpXG4gICAgLmNsYXNzZWQoJ2J0bicsdHJ1ZSlcbiAgICAuY2xhc3NlZCgnYnRuLXByaW1hcnknLHRydWUpXG4gICAgLmNsYXNzZWQoJ2FjdGl2ZScsIGZ1bmN0aW9uKGQpe1xuICAgICAgaXNfYWN0aXZlID0gZmFsc2U7XG4gICAgICBpZiAoZC5uYW1lID09ICdDbHVzdGVyJyl7XG4gICAgICAgIGlzX2FjdGl2ZSA9IHRydWU7XG4gICAgICB9XG4gICAgICByZXR1cm4gaXNfYWN0aXZlO1xuICAgIH0pXG4gICAgLmF0dHIoJ25hbWUnLCBmdW5jdGlvbihkKXtcbiAgICAgIHJldHVybiBkLnNob3J0X25hbWU7XG4gICAgfSlcbiAgICAuaHRtbChmdW5jdGlvbihkKXtyZXR1cm4gZC5uYW1lO30pO1xuXG4gIHZhciBzZWFyY2hfY29udGFpbmVyID0gc2lkZWJhclxuICAgIC5hcHBlbmQoJ2RpdicpXG4gICAgLmNsYXNzZWQoJ3JvdycsdHJ1ZSlcbiAgICAuY2xhc3NlZCgnZ2VuZV9zZWFyY2hfY29udGFpbmVyJyx0cnVlKTtcblxuICBzZWFyY2hfY29udGFpbmVyXG4gICAgLmFwcGVuZCgnaW5wdXQnKVxuICAgIC5jbGFzc2VkKCdmb3JtLWNvbnRyb2wnLHRydWUpXG4gICAgLmNsYXNzZWQoJ2dlbmVfc2VhcmNoX2JveCcsdHJ1ZSlcbiAgICAuYXR0cigndHlwZScsJ3RleHQnKVxuICAgIC5hdHRyKCdwbGFjZWhvbGRlcicsJ0lucHV0IEdlbmUnKTtcblxuICBzZWFyY2hfY29udGFpbmVyXG4gICAgLmFwcGVuZCgnZGl2JylcbiAgICAuY2xhc3NlZCgnYnRuLWdyb3VwJyx0cnVlKVxuICAgIC5jbGFzc2VkKCdnZW5lX3NlYXJjaF9idXR0b24nLHRydWUpXG4gICAgLmF0dHIoJ2RhdGEtdG9nZ2xlJywnYnV0dG9ucycpXG4gICAgLmFwcGVuZCgnZGl2JylcbiAgICAuYXBwZW5kKCdidXR0b24nKVxuICAgIC5odG1sKCdTZWFyY2gnKVxuICAgIC5hdHRyKCd0eXBlJywnYnV0dG9uJylcbiAgICAuY2xhc3NlZCgnYnRuJyx0cnVlKVxuICAgIC5jbGFzc2VkKCdidG4tcHJpbWFyeScsdHJ1ZSlcbiAgICAuY2xhc3NlZCgnc3VibWl0X2dlbmVfYnV0dG9uJyx0cnVlKTtcblxuICB2YXIgY29sb3JiYXJfc2xpZGVycyA9IHNpZGViYXJcbiAgICAuYXBwZW5kKCdkaXYnKVxuICAgIC5jbGFzc2VkKCdjb2xvcmJhcl9zbGlkZXJzJyx0cnVlKTtcblxuICBjb2xvcmJhcl9zbGlkZXJzXG4gICAgLmFwcGVuZCgncCcpXG4gICAgLmNsYXNzZWQoJ3Zpel9tZWRpdW1fdGV4dCcsdHJ1ZSlcbiAgICAudGV4dCgnUm93IEdyb3VwIFNpemUnKTtcblxuICBjb2xvcmJhcl9zbGlkZXJzXG4gICAgLmFwcGVuZCgnZGl2JylcbiAgICAuY2xhc3NlZCgnc2xpZGVyX3JvdycsdHJ1ZSlcbiAgICAuY2xhc3NlZCgnc2xpZGVyJyx0cnVlKTtcblxuICBjb2xvcmJhcl9zbGlkZXJzXG4gICAgLmFwcGVuZCgncCcpXG4gICAgLmNsYXNzZWQoJ3Zpel9tZWRpdW1fdGV4dCcsdHJ1ZSlcbiAgICAudGV4dCgnQ29sdW1uIEdyb3VwIFNpemUnKTtcblxuICBjb2xvcmJhcl9zbGlkZXJzXG4gICAgLmFwcGVuZCgnZGl2JylcbiAgICAuY2xhc3NlZCgnc2xpZGVyX2NvbCcsdHJ1ZSlcbiAgICAuY2xhc3NlZCgnc2xpZGVyJyx0cnVlKTtcblxuXG4gIHZhciBmaWx0ZXJfdHlwZSA9ICdOX3Jvd19zdW0nO1xuICB2YXIgaW5pdGlhbF90ZXh0ID0gJ1RvcCByb3dzOiBhbGwgcm93cyc7XG4gIHNldF91cF9maWx0ZXJzKGNvbmZpZywgcGFyYW1zLCBmaWx0ZXJfdHlwZSwgaW5pdGlhbF90ZXh0KTtcblxuICB2YXIgZmlsdGVyX3R5cGUgPSAncGN0X3Jvd19zdW0nO1xuICB2YXIgaW5pdGlhbF90ZXh0ID0gJ1RvcCByb3dzOiBhbGwgcm93cyc7XG4gIHNldF91cF9maWx0ZXJzKGNvbmZpZywgcGFyYW1zLCBmaWx0ZXJfdHlwZSwgaW5pdGlhbF90ZXh0KTtcblxuICBpbmlfc2lkZWJhcihwYXJhbXMpO1xuXG5cbiAgLy8gMS4gUmVjcmVhdGUgc2lkZWJhciBpbiBKYXZhU2NyaXB0IGZyb20gSFRNTC5cbiAgLy8gMi4gUmVuYW1lIGFsbCBJRHMgdG8gY2xhc3Nlcy5cbiAgLy8gICAgRG9uJ3QgZm9yZ2V0IGxvYWRfY2x1c3RlcmdyYW0uanNcbiAgLy8gMy4gTW92ZSBiZWhhdmlvciBpbiBsb2FkX2NsdXN0ZXJncmFtLmpzIHRvIHNpZGViYXIuanNcbiAgLy8gICAgRXhhbXBsZSBvZiBhZHZhbmNlZCBiZWhhdmlvcjpcbiAgLy9cbiAgLy8gICAgaWYgKHBhcmFtcy51c2VfY29udHJvbHMpIHtcbiAgLy8gICAgICAgc2lkZWJhci5zZWxlY3QocGFyYW1zLnJvb3QpLmFwcGVuZCgnZGl2JykuLi4uLlxuXG59O1xuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogc3JjL3NpZGViYXIvaW5kZXguanNcbiAqKi8iXSwibWFwcGluZ3MiOiI7QUFDQTtBQUNBO0FBQ0E7OztBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFFQTtBQUNBO0FBRUE7QUFDQTtBQU9BO0FBQ0E7QUFHQTs7OztBQXRCQTtBQXlDQTtBQUNBO0FBQ0E7QUFEQTtBQUdBO0FBTEE7QUFRQTtBQURBO0FBR0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUdBO0FBQ0E7QUFPQTtBQVNBO0FBQ0E7QUFDQTtBQURBO0FBR0E7QUFMQTtBQVFBO0FBREE7QUFHQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBSUE7QUFDQTtBQU1BO0FBQ0E7QUFZQTtBQUNBO0FBR0E7QUFDQTtBQUlBO0FBQ0E7QUFJQTtBQUNBO0FBSUE7QUFDQTtBQUtBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7Ozs7Ozs7QUEvSUFBQUFBOyIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ },
/* 51 */
/***/ function(module, exports) {

	eval("module.exports = function disable_sidebar(params) {\n  $(params.root + ' .slider').slider('disable');\n  d3.selectAll(params.root + ' .btn').attr('disabled', true);\n  d3.select(params.viz.viz_svg).style('opacity', 0.70);\n\n  // d3.selectAll(params.root+' .category_section')\n  // .on('click', '')\n  // .select('text')\n  // .style('opacity',0.5);\n};//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTEuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vc3JjL3NpZGViYXIvZGlzYWJsZV9zaWRlYmFyLmpzPzhiMDkiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBkaXNhYmxlX3NpZGViYXIocGFyYW1zKXtcbiAgJChwYXJhbXMucm9vdCsnIC5zbGlkZXInKS5zbGlkZXIoJ2Rpc2FibGUnKTtcbiAgZDMuc2VsZWN0QWxsKHBhcmFtcy5yb290KycgLmJ0bicpLmF0dHIoJ2Rpc2FibGVkJyx0cnVlKTtcbiAgZDMuc2VsZWN0KCBwYXJhbXMudml6LnZpel9zdmcgKS5zdHlsZSgnb3BhY2l0eScsMC43MCk7XG4gIFxuICAvLyBkMy5zZWxlY3RBbGwocGFyYW1zLnJvb3QrJyAuY2F0ZWdvcnlfc2VjdGlvbicpXG4gIC8vIC5vbignY2xpY2snLCAnJylcbiAgLy8gLnNlbGVjdCgndGV4dCcpXG4gIC8vIC5zdHlsZSgnb3BhY2l0eScsMC41KTtcbn07XG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogc3JjL3NpZGViYXIvZGlzYWJsZV9zaWRlYmFyLmpzXG4gKiovIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7OztBQUpBIiwic291cmNlUm9vdCI6IiJ9");

/***/ },
/* 52 */
/***/ function(module, exports) {

	eval("module.exports = function enable_sidebar(params) {\n  $(params.root + ' .slider').slider('enable');\n  d3.selectAll(params.root + ' .btn').attr('disabled', null);\n\n  params.viz.run_trans = false;\n\n  // d3.selectAll(params.root+' .category_section')\n  //   .on('click', category_key_click)\n  //   .select('text')\n  //   .style('opacity',1);\n};//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTIuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vc3JjL3NpZGViYXIvZW5hYmxlX3NpZGViYXIuanM/ZmQ5NSJdLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGVuYWJsZV9zaWRlYmFyKHBhcmFtcyl7XG4gICQocGFyYW1zLnJvb3QrJyAuc2xpZGVyJykuc2xpZGVyKCdlbmFibGUnKTtcbiAgZDMuc2VsZWN0QWxsKHBhcmFtcy5yb290KycgLmJ0bicpLmF0dHIoJ2Rpc2FibGVkJyxudWxsKTtcbiAgICAgICAgXG4gIHBhcmFtcy52aXoucnVuX3RyYW5zID0gZmFsc2U7XG4gIFxuICAvLyBkMy5zZWxlY3RBbGwocGFyYW1zLnJvb3QrJyAuY2F0ZWdvcnlfc2VjdGlvbicpXG4gIC8vICAgLm9uKCdjbGljaycsIGNhdGVnb3J5X2tleV9jbGljaylcbiAgLy8gICAuc2VsZWN0KCd0ZXh0JylcbiAgLy8gICAuc3R5bGUoJ29wYWNpdHknLDEpO1xufTtcblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiBzcmMvc2lkZWJhci9lbmFibGVfc2lkZWJhci5qc1xuICoqLyJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7OztBQUxBIiwic291cmNlUm9vdCI6IiJ9");

/***/ },
/* 53 */
/***/ function(module, exports, __webpack_require__) {

	eval("var utils = __webpack_require__(2);\nvar update_network = __webpack_require__(44);\nvar disable_sidebar = __webpack_require__(51);\nvar enable_sidebar = __webpack_require__(52);\n\nmodule.exports = function set_up_filters(config, params, filter_type, initial_text) {\n\n  var row_filters = d3.select(params.root + ' .' + params.sidebar.sidebar_class).append('div').classed('row_filters', true);\n\n  row_filters.append('div').classed('viz_medium_text', true).classed(filter_type, true).text(initial_text);\n\n  row_filters.append('div').classed('slider_' + filter_type, true).classed('slider', true);\n\n  var views = params.network_data.views;\n\n  var all_views = _.filter(views, function (d) {\n    return utils.has(d, filter_type);\n  });\n\n  // // find views of current category\n  // if ( utils.has(all_views[0],'col_cat') ) {\n  //   // get views with current_col_cat\n  //   all_views = _.filter(all_views, function(d){\n  //     if (d.col_cat == params.current_col_cat){\n  //       return d;\n  //     }\n  //   })\n  // }\n\n  var inst_max = all_views.length - 1;\n\n  $('.slider_' + filter_type).slider({\n    value: 0,\n    min: 0,\n    max: inst_max,\n    step: 1,\n    stop: function () {\n\n      // get value\n      var inst_index = $(params.root + ' .slider_' + filter_type).slider(\"value\");\n\n      var inst_view = all_views[inst_index][filter_type];\n\n      var requested_view = {};\n      requested_view[filter_type] = inst_view;\n\n      disable_sidebar(params);\n\n      params = update_network(config, params, requested_view);\n\n      d3.select(params.root + ' .' + filter_type).text('Top rows: ' + inst_view + ' rows');\n\n      setTimeout(enable_sidebar, 2500, params);\n    }\n  });\n};//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vc3JjL2ZpbHRlcnMvc2V0X3VwX2ZpbHRlcnMuanM/NGQzNyJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgdXRpbHMgPSByZXF1aXJlKCcuLi91dGlscycpO1xudmFyIHVwZGF0ZV9uZXR3b3JrID0gcmVxdWlyZSgnLi4vbmV0d29yay91cGRhdGVfbmV0d29yaycpO1xudmFyIGRpc2FibGVfc2lkZWJhciA9IHJlcXVpcmUoJy4uL3NpZGViYXIvZGlzYWJsZV9zaWRlYmFyJyk7XG52YXIgZW5hYmxlX3NpZGViYXIgID0gcmVxdWlyZSgnLi4vc2lkZWJhci9lbmFibGVfc2lkZWJhcicpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIHNldF91cF9maWx0ZXJzKGNvbmZpZywgcGFyYW1zLCBmaWx0ZXJfdHlwZSwgaW5pdGlhbF90ZXh0KSB7XG5cbiAgdmFyIHJvd19maWx0ZXJzID0gZDMuc2VsZWN0KHBhcmFtcy5yb290KycgLicrcGFyYW1zLnNpZGViYXIuc2lkZWJhcl9jbGFzcylcbiAgICAuYXBwZW5kKCdkaXYnKVxuICAgIC5jbGFzc2VkKCdyb3dfZmlsdGVycycsdHJ1ZSk7XG5cbiAgcm93X2ZpbHRlcnNcbiAgICAuYXBwZW5kKCdkaXYnKVxuICAgIC5jbGFzc2VkKCd2aXpfbWVkaXVtX3RleHQnLHRydWUpXG4gICAgLmNsYXNzZWQoZmlsdGVyX3R5cGUsdHJ1ZSlcbiAgICAudGV4dChpbml0aWFsX3RleHQpO1xuXG4gIHJvd19maWx0ZXJzXG4gICAgLmFwcGVuZCgnZGl2JylcbiAgICAuY2xhc3NlZCgnc2xpZGVyXycrZmlsdGVyX3R5cGUsdHJ1ZSlcbiAgICAuY2xhc3NlZCgnc2xpZGVyJyx0cnVlKTtcblxuICB2YXIgdmlld3MgPSBwYXJhbXMubmV0d29ya19kYXRhLnZpZXdzO1xuXG4gIHZhciBhbGxfdmlld3MgPSBfLmZpbHRlcih2aWV3cywgZnVuY3Rpb24oZCkgeyByZXR1cm4gdXRpbHMuaGFzKGQsZmlsdGVyX3R5cGUpOyB9KTtcblxuICAvLyAvLyBmaW5kIHZpZXdzIG9mIGN1cnJlbnQgY2F0ZWdvcnkgXG4gIC8vIGlmICggdXRpbHMuaGFzKGFsbF92aWV3c1swXSwnY29sX2NhdCcpICkge1xuICAvLyAgIC8vIGdldCB2aWV3cyB3aXRoIGN1cnJlbnRfY29sX2NhdFxuICAvLyAgIGFsbF92aWV3cyA9IF8uZmlsdGVyKGFsbF92aWV3cywgZnVuY3Rpb24oZCl7XG4gIC8vICAgICBpZiAoZC5jb2xfY2F0ID09IHBhcmFtcy5jdXJyZW50X2NvbF9jYXQpe1xuICAvLyAgICAgICByZXR1cm4gZDtcbiAgLy8gICAgIH1cbiAgLy8gICB9KVxuICAvLyB9XG5cbiAgdmFyIGluc3RfbWF4ID0gYWxsX3ZpZXdzLmxlbmd0aCAtIDE7XG5cbiAgJCggJy5zbGlkZXJfJytmaWx0ZXJfdHlwZSApLnNsaWRlcih7XG4gICAgdmFsdWU6MCxcbiAgICBtaW46IDAsXG4gICAgbWF4OiBpbnN0X21heCxcbiAgICBzdGVwOiAxLFxuICAgIHN0b3A6IGZ1bmN0aW9uKCkge1xuXG4gICAgICAvLyBnZXQgdmFsdWVcbiAgICAgIHZhciBpbnN0X2luZGV4ID0gJCggcGFyYW1zLnJvb3QrJyAuc2xpZGVyXycrZmlsdGVyX3R5cGUgKS5zbGlkZXIoIFwidmFsdWVcIiApO1xuXG4gICAgICB2YXIgaW5zdF92aWV3ID0gYWxsX3ZpZXdzW2luc3RfaW5kZXhdW2ZpbHRlcl90eXBlXTtcblxuICAgICAgdmFyIHJlcXVlc3RlZF92aWV3ID0ge307XG4gICAgICByZXF1ZXN0ZWRfdmlld1tmaWx0ZXJfdHlwZV0gPSBpbnN0X3ZpZXc7XG5cbiAgICAgIGRpc2FibGVfc2lkZWJhcihwYXJhbXMpO1xuXG4gICAgICBwYXJhbXMgPSB1cGRhdGVfbmV0d29yayhjb25maWcsIHBhcmFtcywgcmVxdWVzdGVkX3ZpZXcpO1xuXG4gICAgICBkMy5zZWxlY3QocGFyYW1zLnJvb3QrJyAuJytmaWx0ZXJfdHlwZSkudGV4dCgnVG9wIHJvd3M6ICcraW5zdF92aWV3Kycgcm93cycpO1xuXG4gICAgICBzZXRUaW1lb3V0KGVuYWJsZV9zaWRlYmFyLCAyNTAwLCBwYXJhbXMpO1xuXG4gICAgfVxuICB9KTtcblxufTtcblxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIHNyYy9maWx0ZXJzL3NldF91cF9maWx0ZXJzLmpzXG4gKiovIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFHQTtBQUNBO0FBS0E7QUFDQTtBQUlBO0FBQ0E7QUFDQTtBQUFBO0FBQUE7QUFDQTs7Ozs7Ozs7Ozs7QUFwQkE7QUFDQTtBQWdDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBaEJBO0FBTEE7QUFqQ0EiLCJzb3VyY2VSb290IjoiIn0=");

/***/ },
/* 54 */,
/* 55 */
/***/ function(module, exports, __webpack_require__) {

	eval("var change_groups = __webpack_require__(41);\nvar search = __webpack_require__(29);\nvar reorder = __webpack_require__(42);\n\nmodule.exports = function ini_sidebar(params) {\n\n  var search_obj = search(params, params.network_data.row_nodes, 'name');\n\n  // col groups\n  $(params.root + ' .slider_col').slider({\n    value: 0.5,\n    min: 0,\n    max: 1,\n    step: 0.1,\n    slide: function (event, ui) {\n      $(\"#amount\").val(\"$\" + ui.value);\n      var inst_index = ui.value * 10;\n      change_groups(params, 'col', inst_index);\n    }\n  });\n\n  // row groups\n  $(\".slider_row\").slider({\n    value: 0.5,\n    min: 0,\n    max: 1,\n    step: 0.1,\n    slide: function (event, ui) {\n      $(\"#amount\").val(\"$\" + ui.value);\n      var inst_index = ui.value * 10;\n      change_groups(params, 'row', inst_index);\n    }\n  });\n\n  $(params.root + ' .gene_search_box').autocomplete({\n    source: search_obj.get_entities\n  });\n\n  // submit genes button\n  $(params.root + ' .gene_search_box').keyup(function (e) {\n    if (e.keyCode === 13) {\n      var search_gene = $('.gene_search_box').val();\n      search_obj.find_entity(search_gene);\n    }\n  });\n\n  $(params.root + ' .submit_gene_button').off().click(function () {\n    var gene = $('.gene_search_box').val();\n    search_obj.find_entity(gene);\n  });\n\n  $(params.root + ' .toggle_row_order .btn').off().click(function (evt) {\n    var order_id = $(evt.target).attr('name').split('_')[0];\n    d3.selectAll(params.root + ' .toggle_row_order .btn').classed('active', false);\n    d3.select(this).classed('active', true);\n    reorder(params, order_id, 'row');\n  });\n\n  $(params.root + ' .toggle_col_order .btn').off().click(function (evt) {\n    var order_id = $(evt.target).attr('name').split('_')[0];\n    d3.selectAll(params.root + ' .toggle_col_order .btn').classed('active', false);\n    d3.select(this).classed('active', true);\n    reorder(params, order_id, 'col');\n  });\n};//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTUuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vc3JjL3NpZGViYXIvaW5pX3NpZGViYXIuanM/YzVlNCJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgY2hhbmdlX2dyb3VwcyA9IHJlcXVpcmUoJy4uL2RlbmRyb2dyYW0vY2hhbmdlX2dyb3VwcycpO1xudmFyIHNlYXJjaCA9IHJlcXVpcmUoJy4uL3NlYXJjaCcpO1xudmFyIHJlb3JkZXIgPSByZXF1aXJlKCcuLi9yZW9yZGVyL2FsbF9yZW9yZGVyJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gaW5pX3NpZGViYXIocGFyYW1zKXtcblxuICB2YXIgc2VhcmNoX29iaiA9IHNlYXJjaChwYXJhbXMsIHBhcmFtcy5uZXR3b3JrX2RhdGEucm93X25vZGVzLCAnbmFtZScpO1xuXG4gIC8vIGNvbCBncm91cHNcbiAgJCggcGFyYW1zLnJvb3QrJyAuc2xpZGVyX2NvbCcgKS5zbGlkZXIoe1xuICAgIHZhbHVlOjAuNSxcbiAgICBtaW46IDAsXG4gICAgbWF4OiAxLFxuICAgIHN0ZXA6IDAuMSxcbiAgICBzbGlkZTogZnVuY3Rpb24oIGV2ZW50LCB1aSApIHtcbiAgICAgICQoIFwiI2Ftb3VudFwiICkudmFsKCBcIiRcIiArIHVpLnZhbHVlICk7XG4gICAgICB2YXIgaW5zdF9pbmRleCA9IHVpLnZhbHVlKjEwO1xuICAgICAgY2hhbmdlX2dyb3VwcyhwYXJhbXMsICdjb2wnLGluc3RfaW5kZXgpO1xuICAgIH1cbiAgfSk7XG5cbiAgLy8gcm93IGdyb3Vwc1xuICAkKCBcIi5zbGlkZXJfcm93XCIgKS5zbGlkZXIoe1xuICAgIHZhbHVlOjAuNSxcbiAgICBtaW46IDAsXG4gICAgbWF4OiAxLFxuICAgIHN0ZXA6IDAuMSxcbiAgICBzbGlkZTogZnVuY3Rpb24oIGV2ZW50LCB1aSApIHtcbiAgICAgICQoIFwiI2Ftb3VudFwiICkudmFsKCBcIiRcIiArIHVpLnZhbHVlICk7XG4gICAgICB2YXIgaW5zdF9pbmRleCA9IHVpLnZhbHVlKjEwO1xuICAgICAgY2hhbmdlX2dyb3VwcyhwYXJhbXMsICdyb3cnLGluc3RfaW5kZXgpO1xuICAgIH1cbiAgfSk7XG5cbiAgJChwYXJhbXMucm9vdCsnIC5nZW5lX3NlYXJjaF9ib3gnKS5hdXRvY29tcGxldGUoe1xuICAgIHNvdXJjZTogc2VhcmNoX29iai5nZXRfZW50aXRpZXNcbiAgfSk7XG5cbiAgLy8gc3VibWl0IGdlbmVzIGJ1dHRvblxuICAkKHBhcmFtcy5yb290KycgLmdlbmVfc2VhcmNoX2JveCcpLmtleXVwKGZ1bmN0aW9uKGUpIHtcbiAgICBpZiAoZS5rZXlDb2RlID09PSAxMykge1xuICAgICAgdmFyIHNlYXJjaF9nZW5lID0gJCgnLmdlbmVfc2VhcmNoX2JveCcpLnZhbCgpO1xuICAgICAgc2VhcmNoX29iai5maW5kX2VudGl0eShzZWFyY2hfZ2VuZSk7XG4gICAgfVxuICB9KTtcblxuICAkKHBhcmFtcy5yb290KycgLnN1Ym1pdF9nZW5lX2J1dHRvbicpLm9mZigpLmNsaWNrKGZ1bmN0aW9uKCkge1xuICAgIHZhciBnZW5lID0gJCgnLmdlbmVfc2VhcmNoX2JveCcpLnZhbCgpO1xuICAgIHNlYXJjaF9vYmouZmluZF9lbnRpdHkoZ2VuZSk7XG4gIH0pO1xuXG4gICQocGFyYW1zLnJvb3QrJyAudG9nZ2xlX3Jvd19vcmRlciAuYnRuJykub2ZmKCkuY2xpY2soZnVuY3Rpb24oZXZ0KSB7XG4gICAgdmFyIG9yZGVyX2lkID0gJChldnQudGFyZ2V0KS5hdHRyKCduYW1lJykuc3BsaXQoJ18nKVswXTtcbiAgICBkMy5zZWxlY3RBbGwocGFyYW1zLnJvb3QrJyAudG9nZ2xlX3Jvd19vcmRlciAuYnRuJykuY2xhc3NlZCgnYWN0aXZlJyxmYWxzZSk7XG4gICAgZDMuc2VsZWN0KHRoaXMpLmNsYXNzZWQoJ2FjdGl2ZScsdHJ1ZSk7XG4gICAgcmVvcmRlcihwYXJhbXMsIG9yZGVyX2lkLCdyb3cnKTtcbiAgfSk7XG5cbiAgJChwYXJhbXMucm9vdCsnIC50b2dnbGVfY29sX29yZGVyIC5idG4nKS5vZmYoKS5jbGljayhmdW5jdGlvbihldnQpIHtcbiAgICB2YXIgb3JkZXJfaWQgPSAkKGV2dC50YXJnZXQpLmF0dHIoJ25hbWUnKS5zcGxpdCgnXycpWzBdO1xuICAgIGQzLnNlbGVjdEFsbChwYXJhbXMucm9vdCsnIC50b2dnbGVfY29sX29yZGVyIC5idG4nKS5jbGFzc2VkKCdhY3RpdmUnLGZhbHNlKTtcbiAgICBkMy5zZWxlY3QodGhpcykuY2xhc3NlZCgnYWN0aXZlJyx0cnVlKTtcbiAgICByZW9yZGVyKHBhcmFtcywgb3JkZXJfaWQsJ2NvbCcpO1xuICB9KTtcblxufTtcblxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIHNyYy9zaWRlYmFyL2luaV9zaWRlYmFyLmpzXG4gKiovIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUhBO0FBTUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUhBO0FBTEE7QUFDQTs7QUFOQTtBQW1CQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBSEE7QUFMQTtBQUNBO0FBV0E7QUFDQTtBQURBO0FBQ0E7O0FBL0JBO0FBb0NBO0FBQ0E7QUFDQTtBQUZBO0FBREE7QUFDQTtBQU1BO0FBQ0E7QUFDQTtBQUZBO0FBQ0E7QUFJQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBSkE7QUFDQTtBQU1BO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFKQTtBQXREQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }
/******/ ]);